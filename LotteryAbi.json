{
    "allSourcePaths": {
        "7": "contracts/MyLottery.sol",
        "2": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Context.sol",
        "0": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
        "1": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/security/ReentrancyGuard.sol",
        "3": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Strings.sol"
    },
    "bytecode": "608060405234801561001057600080fd5b5061001a33610067565b6001805566b1a2bc2ec500006007556010805462ffff0019166201010017905560036005819055606460065560416009556014600a55600f600b819055600c9190915561012c90556100b7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611a5d806100c66000396000f3fe6080604052600436106102045760003560e01c80638da5cb5b11610118578063d718aea9116100a0578063f2fde38b1161006f578063f2fde38b14610560578063f71d96cb14610580578063f8b2cb4f146105a0578063faea18c6146105c0578063fe56f5a0146105d657600080fd5b8063d718aea914610500578063ddca3f4314610515578063ee44abb21461052b578063f2640e101461054057600080fd5b8063b4989917116100e7578063b498991714610458578063bcdb446b14610478578063be55c9c91461048d578063caa6fea4146104bd578063cd8cc844146104ea57600080fd5b80638da5cb5b146103f857806395d12000146104165780639bb577181461042c578063a6d811ea1461044257600080fd5b80634f8c70cf1161019b57806359fe8c841161016a57806359fe8c841461037557806369ebe78e1461038b578063715018a6146103a157806381447999146103b657806381fb84fb146103e257600080fd5b80634f8c70cf146102e75780634fb2e45d1461031f578063501d07801461033f578063569237101461035557600080fd5b80632d97902f116101d75780632d97902f1461029e57806336013189146102b4578063382e5e7a146102ca5780634a8466e9146102d257600080fd5b806304283412146102095780630b3ff2801461023257806316114acd1461025c5780632b58150b1461027e575b600080fd5b34801561021557600080fd5b5061021f60065481565b6040519081526020015b60405180910390f35b34801561023e57600080fd5b5060105461024c9060ff1681565b6040519015158152602001610229565b34801561026857600080fd5b5061027c6102773660046116e7565b6105f6565b005b34801561028a57600080fd5b5061027c610299366004611710565b6106e6565b3480156102aa57600080fd5b5061021f600f5481565b3480156102c057600080fd5b5061021f60045481565b61027c6106f3565b3480156102de57600080fd5b5061027c61091f565b3480156102f357600080fd5b50600354610307906001600160a01b031681565b6040516001600160a01b039091168152602001610229565b34801561032b57600080fd5b5061027c61033a3660046116e7565b610932565b34801561034b57600080fd5b5061021f600c5481565b34801561036157600080fd5b5061027c610370366004611710565b610943565b34801561038157600080fd5b5061021f60075481565b34801561039757600080fd5b5061021f60125481565b3480156103ad57600080fd5b5061027c610950565b3480156103c257600080fd5b506010546103d590610100900460ff1681565b604051610229919061173f565b3480156103ee57600080fd5b5061021f60095481565b34801561040457600080fd5b506000546001600160a01b0316610307565b34801561042257600080fd5b5061021f600a5481565b34801561043857600080fd5b5061021f600b5481565b34801561044e57600080fd5b5061021f60055481565b34801561046457600080fd5b5061027c610473366004611710565b610964565b34801561048457600080fd5b5061027c610971565b34801561049957600080fd5b5061024c6104a83660046116e7565b60086020526000908152604090205460ff1681565b3480156104c957600080fd5b506010546104dd9062010000900460ff1681565b6040516102299190611759565b3480156104f657600080fd5b5061021f600e5481565b34801561050c57600080fd5b5061027c6109e0565b34801561052157600080fd5b5061021f60115481565b34801561053757600080fd5b5061027c610b38565b34801561054c57600080fd5b5061027c61055b36600461176d565b610c20565b34801561056c57600080fd5b5061027c61057b3660046116e7565b610d46565b34801561058c57600080fd5b5061030761059b366004611710565b610dbc565b3480156105ac57600080fd5b5061021f6105bb3660046116e7565b610de6565b3480156105cc57600080fd5b5061021f600d5481565b3480156105e257600080fd5b5061027c6105f1366004611710565b610e5a565b6105fe610ea2565b6040516370a0823160e01b815230600482015281906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa15801561064e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106729190611799565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e191906117b2565b505050565b6106ee610ea2565b600f55565b60026001540361071e5760405162461bcd60e51b8152600401610715906117d4565b60405180910390fd5b60026001553360009081526008602052604090205460ff16156107755760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48195b9d195c9959608a1b6044820152606401610715565b336000908152600860205260408120805460ff19166001179055601054610100900460ff1660028111156107ab576107ab611729565b146107ee5760405162461bcd60e51b8152602060048201526013602482015272131bdd1d195c9e48139bdd081cdd185c9d1959606a1b6044820152606401610715565b600160105462010000900460ff16600181111561080d5761080d611729565b1461082a5760405162461bcd60e51b81526004016107159061180b565b600754341461083a600754610efc565b60405160200161084a9190611864565b604051602081830303815290604052906108775760405162461bcd60e51b815260040161071591906118b7565b5060065460025411156108d85760405162461bcd60e51b815260206004820152602360248201527f4d6178696d756d204e756d626572207265616368656420666f7220206c6f747460448201526265727960e81b6064820152608401610715565b60028054600181810183556000929092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b031916331790558055565b610927610ea2565b61092f611005565b50565b61093a610ea2565b61092f81610d46565b61094b610ea2565b600655565b610958610ea2565b6109626000611247565b565b61096c610ea2565b600555565b610979610ea2565b6001601054610100900460ff16600281111561099757610997611729565b146109b45760405162461bcd60e51b8152600401610715906118ea565b60405133904780156108fc02916000818181858888f1935050505015801561092f573d6000803e3d6000fd5b600260015403610a025760405162461bcd60e51b8152600401610715906117d4565b60026001556000601054610100900460ff166002811115610a2557610a25611729565b14610a685760405162461bcd60e51b8152602060048201526013602482015272131bdd1d195c9e48139bdd081cdd185c9d1959606a1b6044820152606401610715565b600160105462010000900460ff166001811115610a8757610a87611729565b14610aa45760405162461bcd60e51b81526004016107159061180b565b600f54600e54610ab49190611937565b4211610b025760405162461bcd60e51b815260206004820152601f60248201527f6d696e206c6f7474657279206475726174696f6e206e6f7420706173736564006044820152606401610715565b6005546002541015610b1b57610b16611297565b610b32565b6010805461ff001916610200179055610b326113f8565b60018055565b600260015403610b5a5760405162461bcd60e51b8152600401610715906117d4565b60026001908155601054610100900460ff166002811115610b7d57610b7d611729565b14610bca5760405162461bcd60e51b815260206004820152601760248201527f4c6f747465727920416c726561647920737461727465640000000000000000006044820152606401610715565b600160105462010000900460ff166001811115610be957610be9611729565b14610c065760405162461bcd60e51b81526004016107159061180b565b6010805461ff0019169055600060045542600e5560018055565b610c28610ea2565b6001601054610100900460ff166002811115610c4657610c46611729565b14610c635760405162461bcd60e51b8152600401610715906118ea565b6001601054610100900460ff166002811115610c8157610c81611729565b14610c9e5760405162461bcd60e51b8152600401610715906118ea565b606481610cab8486611937565b610cb59190611937565b1115610cf65760405162461bcd60e51b815260206004820152601060248201526f063616e206e6f74206f766572203130360841b6044820152606401610715565b60328310610d385760405162461bcd60e51b815260206004820152600f60248201526e063616e206e6f74206c65737320353608c1b6044820152606401610715565b600992909255600a55600b55565b610d4e610ea2565b6001600160a01b038116610db35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610715565b61092f81611247565b60028181548110610dcc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516370a0823160e01b815230600482015260009081906001600160a01b038416906370a0823190602401602060405180830381865afa158015610e2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e539190611799565b9392505050565b610e62610ea2565b6001601054610100900460ff166002811115610e8057610e80611729565b14610e9d5760405162461bcd60e51b8152600401610715906118ea565b600755565b6000546001600160a01b031633146109625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610715565b606081600003610f235750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f4d5780610f378161194f565b9150610f469050600a8361197e565b9150610f27565b60008167ffffffffffffffff811115610f6857610f68611992565b6040519080825280601f01601f191660200182016040528015610f92576020820181803683370190505b5090505b8415610ffd57610fa76001836119a8565b9150610fb4600a866119bf565b610fbf906030611937565b60f81b818381518110610fd457610fd46119d3565b60200101906001600160f81b031916908160001a905350610ff6600a8661197e565b9450610f96565b949350505050565b60006002601054610100900460ff16600281111561102557611025611729565b146110725760405162461bcd60e51b815260206004820152601760248201527f2073656e64207072697a652077726f6e672073746174650000000000000000006044820152606401610715565b601054479060ff16611183576000806110936000546001600160a01b031690565b6001600160a01b03166064600a54856110ac91906119e9565b6110b6919061197e565b604051600081818185875af1925050503d80600081146110f2576040519150601f19603f3d011682016040523d82523d6000602084013e6110f7565b606091505b506010805460ff1916831515908117909155919350915060ff16611180576000546001600160a01b03166001600160a01b03167f7a4c4fdf5d3172470d96d64c965b30de694852175efc7a6b546fb3bdbf76d1786064600a548661115b91906119e9565b611165919061197e565b60405190815260200160405180910390a26001935050505090565b50505b60035460095460009182916001600160a01b03909116906064906111a790866119e9565b6111b1919061197e565b604051600081818185875af1925050503d80600081146111ed576040519150601f19603f3d011682016040523d82523d6000602084013e6111f2565b606091505b50915091508161123d576003546009546001600160a01b03909116907f977e2c32be07c8aa27bfe58f2bf200e11eca859b94d36e76e645fcaf1d4cc9469060649061115b90876119e9565b6000935050505090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b60025460ff821610156113ef5760008060028360ff16815481106112c0576112c06119d3565b60009182526020822001546007546040516001600160a01b039092169290919081818185875af1925050503d8060008114611317576040519150601f19603f3d011682016040523d82523d6000602084013e61131c565b606091505b509150915060006008600060028660ff168154811061133d5761133d6119d3565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055816113da5760028360ff168154811061138c5761138c6119d3565b600091825260209182902001546007546040519081526001600160a01b03909116917f1198b3902400a4722f08a21eb834e8f872109a5dab83213639d3670a10d8d40a910160405180910390a25b505080806113e790611a08565b91505061129a565b506109626114e4565b600260008154811061140c5761140c6119d3565b600091825260209091200154600280546001600160a01b03909216916001908110611439576114396119d3565b600091825260209091200154600280546001600160a01b0390921691611461906001906119a8565b81548110611471576114716119d3565b600091825260209182902001546040516bffffffffffffffffffffffff19606095861b81169382019390935292841b8216603484015290921b909116604882015244605c82015242607c820152609c0160408051601f19818403018152919052805160209091012060045561096261158b565b60005b60025460ff821610156115565760006008600060028460ff1681548110611510576115106119d3565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061154e81611a08565b9150506114e7565b5060408051600081526020810191829052516115749160029161166d565b50601080546000600d5561ffff1916610100179055565b60006004546000036115d65760405162461bcd60e51b815260206004820152601460248201527363616e742066696e642072616e646f6d6e65737360601b6044820152606401610715565b6002546004546000916115e8916119bf565b9050600281815481106115fd576115fd6119d3565b600091825260209091200154600380546001600160a01b0319166001600160a01b03909216919091179055611630611005565b915081600003611646576116426114e4565b5050565b600d54611654906001611937565b600d819055600303611642576000600d556116426113f8565b8280548282559060005260206000209081019282156116c2579160200282015b828111156116c257825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061168d565b506116ce9291506116d2565b5090565b5b808211156116ce57600081556001016116d3565b6000602082840312156116f957600080fd5b81356001600160a01b0381168114610e5357600080fd5b60006020828403121561172257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061175357611753611729565b91905290565b602081016002831061175357611753611729565b60008060006060848603121561178257600080fd5b505081359360208301359350604090920135919050565b6000602082840312156117ab57600080fd5b5051919050565b6000602082840312156117c457600080fd5b81518015158114610e5357600080fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600f908201526e131bdd1d195c9e4814dd1bdc1c1959608a1b604082015260600190565b60005b8381101561184f578181015183820152602001611837565b8381111561185e576000848401525b50505050565b7f456e74727920666565206d75737420626520657175616c20746f3a200000000081526000825161189c81601c850160208701611834565b630408ae8d60e31b601c939091019283015250602001919050565b60208152600082518060208401526118d6816040850160208701611834565b601f01601f19169190910160400192915050565b6020808252601d908201527f43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561194a5761194a611921565b500190565b60006001820161196157611961611921565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261198d5761198d611968565b500490565b634e487b7160e01b600052604160045260246000fd5b6000828210156119ba576119ba611921565b500390565b6000826119ce576119ce611968565b500690565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611a0357611a03611921565b500290565b600060ff821660ff8103611a1e57611a1e611921565b6001019291505056fea26469706673582212208b46c627e6b76f1225cd27a0f5eca081456248a46c3af05feb18087e601b1a5564736f6c634300080e0033",
    "bytecodeSha1": "142cc0323ee34ced4ed960d281a7f3ebe5227472",
    "coverageMap": {
        "statements": {
            "7": {
                "MyLottery.recoverTokens": {
                    "1": [
                        7865,
                        7923
                    ]
                },
                "MyLottery.setLotteryDuration": {
                    "2": [
                        6824,
                        6851
                    ]
                },
                "MyLottery.enter_lottery": {
                    "3": [
                        3320,
                        3382
                    ],
                    "4": [
                        3392,
                        3424
                    ],
                    "5": [
                        3434,
                        3501
                    ],
                    "6": [
                        3511,
                        3575
                    ],
                    "7": [
                        3585,
                        3794
                    ],
                    "8": [
                        3804,
                        3923
                    ],
                    "9": [
                        3934,
                        3967
                    ]
                },
                "MyLottery.retrySendPrizes": {
                    "10": [
                        8609,
                        8621
                    ]
                },
                "MyLottery.transferOwner": {
                    "11": [
                        10832,
                        10859
                    ]
                },
                "MyLottery.setMaximumParticipants": {
                    "12": [
                        7203,
                        7245
                    ]
                },
                "MyLottery.setMinumumParticipants": {
                    "14": [
                        6693,
                        6735
                    ]
                },
                "MyLottery.recoverEth": {
                    "15": [
                        7559,
                        7672
                    ],
                    "16": [
                        7682,
                        7733
                    ]
                },
                "MyLottery.end_lottery": {
                    "17": [
                        4388,
                        4455
                    ],
                    "18": [
                        4465,
                        4527
                    ],
                    "19": [
                        4537,
                        4665
                    ],
                    "20": [
                        4786,
                        4810
                    ],
                    "21": [
                        4841,
                        4889
                    ],
                    "22": [
                        4903,
                        4921
                    ]
                },
                "MyLottery.start_lottery": {
                    "23": [
                        4035,
                        4142
                    ],
                    "24": [
                        4152,
                        4214
                    ],
                    "25": [
                        4224,
                        4258
                    ],
                    "26": [
                        4268,
                        4282
                    ],
                    "27": [
                        4292,
                        4322
                    ]
                },
                "MyLottery.setPrizePercents": {
                    "28": [
                        6029,
                        6142
                    ],
                    "29": [
                        6152,
                        6265
                    ],
                    "30": [
                        6275,
                        6393
                    ],
                    "31": [
                        6403,
                        6449
                    ],
                    "32": [
                        6459,
                        6487
                    ],
                    "33": [
                        6497,
                        6525
                    ],
                    "34": [
                        6535,
                        6569
                    ]
                },
                "MyLottery.setEntranceFee": {
                    "37": [
                        6936,
                        7049
                    ],
                    "38": [
                        7059,
                        7079
                    ]
                },
                "MyLottery.sendPrizes": {
                    "48": [
                        8693,
                        8812
                    ],
                    "49": [
                        9132,
                        9148
                    ],
                    "50": [
                        9196,
                        9320
                    ],
                    "51": [
                        9338,
                        9346
                    ],
                    "52": [
                        9535,
                        9653
                    ],
                    "53": [
                        9695,
                        9703
                    ]
                },
                "MyLottery.not_enough_participant": {
                    "56": [
                        10522,
                        10555
                    ],
                    "57": [
                        10651,
                        10701
                    ],
                    "58": [
                        10311,
                        10314
                    ],
                    "59": [
                        10735,
                        10749
                    ]
                },
                "MyLottery.calculate_winner": {
                    "60": [
                        5442,
                        5836
                    ],
                    "61": [
                        5846,
                        5859
                    ]
                },
                "MyLottery.clearPlayers": {
                    "62": [
                        10972,
                        11005
                    ],
                    "63": [
                        10953,
                        10956
                    ],
                    "64": [
                        11025,
                        11059
                    ],
                    "65": [
                        11069,
                        11105
                    ],
                    "66": [
                        11115,
                        11128
                    ],
                    "67": [
                        11138,
                        11155
                    ]
                },
                "MyLottery.afterFinish": {
                    "68": [
                        8039,
                        8087
                    ],
                    "69": [
                        8158,
                        8195
                    ],
                    "70": [
                        8206,
                        8229
                    ],
                    "71": [
                        8273,
                        8287
                    ],
                    "72": [
                        8318,
                        8343
                    ],
                    "73": [
                        8395,
                        8408
                    ],
                    "74": [
                        8426,
                        8444
                    ]
                }
            },
            "2": {
                "Context._msgSender": {
                    "39": [
                        712,
                        729
                    ]
                }
            },
            "0": {
                "Ownable.owner": {
                    "0": [
                        1266,
                        1279
                    ]
                },
                "Ownable.renounceOwnership": {
                    "13": [
                        1895,
                        1925
                    ]
                },
                "Ownable.transferOwnership": {
                    "35": [
                        2161,
                        2234
                    ],
                    "36": [
                        2244,
                        2272
                    ]
                },
                "Ownable._checkOwner": {
                    "40": [
                        1414,
                        1482
                    ]
                },
                "Ownable._transferOwnership": {
                    "54": [
                        2541,
                        2558
                    ],
                    "55": [
                        2568,
                        2613
                    ]
                }
            },
            "1": {},
            "3": {
                "Strings.toString": {
                    "41": [
                        691,
                        701
                    ],
                    "42": [
                        807,
                        815
                    ],
                    "43": [
                        829,
                        839
                    ],
                    "44": [
                        941,
                        952
                    ],
                    "45": [
                        966,
                        1022
                    ],
                    "46": [
                        1036,
                        1047
                    ],
                    "47": [
                        1067,
                        1088
                    ]
                }
            }
        },
        "branches": {
            "7": {
                "MyLottery.enter_lottery": {
                    "75": [
                        3328,
                        3362,
                        true
                    ],
                    "76": [
                        3442,
                        3477,
                        true
                    ],
                    "77": [
                        3606,
                        3627,
                        true
                    ],
                    "78": [
                        3825,
                        3862,
                        true
                    ]
                },
                "MyLottery.recoverEth": {
                    "79": [
                        7580,
                        7617,
                        true
                    ]
                },
                "MyLottery.end_lottery": {
                    "80": [
                        4396,
                        4431,
                        true
                    ],
                    "81": [
                        4473,
                        4507,
                        true
                    ],
                    "82": [
                        4558,
                        4608,
                        true
                    ],
                    "83": [
                        4734,
                        4770,
                        false
                    ]
                },
                "MyLottery.start_lottery": {
                    "84": [
                        4056,
                        4093,
                        true
                    ],
                    "85": [
                        4160,
                        4194,
                        true
                    ]
                },
                "MyLottery.setPrizePercents": {
                    "86": [
                        6050,
                        6087,
                        true
                    ],
                    "87": [
                        6173,
                        6210,
                        true
                    ],
                    "88": [
                        6296,
                        6351,
                        true
                    ],
                    "89": [
                        6411,
                        6429,
                        true
                    ]
                },
                "MyLottery.setEntranceFee": {
                    "90": [
                        6957,
                        6994,
                        true
                    ]
                },
                "MyLottery.sendPrizes": {
                    "91": [
                        8714,
                        8763,
                        true
                    ],
                    "92": [
                        8893,
                        8902,
                        false
                    ],
                    "93": [
                        9167,
                        9176,
                        false
                    ],
                    "94": [
                        9515,
                        9519,
                        false
                    ]
                },
                "MyLottery.not_enough_participant": {
                    "95": [
                        10627,
                        10631,
                        false
                    ]
                },
                "MyLottery.afterFinish": {
                    "96": [
                        8047,
                        8062,
                        true
                    ],
                    "97": [
                        8244,
                        8257,
                        false
                    ],
                    "98": [
                        8361,
                        8375,
                        false
                    ]
                }
            },
            "2": {},
            "0": {
                "Ownable.transferOwnership": {
                    "99": [
                        2169,
                        2191,
                        true
                    ]
                },
                "Ownable._checkOwner": {
                    "100": [
                        1422,
                        1445,
                        true
                    ]
                }
            },
            "1": {},
            "3": {
                "Strings.toString": {
                    "101": [
                        665,
                        675,
                        false
                    ]
                }
            }
        }
    },
    "dependencies": [
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Context",
        "IERC20",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Ownable",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/ReentrancyGuard",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Strings"
    ],
    "offset": [
        1164,
        11190
    ],
    "pcMap": {
        "0": {
            "op": "PUSH1",
            "value": "0x80",
            "path": "7",
            "offset": [
                1164,
                11190
            ]
        },
        "2": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "4": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "5": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "7": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "8": {
            "op": "LT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "9": {
            "op": "PUSH2",
            "value": "0x204",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "12": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "13": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "15": {
            "op": "CALLDATALOAD",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "16": {
            "op": "PUSH1",
            "value": "0xE0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "18": {
            "op": "SHR",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "19": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "20": {
            "op": "PUSH4",
            "value": "0x8DA5CB5B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "25": {
            "op": "GT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "26": {
            "op": "PUSH2",
            "value": "0x118",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "29": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "30": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "31": {
            "op": "PUSH4",
            "value": "0xD718AEA9",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "36": {
            "op": "GT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "37": {
            "op": "PUSH2",
            "value": "0xA0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "40": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "41": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "42": {
            "op": "PUSH4",
            "value": "0xF2FDE38B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "47": {
            "op": "GT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "48": {
            "op": "PUSH2",
            "value": "0x6F",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "51": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "52": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "53": {
            "op": "PUSH4",
            "value": "0xF2FDE38B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "58": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "59": {
            "op": "PUSH2",
            "value": "0x560",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "62": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "63": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "64": {
            "op": "PUSH4",
            "value": "0xF71D96CB",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "69": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "70": {
            "op": "PUSH2",
            "value": "0x580",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "73": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "74": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "75": {
            "op": "PUSH4",
            "value": "0xF8B2CB4F",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "80": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "81": {
            "op": "PUSH2",
            "value": "0x5A0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "84": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "85": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "86": {
            "op": "PUSH4",
            "value": "0xFAEA18C6",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "91": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "92": {
            "op": "PUSH2",
            "value": "0x5C0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "95": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "96": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "97": {
            "op": "PUSH4",
            "value": "0xFE56F5A0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "102": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "103": {
            "op": "PUSH2",
            "value": "0x5D6",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "106": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "107": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "109": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "110": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "111": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "112": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "113": {
            "op": "PUSH4",
            "value": "0xD718AEA9",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "118": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "119": {
            "op": "PUSH2",
            "value": "0x500",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "122": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "123": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "124": {
            "op": "PUSH4",
            "value": "0xDDCA3F43",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "129": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "130": {
            "op": "PUSH2",
            "value": "0x515",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "133": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "134": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "135": {
            "op": "PUSH4",
            "value": "0xEE44ABB2",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "140": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "141": {
            "op": "PUSH2",
            "value": "0x52B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "144": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "145": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "146": {
            "op": "PUSH4",
            "value": "0xF2640E10",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "151": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "152": {
            "op": "PUSH2",
            "value": "0x540",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "155": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "156": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "158": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "159": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "160": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "161": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "162": {
            "op": "PUSH4",
            "value": "0xB4989917",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "167": {
            "op": "GT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "168": {
            "op": "PUSH2",
            "value": "0xE7",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "171": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "172": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "173": {
            "op": "PUSH4",
            "value": "0xB4989917",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "178": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "179": {
            "op": "PUSH2",
            "value": "0x458",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "182": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "183": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "184": {
            "op": "PUSH4",
            "value": "0xBCDB446B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "189": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "190": {
            "op": "PUSH2",
            "value": "0x478",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "193": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "194": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "195": {
            "op": "PUSH4",
            "value": "0xBE55C9C9",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "200": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "201": {
            "op": "PUSH2",
            "value": "0x48D",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "204": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "205": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "206": {
            "op": "PUSH4",
            "value": "0xCAA6FEA4",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "211": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "212": {
            "op": "PUSH2",
            "value": "0x4BD",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "215": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "216": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "217": {
            "op": "PUSH4",
            "value": "0xCD8CC844",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "222": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "223": {
            "op": "PUSH2",
            "value": "0x4EA",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "226": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "227": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "229": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "230": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "231": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "232": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "233": {
            "op": "PUSH4",
            "value": "0x8DA5CB5B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "238": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "239": {
            "op": "PUSH2",
            "value": "0x3F8",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "242": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "243": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "244": {
            "op": "PUSH4",
            "value": "0x95D12000",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "249": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "250": {
            "op": "PUSH2",
            "value": "0x416",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "253": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "254": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "255": {
            "op": "PUSH4",
            "value": "0x9BB57718",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "260": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "261": {
            "op": "PUSH2",
            "value": "0x42C",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "264": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "265": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "266": {
            "op": "PUSH4",
            "value": "0xA6D811EA",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "271": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "272": {
            "op": "PUSH2",
            "value": "0x442",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "275": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "276": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "278": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "279": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "280": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "281": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "282": {
            "op": "PUSH4",
            "value": "0x4F8C70CF",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "287": {
            "op": "GT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "288": {
            "op": "PUSH2",
            "value": "0x19B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "291": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "292": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "293": {
            "op": "PUSH4",
            "value": "0x59FE8C84",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "298": {
            "op": "GT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "299": {
            "op": "PUSH2",
            "value": "0x16A",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "302": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "303": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "304": {
            "op": "PUSH4",
            "value": "0x59FE8C84",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "309": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "310": {
            "op": "PUSH2",
            "value": "0x375",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "313": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "314": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "315": {
            "op": "PUSH4",
            "value": "0x69EBE78E",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "320": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "321": {
            "op": "PUSH2",
            "value": "0x38B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "324": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "325": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "326": {
            "op": "PUSH4",
            "value": "0x715018A6",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "331": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "332": {
            "op": "PUSH2",
            "value": "0x3A1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "335": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "336": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "337": {
            "op": "PUSH4",
            "value": "0x81447999",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "342": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "343": {
            "op": "PUSH2",
            "value": "0x3B6",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "346": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "347": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "348": {
            "op": "PUSH4",
            "value": "0x81FB84FB",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "353": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "354": {
            "op": "PUSH2",
            "value": "0x3E2",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "357": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "358": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "360": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "361": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "362": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "363": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "364": {
            "op": "PUSH4",
            "value": "0x4F8C70CF",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "369": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "370": {
            "op": "PUSH2",
            "value": "0x2E7",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "373": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "374": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "375": {
            "op": "PUSH4",
            "value": "0x4FB2E45D",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "380": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "381": {
            "op": "PUSH2",
            "value": "0x31F",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "384": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "385": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "386": {
            "op": "PUSH4",
            "value": "0x501D0780",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "391": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "392": {
            "op": "PUSH2",
            "value": "0x33F",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "395": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "396": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "397": {
            "op": "PUSH4",
            "value": "0x56923710",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "402": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "403": {
            "op": "PUSH2",
            "value": "0x355",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "406": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "407": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "409": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "410": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "411": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "412": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "413": {
            "op": "PUSH4",
            "value": "0x2D97902F",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "418": {
            "op": "GT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "419": {
            "op": "PUSH2",
            "value": "0x1D7",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "422": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "423": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "424": {
            "op": "PUSH4",
            "value": "0x2D97902F",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "429": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "430": {
            "op": "PUSH2",
            "value": "0x29E",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "433": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "434": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "435": {
            "op": "PUSH4",
            "value": "0x36013189",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "440": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "441": {
            "op": "PUSH2",
            "value": "0x2B4",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "444": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "445": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "446": {
            "op": "PUSH4",
            "value": "0x382E5E7A",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "451": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "452": {
            "op": "PUSH2",
            "value": "0x2CA",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "455": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "456": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "457": {
            "op": "PUSH4",
            "value": "0x4A8466E9",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "462": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "463": {
            "op": "PUSH2",
            "value": "0x2D2",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "466": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "467": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "469": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "470": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "471": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "472": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "473": {
            "op": "PUSH4",
            "value": "0x4283412",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "478": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "479": {
            "op": "PUSH2",
            "value": "0x209",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "482": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "483": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "484": {
            "op": "PUSH4",
            "value": "0xB3FF280",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "489": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "490": {
            "op": "PUSH2",
            "value": "0x232",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "493": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "494": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "495": {
            "op": "PUSH4",
            "value": "0x16114ACD",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "500": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "501": {
            "op": "PUSH2",
            "value": "0x25C",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "504": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "505": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "506": {
            "op": "PUSH4",
            "value": "0x2B58150B",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "511": {
            "op": "EQ",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "512": {
            "op": "PUSH2",
            "value": "0x27E",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "515": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "516": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "517": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "519": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "520": {
            "op": "REVERT",
            "first_revert": true,
            "path": "7",
            "offset": [
                1164,
                11190
            ],
            "fn": null
        },
        "521": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1394,
                1428
            ]
        },
        "522": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "523": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "524": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "525": {
            "op": "PUSH2",
            "value": "0x215",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "528": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "529": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "531": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "532": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "533": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "534": {
            "op": "POP",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "535": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "538": {
            "op": "PUSH1",
            "value": "0x6",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "540": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "541": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "542": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "543": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "544": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "546": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "547": {
            "op": "SWAP1"
        },
        "548": {
            "op": "DUP2"
        },
        "549": {
            "op": "MSTORE"
        },
        "550": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "552": {
            "op": "ADD"
        },
        "553": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1394,
                1428
            ]
        },
        "554": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "556": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "557": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "558": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "559": {
            "op": "SUB",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "560": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "561": {
            "op": "RETURN",
            "path": "7",
            "offset": [
                1394,
                1428
            ],
            "fn": null
        },
        "562": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1803,
                1824
            ]
        },
        "563": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "564": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "565": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "566": {
            "op": "PUSH2",
            "value": "0x23E",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "569": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "570": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "572": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "573": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "574": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "575": {
            "op": "POP"
        },
        "576": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                1803,
                1824
            ]
        },
        "578": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "579": {
            "op": "PUSH2",
            "value": "0x24C",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "582": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "583": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "585": {
            "op": "AND",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "586": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "587": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "588": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "589": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "591": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                1803,
                1824
            ],
            "fn": null
        },
        "592": {
            "op": "SWAP1"
        },
        "593": {
            "op": "ISZERO"
        },
        "594": {
            "op": "ISZERO"
        },
        "595": {
            "op": "DUP2"
        },
        "596": {
            "op": "MSTORE"
        },
        "597": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "599": {
            "op": "ADD"
        },
        "600": {
            "op": "PUSH2",
            "value": "0x229",
            "path": "7",
            "offset": [
                1803,
                1824
            ]
        },
        "603": {
            "op": "JUMP"
        },
        "604": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "605": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "606": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "607": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "608": {
            "op": "PUSH2",
            "value": "0x268",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "611": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "612": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "614": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "615": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "616": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "617": {
            "op": "POP"
        },
        "618": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "621": {
            "op": "PUSH2",
            "value": "0x277",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "624": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "625": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "627": {
            "op": "PUSH2",
            "value": "0x16E7",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "630": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "631": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "632": {
            "op": "PUSH2",
            "value": "0x5F6",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "635": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "636": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "637": {
            "op": "STOP",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "638": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "639": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "640": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "641": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "642": {
            "op": "PUSH2",
            "value": "0x28A",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "645": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "646": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "648": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "649": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "650": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "651": {
            "op": "POP"
        },
        "652": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "655": {
            "op": "PUSH2",
            "value": "0x299",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "658": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "659": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "661": {
            "op": "PUSH2",
            "value": "0x1710",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "664": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "665": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "666": {
            "op": "PUSH2",
            "value": "0x6E6",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "669": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "670": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1767,
                1797
            ]
        },
        "671": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "672": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "673": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "674": {
            "op": "PUSH2",
            "value": "0x2AA",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "677": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "678": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "680": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "681": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "682": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "683": {
            "op": "POP",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "684": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "687": {
            "op": "PUSH1",
            "value": "0xF",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "689": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "690": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "691": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1767,
                1797
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "692": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1323,
                1348
            ]
        },
        "693": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "694": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "695": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "696": {
            "op": "PUSH2",
            "value": "0x2C0",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "699": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "700": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "702": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "703": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "704": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "705": {
            "op": "POP",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "706": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "709": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "711": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "712": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "713": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1323,
                1348
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "714": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3257,
                3974
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "715": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                3257,
                3974
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "718": {
            "op": "PUSH2",
            "value": "0x6F3",
            "path": "7",
            "offset": [
                3257,
                3974
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "721": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3257,
                3974
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "722": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "723": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "724": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "725": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "726": {
            "op": "PUSH2",
            "value": "0x2DE",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "729": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "730": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "732": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "733": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "734": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "735": {
            "op": "POP",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "736": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "739": {
            "op": "PUSH2",
            "value": "0x91F",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "742": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "743": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1255,
                1290
            ]
        },
        "744": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "745": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "746": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "747": {
            "op": "PUSH2",
            "value": "0x2F3",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "750": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "751": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "753": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "754": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "755": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "756": {
            "op": "POP"
        },
        "757": {
            "op": "PUSH1",
            "value": "0x3",
            "path": "7",
            "offset": [
                1255,
                1290
            ]
        },
        "759": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "760": {
            "op": "PUSH2",
            "value": "0x307",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "763": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "764": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "766": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "768": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "770": {
            "op": "SHL"
        },
        "771": {
            "op": "SUB"
        },
        "772": {
            "op": "AND",
            "path": "7",
            "offset": [
                1255,
                1290
            ]
        },
        "773": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "774": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "775": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "776": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "778": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                1255,
                1290
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "779": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "781": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "783": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "785": {
            "op": "SHL"
        },
        "786": {
            "op": "SUB"
        },
        "787": {
            "op": "SWAP1"
        },
        "788": {
            "op": "SWAP2"
        },
        "789": {
            "op": "AND"
        },
        "790": {
            "op": "DUP2"
        },
        "791": {
            "op": "MSTORE"
        },
        "792": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "794": {
            "op": "ADD"
        },
        "795": {
            "op": "PUSH2",
            "value": "0x229",
            "path": "7",
            "offset": [
                1255,
                1290
            ]
        },
        "798": {
            "op": "JUMP"
        },
        "799": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "800": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "801": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "802": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "803": {
            "op": "PUSH2",
            "value": "0x32B",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "806": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "807": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "809": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "810": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "811": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "812": {
            "op": "POP"
        },
        "813": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "816": {
            "op": "PUSH2",
            "value": "0x33A",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "819": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "820": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "822": {
            "op": "PUSH2",
            "value": "0x16E7",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "825": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "826": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "827": {
            "op": "PUSH2",
            "value": "0x932",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "830": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "831": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1670,
                1698
            ]
        },
        "832": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "833": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "834": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "835": {
            "op": "PUSH2",
            "value": "0x34B",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "838": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "839": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "841": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "842": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "843": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "844": {
            "op": "POP",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "845": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "848": {
            "op": "PUSH1",
            "value": "0xC",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "850": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "851": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "852": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1670,
                1698
            ],
            "fn": "MyLottery.transferOwner"
        },
        "853": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "854": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "855": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "856": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "857": {
            "op": "PUSH2",
            "value": "0x361",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "860": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "861": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "863": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "864": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "865": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "866": {
            "op": "POP"
        },
        "867": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "870": {
            "op": "PUSH2",
            "value": "0x370",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "873": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "874": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "876": {
            "op": "PUSH2",
            "value": "0x1710",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "879": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "880": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "881": {
            "op": "PUSH2",
            "value": "0x943",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "884": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "885": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1434,
                1457
            ]
        },
        "886": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "887": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "888": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "889": {
            "op": "PUSH2",
            "value": "0x381",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "892": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "893": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "895": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "896": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "897": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "898": {
            "op": "POP",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "899": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "902": {
            "op": "PUSH1",
            "value": "0x7",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "904": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "905": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "906": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1434,
                1457
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "907": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2477,
                2499
            ]
        },
        "908": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "909": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "910": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "911": {
            "op": "PUSH2",
            "value": "0x397",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "914": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "915": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "917": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "918": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "919": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "920": {
            "op": "POP",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "921": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "924": {
            "op": "PUSH1",
            "value": "0x12",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "926": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "927": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "928": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                2477,
                2499
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "929": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "930": {
            "op": "CALLVALUE",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "931": {
            "op": "DUP1",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "932": {
            "op": "ISZERO",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "933": {
            "op": "PUSH2",
            "value": "0x3AD",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "936": {
            "op": "JUMPI",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "937": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "939": {
            "op": "DUP1",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "940": {
            "op": "REVERT",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "941": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "942": {
            "op": "POP",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "943": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "946": {
            "op": "PUSH2",
            "value": "0x950",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "949": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "950": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2316,
                2350
            ]
        },
        "951": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "952": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "953": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "954": {
            "op": "PUSH2",
            "value": "0x3C2",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "957": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "958": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "960": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "961": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "962": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "963": {
            "op": "POP"
        },
        "964": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                2316,
                2350
            ]
        },
        "966": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "967": {
            "op": "PUSH2",
            "value": "0x3D5",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "970": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "971": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "974": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "975": {
            "op": "DIV",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "976": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "978": {
            "op": "AND",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "979": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "980": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "981": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "982": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "984": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "985": {
            "op": "PUSH2",
            "value": "0x229",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "988": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "989": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "990": {
            "op": "PUSH2",
            "value": "0x173F",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "993": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                2316,
                2350
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "994": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1568,
                1595
            ]
        },
        "995": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "996": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "997": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "998": {
            "op": "PUSH2",
            "value": "0x3EE",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1001": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1002": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1004": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1005": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1006": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1007": {
            "op": "POP",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1008": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1011": {
            "op": "PUSH1",
            "value": "0x9",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1013": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1014": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1015": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1568,
                1595
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "1016": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1017": {
            "op": "CALLVALUE",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1018": {
            "op": "DUP1",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1019": {
            "op": "ISZERO",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1020": {
            "op": "PUSH2",
            "value": "0x404",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1023": {
            "op": "JUMPI",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1024": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1026": {
            "op": "DUP1",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1027": {
            "op": "REVERT",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1028": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1029": {
            "op": "POP"
        },
        "1030": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                1247,
                1254
            ],
            "fn": "Ownable.owner"
        },
        "1032": {
            "op": "SLOAD",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner",
            "statement": 0
        },
        "1033": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1035": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1037": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1039": {
            "op": "SHL"
        },
        "1040": {
            "op": "SUB"
        },
        "1041": {
            "op": "AND",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "1042": {
            "op": "PUSH2",
            "value": "0x307",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1045": {
            "op": "JUMP",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "1046": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1601,
                1628
            ]
        },
        "1047": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1048": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1049": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1050": {
            "op": "PUSH2",
            "value": "0x422",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1053": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1054": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1056": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1057": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1058": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1059": {
            "op": "POP",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1060": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1063": {
            "op": "PUSH1",
            "value": "0xA",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1065": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1066": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1067": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1601,
                1628
            ],
            "fn": "Ownable.owner"
        },
        "1068": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1634,
                1664
            ]
        },
        "1069": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1070": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1071": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1072": {
            "op": "PUSH2",
            "value": "0x438",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1075": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1076": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1078": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1079": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1080": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1081": {
            "op": "POP",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1082": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1085": {
            "op": "PUSH1",
            "value": "0xB",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1087": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1088": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1089": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1634,
                1664
            ],
            "fn": "Ownable.owner"
        },
        "1090": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1354,
                1388
            ]
        },
        "1091": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1092": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1093": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1094": {
            "op": "PUSH2",
            "value": "0x44E",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1097": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1098": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1100": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1101": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1102": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1103": {
            "op": "POP",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1104": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1107": {
            "op": "PUSH1",
            "value": "0x5",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1109": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1110": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1111": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1354,
                1388
            ],
            "fn": "Ownable.owner"
        },
        "1112": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1113": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1114": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1115": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1116": {
            "op": "PUSH2",
            "value": "0x464",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1119": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1120": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1122": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1123": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1124": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1125": {
            "op": "POP"
        },
        "1126": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1129": {
            "op": "PUSH2",
            "value": "0x473",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1132": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1133": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1135": {
            "op": "PUSH2",
            "value": "0x1710",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1138": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1139": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1140": {
            "op": "PUSH2",
            "value": "0x964",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1143": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "1144": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1145": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1146": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1147": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1148": {
            "op": "PUSH2",
            "value": "0x484",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1151": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1152": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1154": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1155": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1156": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1157": {
            "op": "POP",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1158": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1161": {
            "op": "PUSH2",
            "value": "0x971",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1164": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1165": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1463,
                1508
            ]
        },
        "1166": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1167": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1168": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1169": {
            "op": "PUSH2",
            "value": "0x499",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1172": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1173": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1175": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1176": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1177": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1178": {
            "op": "POP"
        },
        "1179": {
            "op": "PUSH2",
            "value": "0x24C",
            "path": "7",
            "offset": [
                1463,
                1508
            ]
        },
        "1182": {
            "op": "PUSH2",
            "value": "0x4A8",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1185": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1186": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1188": {
            "op": "PUSH2",
            "value": "0x16E7",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1191": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1192": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1193": {
            "op": "PUSH1",
            "value": "0x8",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1195": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1197": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1198": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1200": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1201": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1202": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1203": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1205": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1206": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1207": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1208": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1210": {
            "op": "AND",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1211": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1212": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1463,
                1508
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1213": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2421,
                2447
            ]
        },
        "1214": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1215": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1216": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1217": {
            "op": "PUSH2",
            "value": "0x4C9",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1220": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1221": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1223": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1224": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1225": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1226": {
            "op": "POP"
        },
        "1227": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                2421,
                2447
            ]
        },
        "1229": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1230": {
            "op": "PUSH2",
            "value": "0x4DD",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1233": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1234": {
            "op": "PUSH3",
            "value": "0x10000",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1238": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1239": {
            "op": "DIV",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1240": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1242": {
            "op": "AND",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1243": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1244": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1245": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1246": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1248": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1249": {
            "op": "PUSH2",
            "value": "0x229",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1252": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1253": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1254": {
            "op": "PUSH2",
            "value": "0x1759",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1257": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                2421,
                2447
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1258": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1734,
                1761
            ]
        },
        "1259": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1260": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1261": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1262": {
            "op": "PUSH2",
            "value": "0x4F6",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1265": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1266": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1268": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1269": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1270": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1271": {
            "op": "POP",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1272": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1275": {
            "op": "PUSH1",
            "value": "0xE",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1277": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1278": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1279": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1734,
                1761
            ],
            "fn": "MyLottery.recoverEth"
        },
        "1280": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1281": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1282": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1283": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1284": {
            "op": "PUSH2",
            "value": "0x50C",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1287": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1288": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1290": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1291": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1292": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1293": {
            "op": "POP",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1294": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1297": {
            "op": "PUSH2",
            "value": "0x9E0",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1300": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1301": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2453,
                2471
            ]
        },
        "1302": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1303": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1304": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1305": {
            "op": "PUSH2",
            "value": "0x521",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1308": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1309": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1311": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1312": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1313": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1314": {
            "op": "POP",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1315": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1318": {
            "op": "PUSH1",
            "value": "0x11",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1320": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1321": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1322": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                2453,
                2471
            ],
            "fn": "MyLottery.end_lottery"
        },
        "1323": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1324": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1325": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1326": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1327": {
            "op": "PUSH2",
            "value": "0x537",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1330": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1331": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1333": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1334": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1335": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1336": {
            "op": "POP",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1337": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1340": {
            "op": "PUSH2",
            "value": "0xB38",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1343": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "1344": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1345": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1346": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1347": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1348": {
            "op": "PUSH2",
            "value": "0x54C",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1351": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1352": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1354": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1355": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1356": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1357": {
            "op": "POP"
        },
        "1358": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1361": {
            "op": "PUSH2",
            "value": "0x55B",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1364": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1365": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1367": {
            "op": "PUSH2",
            "value": "0x176D",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1370": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1371": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1372": {
            "op": "PUSH2",
            "value": "0xC20",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1375": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "1376": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1377": {
            "op": "CALLVALUE",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1378": {
            "op": "DUP1",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1379": {
            "op": "ISZERO",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1380": {
            "op": "PUSH2",
            "value": "0x56C",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1383": {
            "op": "JUMPI",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1384": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1386": {
            "op": "DUP1",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1387": {
            "op": "REVERT",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1388": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1389": {
            "op": "POP"
        },
        "1390": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1393": {
            "op": "PUSH2",
            "value": "0x57B",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1396": {
            "op": "CALLDATASIZE",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1397": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1399": {
            "op": "PUSH2",
            "value": "0x16E7",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1402": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1403": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1404": {
            "op": "PUSH2",
            "value": "0xD46",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1407": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1408": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1217,
                1249
            ]
        },
        "1409": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1410": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1411": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1412": {
            "op": "PUSH2",
            "value": "0x58C",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1415": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1416": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1418": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1419": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1420": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1421": {
            "op": "POP"
        },
        "1422": {
            "op": "PUSH2",
            "value": "0x307",
            "path": "7",
            "offset": [
                1217,
                1249
            ]
        },
        "1425": {
            "op": "PUSH2",
            "value": "0x59B",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1428": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1429": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1431": {
            "op": "PUSH2",
            "value": "0x1710",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1434": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1435": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1436": {
            "op": "PUSH2",
            "value": "0xDBC",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1439": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "1440": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1441": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1442": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1443": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1444": {
            "op": "PUSH2",
            "value": "0x5AC",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1447": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1448": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1450": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1451": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1452": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1453": {
            "op": "POP"
        },
        "1454": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1457": {
            "op": "PUSH2",
            "value": "0x5BB",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1460": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1461": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1463": {
            "op": "PUSH2",
            "value": "0x16E7",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1466": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1467": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1468": {
            "op": "PUSH2",
            "value": "0xDE6",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1471": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "1472": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1704,
                1728
            ]
        },
        "1473": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1474": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1475": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1476": {
            "op": "PUSH2",
            "value": "0x5CC",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1479": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1480": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1482": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1483": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1484": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1485": {
            "op": "POP",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1486": {
            "op": "PUSH2",
            "value": "0x21F",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1489": {
            "op": "PUSH1",
            "value": "0xD",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1491": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1492": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1493": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                1704,
                1728
            ],
            "fn": "MyLottery.getBalance"
        },
        "1494": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1495": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1496": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1497": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1498": {
            "op": "PUSH2",
            "value": "0x5E2",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1501": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1502": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1504": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1505": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1506": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1507": {
            "op": "POP"
        },
        "1508": {
            "op": "PUSH2",
            "value": "0x27C",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1511": {
            "op": "PUSH2",
            "value": "0x5F1",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1514": {
            "op": "CALLDATASIZE",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1515": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1517": {
            "op": "PUSH2",
            "value": "0x1710",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1520": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1521": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1522": {
            "op": "PUSH2",
            "value": "0xE5A",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1525": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "1526": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1527": {
            "op": "PUSH2",
            "value": "0x5FE",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "1530": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "1533": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "1534": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1535": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens",
            "statement": 1
        },
        "1537": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1538": {
            "op": "PUSH4",
            "value": "0x70A08231"
        },
        "1543": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1545": {
            "op": "SHL"
        },
        "1546": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1547": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1548": {
            "op": "ADDRESS",
            "path": "7",
            "offset": [
                7916,
                7920
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1549": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1551": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1552": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1553": {
            "op": "MSTORE"
        },
        "1554": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7842,
                7854
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1555": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7842,
                7854
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1556": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1558": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1560": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1562": {
            "op": "SHL"
        },
        "1563": {
            "op": "SUB"
        },
        "1564": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7865,
                7879
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1565": {
            "op": "AND",
            "path": "7",
            "offset": [
                7865,
                7879
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1566": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7865,
                7879
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1567": {
            "op": "PUSH4",
            "value": "0xA9059CBB",
            "path": "7",
            "offset": [
                7865,
                7879
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1572": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7865,
                7879
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1573": {
            "op": "CALLER",
            "path": "7",
            "offset": [
                7880,
                7890
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1574": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7880,
                7890
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1575": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                7865,
                7879
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1576": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7865,
                7879
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1577": {
            "op": "PUSH4",
            "value": "0x70A08231",
            "path": "7",
            "offset": [
                7892,
                7907
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1582": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7892,
                7907
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1583": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1585": {
            "op": "ADD"
        },
        "1586": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1588": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1590": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1591": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1592": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1593": {
            "op": "SUB",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1594": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1595": {
            "op": "DUP7",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1596": {
            "op": "GAS",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1597": {
            "op": "STATICCALL",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1598": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1599": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1600": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1601": {
            "op": "PUSH2",
            "value": "0x64E",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1604": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1605": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1606": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1608": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1609": {
            "op": "RETURNDATACOPY",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1610": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1611": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1613": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1614": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1615": {
            "op": "POP",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1616": {
            "op": "POP",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1617": {
            "op": "POP",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1618": {
            "op": "POP",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1619": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1621": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1622": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1623": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1625": {
            "op": "NOT",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1626": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1628": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1629": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1630": {
            "op": "AND",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1631": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1632": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1633": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1634": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1636": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1637": {
            "op": "POP",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1638": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1639": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1640": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1641": {
            "op": "PUSH2",
            "value": "0x672",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1644": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1645": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1646": {
            "op": "PUSH2",
            "value": "0x1799",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1649": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1650": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7892,
                7922
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1651": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1653": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1654": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1656": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1658": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1660": {
            "op": "SHL"
        },
        "1661": {
            "op": "SUB"
        },
        "1662": {
            "op": "NOT"
        },
        "1663": {
            "op": "PUSH1",
            "value": "0xE0",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1665": {
            "op": "DUP6",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1666": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1667": {
            "op": "SHL",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1668": {
            "op": "AND",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1669": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1670": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1671": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1673": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1675": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1677": {
            "op": "SHL"
        },
        "1678": {
            "op": "SUB"
        },
        "1679": {
            "op": "SWAP1"
        },
        "1680": {
            "op": "SWAP3"
        },
        "1681": {
            "op": "AND"
        },
        "1682": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1684": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1685": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1686": {
            "op": "MSTORE"
        },
        "1687": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1689": {
            "op": "DUP3"
        },
        "1690": {
            "op": "ADD"
        },
        "1691": {
            "op": "MSTORE"
        },
        "1692": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1694": {
            "op": "ADD"
        },
        "1695": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1697": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1699": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1700": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1701": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1702": {
            "op": "SUB",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1703": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1704": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1706": {
            "op": "DUP8",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1707": {
            "op": "GAS",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1708": {
            "op": "CALL",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1709": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1710": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1711": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1712": {
            "op": "PUSH2",
            "value": "0x6BD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1715": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1716": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1717": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1719": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1720": {
            "op": "RETURNDATACOPY",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1721": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1722": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1724": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1725": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1726": {
            "op": "POP",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1727": {
            "op": "POP",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1728": {
            "op": "POP",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1729": {
            "op": "POP",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1730": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1732": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1733": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1734": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1736": {
            "op": "NOT",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1737": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1739": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1740": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1741": {
            "op": "AND",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1742": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1743": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1744": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1745": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1747": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1748": {
            "op": "POP",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1749": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1750": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1751": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1752": {
            "op": "PUSH2",
            "value": "0x6E1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1755": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1756": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1757": {
            "op": "PUSH2",
            "value": "0x17B2",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1760": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1761": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1762": {
            "op": "POP",
            "path": "7",
            "offset": [
                7865,
                7923
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1763": {
            "op": "POP",
            "path": "7",
            "offset": [
                7810,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1764": {
            "op": "POP",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1765": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                7746,
                7930
            ],
            "fn": "MyLottery.recoverTokens"
        },
        "1766": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "1767": {
            "op": "PUSH2",
            "value": "0x6EE",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "1770": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "1773": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "1774": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "1775": {
            "op": "PUSH1",
            "value": "0xF",
            "path": "7",
            "offset": [
                6824,
                6839
            ],
            "fn": "MyLottery.setLotteryDuration",
            "statement": 2
        },
        "1777": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                6824,
                6851
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "1778": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                6748,
                6858
            ],
            "fn": "MyLottery.setLotteryDuration"
        },
        "1779": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3257,
                3974
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1780": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "1",
            "offset": [
                1744,
                1745
            ]
        },
        "1782": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "1",
            "offset": [
                2325,
                2332
            ]
        },
        "1784": {
            "op": "SLOAD",
            "path": "1",
            "offset": [
                2325,
                2332
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1785": {
            "op": "SUB",
            "path": "1",
            "offset": [
                2325,
                2344
            ]
        },
        "1786": {
            "op": "PUSH2",
            "value": "0x71E",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "1789": {
            "op": "JUMPI",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "1790": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1792": {
            "op": "MLOAD",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1793": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1797": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1799": {
            "op": "SHL"
        },
        "1800": {
            "op": "DUP2",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "1801": {
            "op": "MSTORE",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1802": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1804": {
            "op": "ADD",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1805": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1808": {
            "op": "SWAP1",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1809": {
            "op": "PUSH2",
            "value": "0x17D4",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1812": {
            "op": "JUMP",
            "jump": "i",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1813": {
            "op": "JUMPDEST",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1814": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1816": {
            "op": "MLOAD",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1817": {
            "op": "DUP1",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1818": {
            "op": "SWAP2",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1819": {
            "op": "SUB",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1820": {
            "op": "SWAP1",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1821": {
            "op": "REVERT",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "optimizer_revert": true,
            "fn": "MyLottery.enter_lottery"
        },
        "1822": {
            "op": "JUMPDEST",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1823": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "1",
            "offset": [
                1744,
                1745
            ]
        },
        "1825": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "1",
            "offset": [
                2455,
                2462
            ]
        },
        "1827": {
            "op": "SSTORE",
            "path": "1",
            "offset": [
                2455,
                2473
            ]
        },
        "1828": {
            "op": "CALLER",
            "path": "7",
            "offset": [
                3342,
                3352
            ],
            "fn": "MyLottery.enter_lottery",
            "statement": 3
        },
        "1829": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1831": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1832": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1833": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1834": {
            "op": "PUSH1",
            "value": "0x8",
            "path": "7",
            "offset": [
                3328,
                3341
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1836": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1838": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1839": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1841": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1842": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1843": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1844": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1846": {
            "op": "AND",
            "path": "7",
            "offset": [
                3328,
                3353
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1847": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                3328,
                3362
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 75
        },
        "1848": {
            "op": "PUSH2",
            "value": "0x775",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1851": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 75
        },
        "1852": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1854": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1855": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1859": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1861": {
            "op": "SHL"
        },
        "1862": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1863": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1864": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1866": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1868": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1869": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1870": {
            "op": "MSTORE"
        },
        "1871": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "1873": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1875": {
            "op": "DUP3"
        },
        "1876": {
            "op": "ADD"
        },
        "1877": {
            "op": "MSTORE"
        },
        "1878": {
            "op": "PUSH15",
            "value": "0x105B1C9958591E48195B9D195C9959"
        },
        "1894": {
            "op": "PUSH1",
            "value": "0x8A"
        },
        "1896": {
            "op": "SHL"
        },
        "1897": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1899": {
            "op": "DUP3"
        },
        "1900": {
            "op": "ADD"
        },
        "1901": {
            "op": "MSTORE"
        },
        "1902": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1904": {
            "op": "ADD"
        },
        "1905": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1908": {
            "op": "JUMP"
        },
        "1909": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3320,
                3382
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1910": {
            "op": "CALLER",
            "path": "7",
            "offset": [
                3406,
                3416
            ],
            "fn": "MyLottery.enter_lottery",
            "statement": 4
        },
        "1911": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1913": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1914": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1915": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1916": {
            "op": "PUSH1",
            "value": "0x8",
            "path": "7",
            "offset": [
                3392,
                3405
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1918": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1920": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1921": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1923": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1924": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                3392,
                3417
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1925": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                3392,
                3424
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1926": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3392,
                3424
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1927": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "1929": {
            "op": "NOT"
        },
        "1930": {
            "op": "AND",
            "path": "7",
            "offset": [
                3392,
                3424
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1931": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                3420,
                3424
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1933": {
            "op": "OR",
            "path": "7",
            "offset": [
                3392,
                3424
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1934": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3392,
                3424
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1935": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                3392,
                3424
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1936": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                3442,
                3455
            ],
            "fn": "MyLottery.enter_lottery",
            "statement": 5
        },
        "1938": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3442,
                3455
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1939": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                3442,
                3455
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1942": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3442,
                3455
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1943": {
            "op": "DIV",
            "path": "7",
            "offset": [
                3442,
                3455
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1944": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                3442,
                3455
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1946": {
            "op": "AND",
            "path": "7",
            "offset": [
                3442,
                3455
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1947": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1949": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1950": {
            "op": "GT",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1951": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1952": {
            "op": "PUSH2",
            "value": "0x7AB",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1955": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1956": {
            "op": "PUSH2",
            "value": "0x7AB",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1959": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1962": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1963": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1964": {
            "op": "EQ",
            "path": "7",
            "offset": [
                3442,
                3477
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 76
        },
        "1965": {
            "op": "PUSH2",
            "value": "0x7EE",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1968": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 76
        },
        "1969": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1971": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1972": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1976": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1978": {
            "op": "SHL"
        },
        "1979": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1980": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1981": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1983": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1985": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1986": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "1987": {
            "op": "MSTORE"
        },
        "1988": {
            "op": "PUSH1",
            "value": "0x13"
        },
        "1990": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1992": {
            "op": "DUP3"
        },
        "1993": {
            "op": "ADD"
        },
        "1994": {
            "op": "MSTORE"
        },
        "1995": {
            "op": "PUSH19",
            "value": "0x131BDD1D195C9E48139BDD081CDD185C9D1959"
        },
        "2015": {
            "op": "PUSH1",
            "value": "0x6A"
        },
        "2017": {
            "op": "SHL"
        },
        "2018": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2020": {
            "op": "DUP3"
        },
        "2021": {
            "op": "ADD"
        },
        "2022": {
            "op": "MSTORE"
        },
        "2023": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2025": {
            "op": "ADD"
        },
        "2026": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2029": {
            "op": "JUMP"
        },
        "2030": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3434,
                3501
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2031": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                3533,
                3554
            ],
            "fn": "MyLottery.enter_lottery",
            "statement": 6
        },
        "2033": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                3520,
                3529
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2035": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3520,
                3529
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2036": {
            "op": "PUSH3",
            "value": "0x10000",
            "path": "7",
            "offset": [
                3520,
                3529
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2040": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3520,
                3529
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2041": {
            "op": "DIV",
            "path": "7",
            "offset": [
                3520,
                3529
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2042": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                3520,
                3529
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2044": {
            "op": "AND",
            "path": "7",
            "offset": [
                3520,
                3529
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2045": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2047": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2048": {
            "op": "GT",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2049": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2050": {
            "op": "PUSH2",
            "value": "0x80D",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2053": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2054": {
            "op": "PUSH2",
            "value": "0x80D",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2057": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2060": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2061": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2062": {
            "op": "EQ",
            "path": "7",
            "offset": [
                3520,
                3554
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2063": {
            "op": "PUSH2",
            "value": "0x82A",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2066": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2067": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2069": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2070": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2074": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2076": {
            "op": "SHL"
        },
        "2077": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2078": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2079": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2081": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2082": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2085": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2086": {
            "op": "PUSH2",
            "value": "0x180B",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2089": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2090": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3511,
                3575
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2091": {
            "op": "PUSH1",
            "value": "0x7",
            "path": "7",
            "offset": [
                3619,
                3627
            ],
            "fn": "MyLottery.enter_lottery",
            "statement": 7
        },
        "2093": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3619,
                3627
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2094": {
            "op": "CALLVALUE",
            "path": "7",
            "offset": [
                3606,
                3615
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2095": {
            "op": "EQ",
            "path": "7",
            "offset": [
                3606,
                3627
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 77
        },
        "2096": {
            "op": "PUSH2",
            "value": "0x83A",
            "path": "7",
            "offset": [
                3720,
                3746
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2099": {
            "op": "PUSH1",
            "value": "0x7",
            "path": "7",
            "offset": [
                3737,
                3745
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2101": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3737,
                3745
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2102": {
            "op": "PUSH2",
            "value": "0xEFC",
            "path": "7",
            "offset": [
                3720,
                3736
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2105": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3720,
                3746
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2106": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3720,
                3746
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2107": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2109": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2110": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2112": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2113": {
            "op": "PUSH2",
            "value": "0x84A",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2116": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2117": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2118": {
            "op": "PUSH2",
            "value": "0x1864",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2121": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2122": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2123": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2125": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2126": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2128": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2129": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2130": {
            "op": "SUB",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2131": {
            "op": "SUB",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2132": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2133": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2134": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2135": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2137": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3641,
                3784
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2138": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2139": {
            "op": "PUSH2",
            "value": "0x877",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2142": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 77
        },
        "2143": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2145": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2146": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2150": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2152": {
            "op": "SHL"
        },
        "2153": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2154": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2155": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2157": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2158": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2161": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2162": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2163": {
            "op": "PUSH2",
            "value": "0x18B7",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2166": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2167": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3585,
                3794
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2168": {
            "op": "POP"
        },
        "2169": {
            "op": "PUSH1",
            "value": "0x6",
            "path": "7",
            "offset": [
                3843,
                3862
            ],
            "fn": "MyLottery.enter_lottery",
            "statement": 8
        },
        "2171": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3843,
                3862
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2172": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                3825,
                3832
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2174": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3825,
                3839
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2175": {
            "op": "GT",
            "path": "7",
            "offset": [
                3825,
                3862
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2176": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                3825,
                3862
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 78
        },
        "2177": {
            "op": "PUSH2",
            "value": "0x8D8",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2180": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery",
            "branch": 78
        },
        "2181": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2183": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2184": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2188": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2190": {
            "op": "SHL"
        },
        "2191": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2192": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2193": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2195": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2197": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2198": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2199": {
            "op": "MSTORE"
        },
        "2200": {
            "op": "PUSH1",
            "value": "0x23"
        },
        "2202": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2204": {
            "op": "DUP3"
        },
        "2205": {
            "op": "ADD"
        },
        "2206": {
            "op": "MSTORE"
        },
        "2207": {
            "op": "PUSH32",
            "value": "0x4D6178696D756D204E756D626572207265616368656420666F7220206C6F7474"
        },
        "2240": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2242": {
            "op": "DUP3"
        },
        "2243": {
            "op": "ADD"
        },
        "2244": {
            "op": "MSTORE"
        },
        "2245": {
            "op": "PUSH3",
            "value": "0x657279"
        },
        "2249": {
            "op": "PUSH1",
            "value": "0xE8"
        },
        "2251": {
            "op": "SHL"
        },
        "2252": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2254": {
            "op": "DUP3"
        },
        "2255": {
            "op": "ADD"
        },
        "2256": {
            "op": "MSTORE"
        },
        "2257": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "2259": {
            "op": "ADD"
        },
        "2260": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2263": {
            "op": "JUMP"
        },
        "2264": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3804,
                3923
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2265": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                3934,
                3941
            ],
            "fn": "MyLottery.enter_lottery",
            "statement": 9
        },
        "2267": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2268": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2269": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2271": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2272": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2273": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2274": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2275": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2276": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2278": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2279": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2280": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2281": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2282": {
            "op": "PUSH32",
            "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2315": {
            "op": "ADD",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2316": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2317": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2318": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2320": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2322": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2324": {
            "op": "SHL"
        },
        "2325": {
            "op": "SUB"
        },
        "2326": {
            "op": "NOT"
        },
        "2327": {
            "op": "AND",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2328": {
            "op": "CALLER",
            "path": "7",
            "offset": [
                3955,
                3965
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2329": {
            "op": "OR",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2330": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2331": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                3934,
                3967
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2332": {
            "op": "DUP1",
            "path": "1",
            "offset": [
                2628,
                2650
            ]
        },
        "2333": {
            "op": "SSTORE",
            "path": "1",
            "offset": [
                2628,
                2650
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2334": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                3257,
                3974
            ],
            "fn": "MyLottery.enter_lottery"
        },
        "2335": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "2336": {
            "op": "PUSH2",
            "value": "0x927",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2339": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "2342": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2343": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "2344": {
            "op": "PUSH2",
            "value": "0x92F",
            "path": "7",
            "offset": [
                8609,
                8621
            ],
            "fn": "MyLottery.retrySendPrizes",
            "statement": 10
        },
        "2347": {
            "op": "PUSH2",
            "value": "0x1005",
            "path": "7",
            "offset": [
                8609,
                8619
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "2350": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8609,
                8621
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "2351": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8609,
                8621
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "2352": {
            "op": "POP",
            "path": "7",
            "offset": [
                8609,
                8621
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "2353": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                8553,
                8628
            ],
            "fn": "MyLottery.retrySendPrizes"
        },
        "2354": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10762,
                10866
            ],
            "fn": "MyLottery.transferOwner"
        },
        "2355": {
            "op": "PUSH2",
            "value": "0x93A",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2358": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "2361": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2362": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.transferOwner"
        },
        "2363": {
            "op": "PUSH2",
            "value": "0x92F",
            "path": "7",
            "offset": [
                10832,
                10859
            ],
            "fn": "MyLottery.transferOwner",
            "statement": 11
        },
        "2366": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10850,
                10858
            ],
            "fn": "MyLottery.transferOwner"
        },
        "2367": {
            "op": "PUSH2",
            "value": "0xD46",
            "path": "7",
            "offset": [
                10832,
                10849
            ],
            "fn": "MyLottery.transferOwner"
        },
        "2370": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10832,
                10859
            ],
            "fn": "MyLottery.transferOwner"
        },
        "2371": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "2372": {
            "op": "PUSH2",
            "value": "0x94B",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2375": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "2378": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2379": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "2380": {
            "op": "PUSH1",
            "value": "0x6",
            "path": "7",
            "offset": [
                7203,
                7222
            ],
            "fn": "MyLottery.setMaximumParticipants",
            "statement": 12
        },
        "2382": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                7203,
                7245
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "2383": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                7092,
                7252
            ],
            "fn": "MyLottery.setMaximumParticipants"
        },
        "2384": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "2385": {
            "op": "PUSH2",
            "value": "0x958",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2388": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "2391": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2392": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "2393": {
            "op": "PUSH2",
            "value": "0x962",
            "path": "0",
            "offset": [
                1895,
                1925
            ],
            "fn": "Ownable.renounceOwnership",
            "statement": 13
        },
        "2396": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                1922,
                1923
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "2398": {
            "op": "PUSH2",
            "value": "0x1247",
            "path": "0",
            "offset": [
                1895,
                1913
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "2401": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1895,
                1925
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "2402": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1895,
                1925
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "2403": {
            "op": "JUMP",
            "jump": "o",
            "path": "0",
            "offset": [
                1831,
                1932
            ],
            "fn": "Ownable.renounceOwnership"
        },
        "2404": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "2405": {
            "op": "PUSH2",
            "value": "0x96C",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2408": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "2411": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2412": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "2413": {
            "op": "PUSH1",
            "value": "0x5",
            "path": "7",
            "offset": [
                6693,
                6712
            ],
            "fn": "MyLottery.setMinumumParticipants",
            "statement": 14
        },
        "2415": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                6693,
                6735
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "2416": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                6582,
                6742
            ],
            "fn": "MyLottery.setMinumumParticipants"
        },
        "2417": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7508,
                7740
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2418": {
            "op": "PUSH2",
            "value": "0x979",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2421": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "2424": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "2425": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2426": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                7597,
                7617
            ],
            "fn": "MyLottery.recoverEth",
            "statement": 15
        },
        "2428": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                7580,
                7593
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2430": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                7580,
                7593
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2431": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                7580,
                7593
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2434": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7580,
                7593
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2435": {
            "op": "DIV",
            "path": "7",
            "offset": [
                7580,
                7593
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2436": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                7580,
                7593
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2438": {
            "op": "AND",
            "path": "7",
            "offset": [
                7580,
                7593
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2439": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2441": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2442": {
            "op": "GT",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2443": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2444": {
            "op": "PUSH2",
            "value": "0x997",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2447": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2448": {
            "op": "PUSH2",
            "value": "0x997",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2451": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2454": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2455": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2456": {
            "op": "EQ",
            "path": "7",
            "offset": [
                7580,
                7617
            ],
            "fn": "MyLottery.recoverEth",
            "branch": 79
        },
        "2457": {
            "op": "PUSH2",
            "value": "0x9B4",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2460": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth",
            "branch": 79
        },
        "2461": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2463": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2464": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2468": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2470": {
            "op": "SHL"
        },
        "2471": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2472": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2473": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2475": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2476": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2479": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2480": {
            "op": "PUSH2",
            "value": "0x18EA",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2483": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2484": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7559,
                7672
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2485": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth",
            "statement": 16
        },
        "2487": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2488": {
            "op": "CALLER",
            "path": "7",
            "offset": [
                7690,
                7700
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2489": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7690,
                7700
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2490": {
            "op": "SELFBALANCE",
            "path": "7",
            "offset": [
                7711,
                7732
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2491": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2492": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2493": {
            "op": "PUSH2",
            "value": "0x8FC",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2496": {
            "op": "MUL",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2497": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2498": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2500": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2501": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2502": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2503": {
            "op": "DUP6",
            "path": "7",
            "offset": [
                7711,
                7732
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2504": {
            "op": "DUP9",
            "path": "7",
            "offset": [
                7690,
                7700
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2505": {
            "op": "DUP9",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2506": {
            "op": "CALL",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2507": {
            "op": "SWAP4",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2508": {
            "op": "POP",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2509": {
            "op": "POP",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2510": {
            "op": "POP",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2511": {
            "op": "POP",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2512": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2513": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2514": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2515": {
            "op": "PUSH2",
            "value": "0x92F",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2518": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2519": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2520": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2522": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2523": {
            "op": "RETURNDATACOPY",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2524": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2525": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2527": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7682,
                7733
            ],
            "fn": "MyLottery.recoverEth"
        },
        "2528": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2529": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "1",
            "offset": [
                1744,
                1745
            ]
        },
        "2531": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "1",
            "offset": [
                2325,
                2332
            ]
        },
        "2533": {
            "op": "SLOAD",
            "path": "1",
            "offset": [
                2325,
                2332
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2534": {
            "op": "SUB",
            "path": "1",
            "offset": [
                2325,
                2344
            ]
        },
        "2535": {
            "op": "PUSH2",
            "value": "0xA02",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "2538": {
            "op": "JUMPI",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "2539": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2541": {
            "op": "MLOAD",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2542": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2546": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2548": {
            "op": "SHL"
        },
        "2549": {
            "op": "DUP2",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "2550": {
            "op": "MSTORE",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2551": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2553": {
            "op": "ADD",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2554": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2557": {
            "op": "SWAP1",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2558": {
            "op": "PUSH2",
            "value": "0x17D4",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2561": {
            "op": "JUMP",
            "jump": "i",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2562": {
            "op": "JUMPDEST",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2563": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "1",
            "offset": [
                1744,
                1745
            ]
        },
        "2565": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "1",
            "offset": [
                2455,
                2462
            ]
        },
        "2567": {
            "op": "SSTORE",
            "path": "1",
            "offset": [
                2455,
                2473
            ]
        },
        "2568": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                4413,
                4431
            ],
            "fn": "MyLottery.end_lottery",
            "statement": 17
        },
        "2570": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                4396,
                4409
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2572": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4396,
                4409
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2573": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                4396,
                4409
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2576": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4396,
                4409
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2577": {
            "op": "DIV",
            "path": "7",
            "offset": [
                4396,
                4409
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2578": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                4396,
                4409
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2580": {
            "op": "AND",
            "path": "7",
            "offset": [
                4396,
                4409
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2581": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2583": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2584": {
            "op": "GT",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2585": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2586": {
            "op": "PUSH2",
            "value": "0xA25",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2589": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2590": {
            "op": "PUSH2",
            "value": "0xA25",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2593": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2596": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2597": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2598": {
            "op": "EQ",
            "path": "7",
            "offset": [
                4396,
                4431
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 80
        },
        "2599": {
            "op": "PUSH2",
            "value": "0xA68",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2602": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 80
        },
        "2603": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2605": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2606": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2610": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2612": {
            "op": "SHL"
        },
        "2613": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2614": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2615": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2617": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2619": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2620": {
            "op": "ADD",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2621": {
            "op": "MSTORE"
        },
        "2622": {
            "op": "PUSH1",
            "value": "0x13"
        },
        "2624": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2626": {
            "op": "DUP3"
        },
        "2627": {
            "op": "ADD"
        },
        "2628": {
            "op": "MSTORE"
        },
        "2629": {
            "op": "PUSH19",
            "value": "0x131BDD1D195C9E48139BDD081CDD185C9D1959"
        },
        "2649": {
            "op": "PUSH1",
            "value": "0x6A"
        },
        "2651": {
            "op": "SHL"
        },
        "2652": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2654": {
            "op": "DUP3"
        },
        "2655": {
            "op": "ADD"
        },
        "2656": {
            "op": "MSTORE"
        },
        "2657": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2659": {
            "op": "ADD"
        },
        "2660": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2663": {
            "op": "JUMP"
        },
        "2664": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4388,
                4455
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2665": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                4486,
                4507
            ],
            "fn": "MyLottery.end_lottery",
            "statement": 18
        },
        "2667": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                4473,
                4482
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2669": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4473,
                4482
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2670": {
            "op": "PUSH3",
            "value": "0x10000",
            "path": "7",
            "offset": [
                4473,
                4482
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2674": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4473,
                4482
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2675": {
            "op": "DIV",
            "path": "7",
            "offset": [
                4473,
                4482
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2676": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                4473,
                4482
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2678": {
            "op": "AND",
            "path": "7",
            "offset": [
                4473,
                4482
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2679": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2681": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2682": {
            "op": "GT",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2683": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2684": {
            "op": "PUSH2",
            "value": "0xA87",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2687": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2688": {
            "op": "PUSH2",
            "value": "0xA87",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2691": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2694": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2695": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2696": {
            "op": "EQ",
            "path": "7",
            "offset": [
                4473,
                4507
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 81
        },
        "2697": {
            "op": "PUSH2",
            "value": "0xAA4",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2700": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 81
        },
        "2701": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2703": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2704": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2708": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2710": {
            "op": "SHL"
        },
        "2711": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2712": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2713": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2715": {
            "op": "ADD",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2716": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2719": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2720": {
            "op": "PUSH2",
            "value": "0x180B",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2723": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2724": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4465,
                4527
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2725": {
            "op": "PUSH1",
            "value": "0xF",
            "path": "7",
            "offset": [
                4592,
                4607
            ],
            "fn": "MyLottery.end_lottery",
            "statement": 19
        },
        "2727": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4592,
                4607
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2728": {
            "op": "PUSH1",
            "value": "0xE",
            "path": "7",
            "offset": [
                4577,
                4589
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2730": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4577,
                4589
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2731": {
            "op": "PUSH2",
            "value": "0xAB4",
            "path": "7",
            "offset": [
                4577,
                4607
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2734": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                4577,
                4607
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2735": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4577,
                4607
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2736": {
            "op": "PUSH2",
            "value": "0x1937",
            "path": "7",
            "offset": [
                4577,
                4607
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2739": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4577,
                4607
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2740": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4577,
                4607
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2741": {
            "op": "TIMESTAMP",
            "path": "7",
            "offset": [
                4558,
                4573
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2742": {
            "op": "GT",
            "path": "7",
            "offset": [
                4558,
                4608
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 82
        },
        "2743": {
            "op": "PUSH2",
            "value": "0xB02",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2746": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 82
        },
        "2747": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2749": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2750": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2754": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2756": {
            "op": "SHL"
        },
        "2757": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2758": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2759": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2761": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2763": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2764": {
            "op": "ADD",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2765": {
            "op": "MSTORE"
        },
        "2766": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "2768": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2770": {
            "op": "DUP3"
        },
        "2771": {
            "op": "ADD"
        },
        "2772": {
            "op": "MSTORE"
        },
        "2773": {
            "op": "PUSH32",
            "value": "0x6D696E206C6F7474657279206475726174696F6E206E6F742070617373656400"
        },
        "2806": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2808": {
            "op": "DUP3"
        },
        "2809": {
            "op": "ADD"
        },
        "2810": {
            "op": "MSTORE"
        },
        "2811": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2813": {
            "op": "ADD"
        },
        "2814": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2817": {
            "op": "JUMP"
        },
        "2818": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4537,
                4665
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2819": {
            "op": "PUSH1",
            "value": "0x5",
            "path": "7",
            "offset": [
                4751,
                4770
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2821": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4751,
                4770
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2822": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                4734,
                4741
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2824": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4734,
                4748
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2825": {
            "op": "LT",
            "path": "7",
            "offset": [
                4734,
                4770
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 83
        },
        "2826": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                4730,
                4932
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2827": {
            "op": "PUSH2",
            "value": "0xB1B",
            "path": "7",
            "offset": [
                4730,
                4932
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2830": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4730,
                4932
            ],
            "fn": "MyLottery.end_lottery",
            "branch": 83
        },
        "2831": {
            "op": "PUSH2",
            "value": "0xB16",
            "path": "7",
            "offset": [
                4786,
                4810
            ],
            "fn": "MyLottery.end_lottery",
            "statement": 20
        },
        "2834": {
            "op": "PUSH2",
            "value": "0x1297",
            "path": "7",
            "offset": [
                4786,
                4808
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2837": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4786,
                4810
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2838": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4786,
                4810
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2839": {
            "op": "PUSH2",
            "value": "0xB32",
            "path": "7",
            "offset": [
                4730,
                4932
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2842": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                4730,
                4932
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2843": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4730,
                4932
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2844": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                4841,
                4854
            ],
            "fn": "MyLottery.end_lottery",
            "statement": 21
        },
        "2846": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                4841,
                4889
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2847": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4841,
                4889
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2848": {
            "op": "PUSH2",
            "value": "0xFF00"
        },
        "2851": {
            "op": "NOT"
        },
        "2852": {
            "op": "AND",
            "path": "7",
            "offset": [
                4841,
                4889
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2853": {
            "op": "PUSH2",
            "value": "0x200",
            "path": "7",
            "offset": [
                4841,
                4889
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2856": {
            "op": "OR",
            "path": "7",
            "offset": [
                4841,
                4889
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2857": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4841,
                4889
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2858": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                4841,
                4889
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2859": {
            "op": "PUSH2",
            "value": "0xB32",
            "path": "7",
            "offset": [
                4903,
                4921
            ],
            "fn": "MyLottery.end_lottery",
            "statement": 22
        },
        "2862": {
            "op": "PUSH2",
            "value": "0x13F8",
            "path": "7",
            "offset": [
                4903,
                4919
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2865": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4903,
                4921
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2866": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4903,
                4921
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2867": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "1",
            "offset": [
                1701,
                1702
            ]
        },
        "2869": {
            "op": "DUP1",
            "path": "1",
            "offset": [
                2628,
                2650
            ]
        },
        "2870": {
            "op": "SSTORE",
            "path": "1",
            "offset": [
                2628,
                2650
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2871": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                4335,
                4992
            ],
            "fn": "MyLottery.end_lottery"
        },
        "2872": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2873": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "1",
            "offset": [
                1744,
                1745
            ]
        },
        "2875": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "1",
            "offset": [
                2325,
                2332
            ]
        },
        "2877": {
            "op": "SLOAD",
            "path": "1",
            "offset": [
                2325,
                2332
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2878": {
            "op": "SUB",
            "path": "1",
            "offset": [
                2325,
                2344
            ]
        },
        "2879": {
            "op": "PUSH2",
            "value": "0xB5A",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "2882": {
            "op": "JUMPI",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "2883": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2885": {
            "op": "MLOAD",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2886": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2890": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2892": {
            "op": "SHL"
        },
        "2893": {
            "op": "DUP2",
            "path": "1",
            "offset": [
                2317,
                2380
            ]
        },
        "2894": {
            "op": "MSTORE",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2895": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2897": {
            "op": "ADD",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2898": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2901": {
            "op": "SWAP1",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2902": {
            "op": "PUSH2",
            "value": "0x17D4",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2905": {
            "op": "JUMP",
            "jump": "i",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2906": {
            "op": "JUMPDEST",
            "path": "1",
            "offset": [
                2317,
                2380
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2907": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "1",
            "offset": [
                1744,
                1745
            ]
        },
        "2909": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "1",
            "offset": [
                2455,
                2462
            ]
        },
        "2911": {
            "op": "SWAP1",
            "path": "1",
            "offset": [
                2455,
                2473
            ]
        },
        "2912": {
            "op": "DUP2",
            "path": "1",
            "offset": [
                2455,
                2473
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2913": {
            "op": "SSTORE",
            "path": "1",
            "offset": [
                2455,
                2473
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2914": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                4056,
                4069
            ],
            "fn": "MyLottery.start_lottery",
            "statement": 23
        },
        "2916": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4056,
                4069
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2917": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                4056,
                4069
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2920": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4056,
                4069
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2921": {
            "op": "DIV",
            "path": "7",
            "offset": [
                4056,
                4069
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2922": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                4056,
                4069
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2924": {
            "op": "AND",
            "path": "7",
            "offset": [
                4056,
                4069
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2925": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2927": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2928": {
            "op": "GT",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2929": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2930": {
            "op": "PUSH2",
            "value": "0xB7D",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2933": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2934": {
            "op": "PUSH2",
            "value": "0xB7D",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2937": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2940": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2941": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2942": {
            "op": "EQ",
            "path": "7",
            "offset": [
                4056,
                4093
            ],
            "fn": "MyLottery.start_lottery",
            "branch": 84
        },
        "2943": {
            "op": "PUSH2",
            "value": "0xBCA",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2946": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery",
            "branch": 84
        },
        "2947": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2949": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2950": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2954": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2956": {
            "op": "SHL"
        },
        "2957": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2958": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2959": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2961": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2963": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2964": {
            "op": "ADD",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "2965": {
            "op": "MSTORE"
        },
        "2966": {
            "op": "PUSH1",
            "value": "0x17"
        },
        "2968": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2970": {
            "op": "DUP3"
        },
        "2971": {
            "op": "ADD"
        },
        "2972": {
            "op": "MSTORE"
        },
        "2973": {
            "op": "PUSH32",
            "value": "0x4C6F747465727920416C72656164792073746172746564000000000000000000"
        },
        "3006": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3008": {
            "op": "DUP3"
        },
        "3009": {
            "op": "ADD"
        },
        "3010": {
            "op": "MSTORE"
        },
        "3011": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3013": {
            "op": "ADD"
        },
        "3014": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3017": {
            "op": "JUMP"
        },
        "3018": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4035,
                4142
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3019": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                4173,
                4194
            ],
            "fn": "MyLottery.start_lottery",
            "statement": 24
        },
        "3021": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                4160,
                4169
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3023": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4160,
                4169
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3024": {
            "op": "PUSH3",
            "value": "0x10000",
            "path": "7",
            "offset": [
                4160,
                4169
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3028": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4160,
                4169
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3029": {
            "op": "DIV",
            "path": "7",
            "offset": [
                4160,
                4169
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3030": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                4160,
                4169
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3032": {
            "op": "AND",
            "path": "7",
            "offset": [
                4160,
                4169
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3033": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3035": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3036": {
            "op": "GT",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3037": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3038": {
            "op": "PUSH2",
            "value": "0xBE9",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3041": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3042": {
            "op": "PUSH2",
            "value": "0xBE9",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3045": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3048": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3049": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3050": {
            "op": "EQ",
            "path": "7",
            "offset": [
                4160,
                4194
            ],
            "fn": "MyLottery.start_lottery",
            "branch": 85
        },
        "3051": {
            "op": "PUSH2",
            "value": "0xC06",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3054": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery",
            "branch": 85
        },
        "3055": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3057": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3058": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3062": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3064": {
            "op": "SHL"
        },
        "3065": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3066": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3067": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3069": {
            "op": "ADD",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3070": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3073": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3074": {
            "op": "PUSH2",
            "value": "0x180B",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3077": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3078": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                4152,
                4214
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3079": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                4224,
                4237
            ],
            "fn": "MyLottery.start_lottery",
            "statement": 25
        },
        "3081": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                4224,
                4258
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3082": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                4224,
                4258
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3083": {
            "op": "PUSH2",
            "value": "0xFF00"
        },
        "3086": {
            "op": "NOT"
        },
        "3087": {
            "op": "AND",
            "path": "7",
            "offset": [
                4224,
                4258
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3088": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                4224,
                4258
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3089": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                4224,
                4258
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3090": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                4240,
                4258
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3092": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                4268,
                4278
            ],
            "fn": "MyLottery.start_lottery",
            "statement": 26
        },
        "3094": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                4268,
                4282
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3095": {
            "op": "TIMESTAMP",
            "path": "7",
            "offset": [
                4307,
                4322
            ],
            "fn": "MyLottery.start_lottery",
            "statement": 27
        },
        "3096": {
            "op": "PUSH1",
            "value": "0xE",
            "path": "7",
            "offset": [
                4292,
                4304
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3098": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                4292,
                4322
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3099": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3101": {
            "op": "DUP1",
            "path": "1",
            "offset": [
                2628,
                2650
            ]
        },
        "3102": {
            "op": "SSTORE",
            "path": "1",
            "offset": [
                2628,
                2650
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3103": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                3980,
                4329
            ],
            "fn": "MyLottery.start_lottery"
        },
        "3104": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3105": {
            "op": "PUSH2",
            "value": "0xC28",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "3108": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "3111": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "3112": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3113": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                6067,
                6087
            ],
            "fn": "MyLottery.setPrizePercents",
            "statement": 28
        },
        "3115": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                6050,
                6063
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3117": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                6050,
                6063
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3118": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                6050,
                6063
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3121": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6050,
                6063
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3122": {
            "op": "DIV",
            "path": "7",
            "offset": [
                6050,
                6063
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3123": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                6050,
                6063
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3125": {
            "op": "AND",
            "path": "7",
            "offset": [
                6050,
                6063
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3126": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3128": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3129": {
            "op": "GT",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3130": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3131": {
            "op": "PUSH2",
            "value": "0xC46",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3134": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3135": {
            "op": "PUSH2",
            "value": "0xC46",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3138": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3141": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3142": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3143": {
            "op": "EQ",
            "path": "7",
            "offset": [
                6050,
                6087
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 86
        },
        "3144": {
            "op": "PUSH2",
            "value": "0xC63",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3147": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 86
        },
        "3148": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3150": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3151": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3155": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3157": {
            "op": "SHL"
        },
        "3158": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3159": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3160": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3162": {
            "op": "ADD",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3163": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3166": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3167": {
            "op": "PUSH2",
            "value": "0x18EA",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3170": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3171": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6029,
                6142
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3172": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                6190,
                6210
            ],
            "fn": "MyLottery.setPrizePercents",
            "statement": 29
        },
        "3174": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                6173,
                6186
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3176": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                6173,
                6186
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3177": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                6173,
                6186
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3180": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6173,
                6186
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3181": {
            "op": "DIV",
            "path": "7",
            "offset": [
                6173,
                6186
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3182": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                6173,
                6186
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3184": {
            "op": "AND",
            "path": "7",
            "offset": [
                6173,
                6186
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3185": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3187": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3188": {
            "op": "GT",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3189": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3190": {
            "op": "PUSH2",
            "value": "0xC81",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3193": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3194": {
            "op": "PUSH2",
            "value": "0xC81",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3197": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3200": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3201": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3202": {
            "op": "EQ",
            "path": "7",
            "offset": [
                6173,
                6210
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 87
        },
        "3203": {
            "op": "PUSH2",
            "value": "0xC9E",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3206": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 87
        },
        "3207": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3209": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3210": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3214": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3216": {
            "op": "SHL"
        },
        "3217": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3218": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3219": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3221": {
            "op": "ADD",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3222": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3225": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3226": {
            "op": "PUSH2",
            "value": "0x18EA",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3229": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3230": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6152,
                6265
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3231": {
            "op": "PUSH1",
            "value": "0x64",
            "path": "7",
            "offset": [
                6348,
                6351
            ],
            "fn": "MyLottery.setPrizePercents",
            "statement": 30
        },
        "3233": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6328,
                6344
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3234": {
            "op": "PUSH2",
            "value": "0xCAB",
            "path": "7",
            "offset": [
                6296,
                6325
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3237": {
            "op": "DUP5",
            "path": "7",
            "offset": [
                6312,
                6325
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3238": {
            "op": "DUP7",
            "path": "7",
            "offset": [
                6296,
                6309
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3239": {
            "op": "PUSH2",
            "value": "0x1937",
            "path": "7",
            "offset": [
                6296,
                6325
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3242": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6296,
                6325
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3243": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6296,
                6325
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3244": {
            "op": "PUSH2",
            "value": "0xCB5",
            "path": "7",
            "offset": [
                6296,
                6344
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3247": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                6296,
                6344
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3248": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6296,
                6344
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3249": {
            "op": "PUSH2",
            "value": "0x1937",
            "path": "7",
            "offset": [
                6296,
                6344
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3252": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6296,
                6344
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3253": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6296,
                6344
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3254": {
            "op": "GT",
            "path": "7",
            "offset": [
                6296,
                6351
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3255": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                6296,
                6351
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 88
        },
        "3256": {
            "op": "PUSH2",
            "value": "0xCF6",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3259": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 88
        },
        "3260": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3262": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3263": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3267": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3269": {
            "op": "SHL"
        },
        "3270": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3271": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3272": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3274": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3276": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3277": {
            "op": "ADD",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3278": {
            "op": "MSTORE"
        },
        "3279": {
            "op": "PUSH1",
            "value": "0x10"
        },
        "3281": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3283": {
            "op": "DUP3"
        },
        "3284": {
            "op": "ADD"
        },
        "3285": {
            "op": "MSTORE"
        },
        "3286": {
            "op": "PUSH16",
            "value": "0x63616E206E6F74206F7665722031303"
        },
        "3303": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "3305": {
            "op": "SHL"
        },
        "3306": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3308": {
            "op": "DUP3"
        },
        "3309": {
            "op": "ADD"
        },
        "3310": {
            "op": "MSTORE"
        },
        "3311": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3313": {
            "op": "ADD"
        },
        "3314": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3317": {
            "op": "JUMP"
        },
        "3318": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6275,
                6393
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3319": {
            "op": "PUSH1",
            "value": "0x32",
            "path": "7",
            "offset": [
                6427,
                6429
            ],
            "fn": "MyLottery.setPrizePercents",
            "statement": 31
        },
        "3321": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                6411,
                6424
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3322": {
            "op": "LT",
            "path": "7",
            "offset": [
                6411,
                6429
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 89
        },
        "3323": {
            "op": "PUSH2",
            "value": "0xD38",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3326": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents",
            "branch": 89
        },
        "3327": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3329": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3330": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3334": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3336": {
            "op": "SHL"
        },
        "3337": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3338": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3339": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3341": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3343": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3344": {
            "op": "ADD",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3345": {
            "op": "MSTORE"
        },
        "3346": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "3348": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3350": {
            "op": "DUP3"
        },
        "3351": {
            "op": "ADD"
        },
        "3352": {
            "op": "MSTORE"
        },
        "3353": {
            "op": "PUSH15",
            "value": "0x63616E206E6F74206C65737320353"
        },
        "3369": {
            "op": "PUSH1",
            "value": "0x8C"
        },
        "3371": {
            "op": "SHL"
        },
        "3372": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3374": {
            "op": "DUP3"
        },
        "3375": {
            "op": "ADD"
        },
        "3376": {
            "op": "MSTORE"
        },
        "3377": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3379": {
            "op": "ADD"
        },
        "3380": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3383": {
            "op": "JUMP"
        },
        "3384": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6403,
                6449
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3385": {
            "op": "PUSH1",
            "value": "0x9",
            "path": "7",
            "offset": [
                6459,
                6471
            ],
            "fn": "MyLottery.setPrizePercents",
            "statement": 32
        },
        "3387": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                6459,
                6487
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3388": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6459,
                6487
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3389": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                6459,
                6487
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3390": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                6459,
                6487
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3391": {
            "op": "PUSH1",
            "value": "0xA",
            "path": "7",
            "offset": [
                6497,
                6509
            ],
            "fn": "MyLottery.setPrizePercents",
            "statement": 33
        },
        "3393": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                6497,
                6525
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3394": {
            "op": "PUSH1",
            "value": "0xB",
            "path": "7",
            "offset": [
                6535,
                6550
            ],
            "fn": "MyLottery.setPrizePercents",
            "statement": 34
        },
        "3396": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                6535,
                6569
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3397": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                5872,
                6576
            ],
            "fn": "MyLottery.setPrizePercents"
        },
        "3398": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                2081,
                2279
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3399": {
            "op": "PUSH2",
            "value": "0xD4E",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "3402": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "3405": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "3406": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3407": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3409": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3411": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3413": {
            "op": "SHL"
        },
        "3414": {
            "op": "SUB"
        },
        "3415": {
            "op": "DUP2",
            "path": "0",
            "offset": [
                2169,
                2191
            ],
            "fn": "Ownable.transferOwnership",
            "statement": 35
        },
        "3416": {
            "op": "AND",
            "path": "0",
            "offset": [
                2169,
                2191
            ],
            "fn": "Ownable.transferOwnership",
            "branch": 99
        },
        "3417": {
            "op": "PUSH2",
            "value": "0xDB3",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3420": {
            "op": "JUMPI",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership",
            "branch": 99
        },
        "3421": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3423": {
            "op": "MLOAD",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3424": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3428": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3430": {
            "op": "SHL"
        },
        "3431": {
            "op": "DUP2",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3432": {
            "op": "MSTORE",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3433": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3435": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3437": {
            "op": "DUP3",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3438": {
            "op": "ADD",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3439": {
            "op": "MSTORE"
        },
        "3440": {
            "op": "PUSH1",
            "value": "0x26"
        },
        "3442": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3444": {
            "op": "DUP3"
        },
        "3445": {
            "op": "ADD"
        },
        "3446": {
            "op": "MSTORE"
        },
        "3447": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
        },
        "3480": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3482": {
            "op": "DUP3"
        },
        "3483": {
            "op": "ADD"
        },
        "3484": {
            "op": "MSTORE"
        },
        "3485": {
            "op": "PUSH6",
            "value": "0x646472657373"
        },
        "3492": {
            "op": "PUSH1",
            "value": "0xD0"
        },
        "3494": {
            "op": "SHL"
        },
        "3495": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3497": {
            "op": "DUP3"
        },
        "3498": {
            "op": "ADD"
        },
        "3499": {
            "op": "MSTORE"
        },
        "3500": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "3502": {
            "op": "ADD"
        },
        "3503": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3506": {
            "op": "JUMP"
        },
        "3507": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                2161,
                2234
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3508": {
            "op": "PUSH2",
            "value": "0x92F",
            "path": "0",
            "offset": [
                2244,
                2272
            ],
            "fn": "Ownable.transferOwnership",
            "statement": 36
        },
        "3511": {
            "op": "DUP2",
            "path": "0",
            "offset": [
                2263,
                2271
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3512": {
            "op": "PUSH2",
            "value": "0x1247",
            "path": "0",
            "offset": [
                2244,
                2262
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3515": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                2244,
                2272
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3516": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1217,
                1249
            ]
        },
        "3517": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3519": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3520": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3521": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3522": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3523": {
            "op": "LT",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3524": {
            "op": "PUSH2",
            "value": "0xDCC",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3527": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3528": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3530": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3531": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3532": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3533": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3535": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3536": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3537": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3538": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3540": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3541": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3542": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3543": {
            "op": "ADD",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3544": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3545": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3547": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3549": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3551": {
            "op": "SHL"
        },
        "3552": {
            "op": "SUB"
        },
        "3553": {
            "op": "AND",
            "path": "7",
            "offset": [
                1217,
                1249
            ]
        },
        "3554": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3555": {
            "op": "POP"
        },
        "3556": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                1217,
                1249
            ]
        },
        "3557": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                1217,
                1249
            ],
            "fn": "Ownable.transferOwnership"
        },
        "3558": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "3559": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3561": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3562": {
            "op": "PUSH4",
            "value": "0x70A08231"
        },
        "3567": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "3569": {
            "op": "SHL"
        },
        "3570": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3571": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3572": {
            "op": "ADDRESS",
            "path": "7",
            "offset": [
                7456,
                7460
            ],
            "fn": "MyLottery.getBalance"
        },
        "3573": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3575": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3576": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3577": {
            "op": "MSTORE"
        },
        "3578": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7354,
                7361
            ],
            "fn": "MyLottery.getBalance"
        },
        "3580": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7354,
                7361
            ],
            "fn": "MyLottery.getBalance"
        },
        "3581": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7354,
                7361
            ],
            "fn": "MyLottery.getBalance"
        },
        "3582": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7354,
                7361
            ],
            "fn": "MyLottery.getBalance"
        },
        "3583": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3585": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3587": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3589": {
            "op": "SHL"
        },
        "3590": {
            "op": "SUB"
        },
        "3591": {
            "op": "DUP5",
            "path": "7",
            "offset": [
                7395,
                7434
            ],
            "fn": "MyLottery.getBalance"
        },
        "3592": {
            "op": "AND",
            "path": "7",
            "offset": [
                7395,
                7434
            ],
            "fn": "MyLottery.getBalance"
        },
        "3593": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7395,
                7434
            ],
            "fn": "MyLottery.getBalance"
        },
        "3594": {
            "op": "PUSH4",
            "value": "0x70A08231",
            "path": "7",
            "offset": [
                7395,
                7434
            ],
            "fn": "MyLottery.getBalance"
        },
        "3599": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7395,
                7434
            ],
            "fn": "MyLottery.getBalance"
        },
        "3600": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3602": {
            "op": "ADD"
        },
        "3603": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3605": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3607": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3608": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3609": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3610": {
            "op": "SUB",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3611": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3612": {
            "op": "DUP7",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3613": {
            "op": "GAS",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3614": {
            "op": "STATICCALL",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3615": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3616": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3617": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3618": {
            "op": "PUSH2",
            "value": "0xE2F",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3621": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3622": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3623": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3625": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3626": {
            "op": "RETURNDATACOPY",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3627": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3628": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3630": {
            "op": "REVERT",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3631": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3632": {
            "op": "POP",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3633": {
            "op": "POP",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3634": {
            "op": "POP",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3635": {
            "op": "POP",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3636": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3638": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3639": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3640": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3642": {
            "op": "NOT",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3643": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3645": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3646": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3647": {
            "op": "AND",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3648": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3649": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3650": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3651": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3653": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3654": {
            "op": "POP",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3655": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3656": {
            "op": "ADD",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3657": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3658": {
            "op": "PUSH2",
            "value": "0xE53",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3661": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3662": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3663": {
            "op": "PUSH2",
            "value": "0x1799",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3666": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3667": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7395,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3668": {
            "op": "SWAP4",
            "path": "7",
            "offset": [
                7377,
                7471
            ],
            "fn": "MyLottery.getBalance"
        },
        "3669": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "3670": {
            "op": "POP"
        },
        "3671": {
            "op": "POP"
        },
        "3672": {
            "op": "POP"
        },
        "3673": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                7258,
                7502
            ],
            "fn": "MyLottery.getBalance"
        },
        "3674": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3675": {
            "op": "PUSH2",
            "value": "0xE62",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "3678": {
            "op": "PUSH2",
            "value": "0xEA2",
            "path": "0",
            "offset": [
                1094,
                1105
            ]
        },
        "3681": {
            "op": "JUMP",
            "jump": "i",
            "path": "0",
            "offset": [
                1094,
                1107
            ]
        },
        "3682": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1094,
                1107
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3683": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                6974,
                6994
            ],
            "fn": "MyLottery.setEntranceFee",
            "statement": 37
        },
        "3685": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                6957,
                6970
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3687": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                6957,
                6970
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3688": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                6957,
                6970
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3691": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6957,
                6970
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3692": {
            "op": "DIV",
            "path": "7",
            "offset": [
                6957,
                6970
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3693": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                6957,
                6970
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3695": {
            "op": "AND",
            "path": "7",
            "offset": [
                6957,
                6970
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3696": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3698": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3699": {
            "op": "GT",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3700": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3701": {
            "op": "PUSH2",
            "value": "0xE80",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3704": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3705": {
            "op": "PUSH2",
            "value": "0xE80",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3708": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3711": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3712": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3713": {
            "op": "EQ",
            "path": "7",
            "offset": [
                6957,
                6994
            ],
            "fn": "MyLottery.setEntranceFee",
            "branch": 90
        },
        "3714": {
            "op": "PUSH2",
            "value": "0xE9D",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3717": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee",
            "branch": 90
        },
        "3718": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3720": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3721": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3725": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3727": {
            "op": "SHL"
        },
        "3728": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3729": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3730": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3732": {
            "op": "ADD",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3733": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3736": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3737": {
            "op": "PUSH2",
            "value": "0x18EA",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3740": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3741": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                6936,
                7049
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3742": {
            "op": "PUSH1",
            "value": "0x7",
            "path": "7",
            "offset": [
                7059,
                7067
            ],
            "fn": "MyLottery.setEntranceFee",
            "statement": 38
        },
        "3744": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                7059,
                7079
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3745": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                6864,
                7086
            ],
            "fn": "MyLottery.setEntranceFee"
        },
        "3746": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                1359,
                1489
            ],
            "fn": "Ownable._checkOwner"
        },
        "3747": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                1247,
                1254
            ],
            "fn": "Ownable.owner"
        },
        "3749": {
            "op": "SLOAD",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "3750": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3752": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3754": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3756": {
            "op": "SHL"
        },
        "3757": {
            "op": "SUB"
        },
        "3758": {
            "op": "AND",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "3759": {
            "op": "CALLER",
            "path": "2",
            "offset": [
                719,
                729
            ],
            "fn": "Context._msgSender",
            "statement": 39
        },
        "3760": {
            "op": "EQ",
            "path": "0",
            "offset": [
                1422,
                1445
            ],
            "fn": "Ownable._checkOwner",
            "statement": 40,
            "branch": 100
        },
        "3761": {
            "op": "PUSH2",
            "value": "0x962",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3764": {
            "op": "JUMPI",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner",
            "branch": 100
        },
        "3765": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3767": {
            "op": "MLOAD",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3768": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3772": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3774": {
            "op": "SHL"
        },
        "3775": {
            "op": "DUP2",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3776": {
            "op": "MSTORE",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3777": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3779": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3781": {
            "op": "DUP3",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3782": {
            "op": "ADD",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3783": {
            "op": "DUP2"
        },
        "3784": {
            "op": "SWAP1"
        },
        "3785": {
            "op": "MSTORE"
        },
        "3786": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3788": {
            "op": "DUP3"
        },
        "3789": {
            "op": "ADD"
        },
        "3790": {
            "op": "MSTORE"
        },
        "3791": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
        },
        "3824": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3826": {
            "op": "DUP3"
        },
        "3827": {
            "op": "ADD"
        },
        "3828": {
            "op": "MSTORE"
        },
        "3829": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3831": {
            "op": "ADD"
        },
        "3832": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "0",
            "offset": [
                1414,
                1482
            ],
            "fn": "Ownable._checkOwner"
        },
        "3835": {
            "op": "JUMP"
        },
        "3836": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                392,
                1095
            ],
            "fn": "Strings.toString"
        },
        "3837": {
            "op": "PUSH1",
            "value": "0x60",
            "path": "3",
            "offset": [
                448,
                461
            ],
            "fn": "Strings.toString"
        },
        "3839": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                665,
                670
            ],
            "fn": "Strings.toString"
        },
        "3840": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "3",
            "offset": [
                674,
                675
            ],
            "fn": "Strings.toString"
        },
        "3842": {
            "op": "SUB",
            "path": "3",
            "offset": [
                665,
                675
            ],
            "fn": "Strings.toString",
            "branch": 101
        },
        "3843": {
            "op": "PUSH2",
            "value": "0xF23",
            "path": "3",
            "offset": [
                661,
                712
            ],
            "fn": "Strings.toString"
        },
        "3846": {
            "op": "JUMPI",
            "path": "3",
            "offset": [
                661,
                712
            ],
            "fn": "Strings.toString",
            "branch": 101
        },
        "3847": {
            "op": "POP"
        },
        "3848": {
            "op": "POP"
        },
        "3849": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString",
            "statement": 41
        },
        "3851": {
            "op": "DUP1",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3852": {
            "op": "MLOAD",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3853": {
            "op": "DUP1",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3854": {
            "op": "DUP3",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3855": {
            "op": "ADD",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3856": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3857": {
            "op": "SWAP2",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3858": {
            "op": "MSTORE",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3859": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3861": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3862": {
            "op": "MSTORE",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3863": {
            "op": "PUSH1",
            "value": "0x3"
        },
        "3865": {
            "op": "PUSH1",
            "value": "0xFC"
        },
        "3867": {
            "op": "SHL"
        },
        "3868": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3870": {
            "op": "DUP3",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3871": {
            "op": "ADD",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3872": {
            "op": "MSTORE",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3873": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                691,
                701
            ],
            "fn": "Strings.toString"
        },
        "3874": {
            "op": "JUMP",
            "jump": "o",
            "path": "3",
            "offset": [
                392,
                1095
            ],
            "fn": "Strings.toString"
        },
        "3875": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                661,
                712
            ],
            "fn": "Strings.toString"
        },
        "3876": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                736,
                741
            ],
            "fn": "Strings.toString"
        },
        "3877": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "3",
            "offset": [
                721,
                733
            ],
            "fn": "Strings.toString"
        },
        "3879": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                775,
                850
            ],
            "fn": "Strings.toString"
        },
        "3880": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                782,
                791
            ],
            "fn": "Strings.toString"
        },
        "3881": {
            "op": "ISZERO",
            "path": "3",
            "offset": [
                782,
                791
            ],
            "fn": "Strings.toString"
        },
        "3882": {
            "op": "PUSH2",
            "value": "0xF4D",
            "path": "3",
            "offset": [
                775,
                850
            ],
            "fn": "Strings.toString"
        },
        "3885": {
            "op": "JUMPI",
            "path": "3",
            "offset": [
                775,
                850
            ],
            "fn": "Strings.toString"
        },
        "3886": {
            "op": "DUP1",
            "path": "3",
            "offset": [
                807,
                815
            ],
            "fn": "Strings.toString",
            "statement": 42
        },
        "3887": {
            "op": "PUSH2",
            "value": "0xF37",
            "path": "3",
            "offset": [
                807,
                815
            ],
            "fn": "Strings.toString"
        },
        "3890": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                807,
                815
            ],
            "fn": "Strings.toString"
        },
        "3891": {
            "op": "PUSH2",
            "value": "0x194F",
            "path": "3",
            "offset": [
                807,
                815
            ],
            "fn": "Strings.toString"
        },
        "3894": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                807,
                815
            ],
            "fn": "Strings.toString"
        },
        "3895": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                807,
                815
            ],
            "fn": "Strings.toString"
        },
        "3896": {
            "op": "SWAP2",
            "path": "3",
            "offset": [
                807,
                815
            ],
            "fn": "Strings.toString"
        },
        "3897": {
            "op": "POP"
        },
        "3898": {
            "op": "PUSH2",
            "value": "0xF46",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString",
            "statement": 43
        },
        "3901": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString"
        },
        "3902": {
            "op": "POP"
        },
        "3903": {
            "op": "PUSH1",
            "value": "0xA",
            "path": "3",
            "offset": [
                837,
                839
            ],
            "fn": "Strings.toString"
        },
        "3905": {
            "op": "DUP4",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString"
        },
        "3906": {
            "op": "PUSH2",
            "value": "0x197E",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString"
        },
        "3909": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString"
        },
        "3910": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString"
        },
        "3911": {
            "op": "SWAP2",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString"
        },
        "3912": {
            "op": "POP",
            "path": "3",
            "offset": [
                829,
                839
            ],
            "fn": "Strings.toString"
        },
        "3913": {
            "op": "PUSH2",
            "value": "0xF27",
            "path": "3",
            "offset": [
                775,
                850
            ],
            "fn": "Strings.toString"
        },
        "3916": {
            "op": "JUMP",
            "path": "3",
            "offset": [
                775,
                850
            ],
            "fn": "Strings.toString"
        },
        "3917": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                775,
                850
            ],
            "fn": "Strings.toString"
        },
        "3918": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "3",
            "offset": [
                859,
                878
            ],
            "fn": "Strings.toString"
        },
        "3920": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                891,
                897
            ],
            "fn": "Strings.toString"
        },
        "3921": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3930": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3931": {
            "op": "GT",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3932": {
            "op": "ISZERO",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3933": {
            "op": "PUSH2",
            "value": "0xF68",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3936": {
            "op": "JUMPI",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3937": {
            "op": "PUSH2",
            "value": "0xF68",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3940": {
            "op": "PUSH2",
            "value": "0x1992",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3943": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3944": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3945": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3947": {
            "op": "MLOAD",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3948": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3949": {
            "op": "DUP1",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3950": {
            "op": "DUP3",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3951": {
            "op": "MSTORE",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3952": {
            "op": "DUP1",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3953": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3955": {
            "op": "ADD",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3956": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3958": {
            "op": "NOT",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3959": {
            "op": "AND",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3960": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3962": {
            "op": "ADD",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3963": {
            "op": "DUP3",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3964": {
            "op": "ADD",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3965": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3967": {
            "op": "MSTORE",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3968": {
            "op": "DUP1",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3969": {
            "op": "ISZERO",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3970": {
            "op": "PUSH2",
            "value": "0xF92",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3973": {
            "op": "JUMPI",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3974": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3976": {
            "op": "DUP3",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3977": {
            "op": "ADD",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3978": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3979": {
            "op": "DUP1",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3980": {
            "op": "CALLDATASIZE",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3981": {
            "op": "DUP4",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3982": {
            "op": "CALLDATACOPY",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3983": {
            "op": "ADD",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3984": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3985": {
            "op": "POP"
        },
        "3986": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3987": {
            "op": "POP",
            "path": "3",
            "offset": [
                881,
                898
            ],
            "fn": "Strings.toString"
        },
        "3988": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                859,
                898
            ],
            "fn": "Strings.toString"
        },
        "3989": {
            "op": "POP",
            "path": "3",
            "offset": [
                859,
                898
            ],
            "fn": "Strings.toString"
        },
        "3990": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                908,
                1058
            ],
            "fn": "Strings.toString"
        },
        "3991": {
            "op": "DUP5",
            "path": "3",
            "offset": [
                915,
                925
            ],
            "fn": "Strings.toString"
        },
        "3992": {
            "op": "ISZERO",
            "path": "3",
            "offset": [
                915,
                925
            ],
            "fn": "Strings.toString"
        },
        "3993": {
            "op": "PUSH2",
            "value": "0xFFD",
            "path": "3",
            "offset": [
                908,
                1058
            ],
            "fn": "Strings.toString"
        },
        "3996": {
            "op": "JUMPI",
            "path": "3",
            "offset": [
                908,
                1058
            ],
            "fn": "Strings.toString"
        },
        "3997": {
            "op": "PUSH2",
            "value": "0xFA7",
            "path": "3",
            "offset": [
                941,
                952
            ],
            "fn": "Strings.toString",
            "statement": 44
        },
        "4000": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "3",
            "offset": [
                951,
                952
            ],
            "fn": "Strings.toString"
        },
        "4002": {
            "op": "DUP4",
            "path": "3",
            "offset": [
                941,
                952
            ],
            "fn": "Strings.toString"
        },
        "4003": {
            "op": "PUSH2",
            "value": "0x19A8",
            "path": "3",
            "offset": [
                941,
                952
            ],
            "fn": "Strings.toString"
        },
        "4006": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                941,
                952
            ],
            "fn": "Strings.toString"
        },
        "4007": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                941,
                952
            ],
            "fn": "Strings.toString"
        },
        "4008": {
            "op": "SWAP2",
            "path": "3",
            "offset": [
                941,
                952
            ],
            "fn": "Strings.toString"
        },
        "4009": {
            "op": "POP"
        },
        "4010": {
            "op": "PUSH2",
            "value": "0xFB4",
            "path": "3",
            "offset": [
                1009,
                1019
            ],
            "fn": "Strings.toString",
            "statement": 45
        },
        "4013": {
            "op": "PUSH1",
            "value": "0xA",
            "path": "3",
            "offset": [
                1017,
                1019
            ],
            "fn": "Strings.toString"
        },
        "4015": {
            "op": "DUP7",
            "path": "3",
            "offset": [
                1009,
                1014
            ],
            "fn": "Strings.toString"
        },
        "4016": {
            "op": "PUSH2",
            "value": "0x19BF",
            "path": "3",
            "offset": [
                1009,
                1019
            ],
            "fn": "Strings.toString"
        },
        "4019": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                1009,
                1019
            ],
            "fn": "Strings.toString"
        },
        "4020": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                1009,
                1019
            ],
            "fn": "Strings.toString"
        },
        "4021": {
            "op": "PUSH2",
            "value": "0xFBF",
            "path": "3",
            "offset": [
                996,
                1020
            ],
            "fn": "Strings.toString"
        },
        "4024": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                996,
                1020
            ],
            "fn": "Strings.toString"
        },
        "4025": {
            "op": "PUSH1",
            "value": "0x30",
            "path": "3",
            "offset": [
                996,
                998
            ],
            "fn": "Strings.toString"
        },
        "4027": {
            "op": "PUSH2",
            "value": "0x1937",
            "path": "3",
            "offset": [
                996,
                1020
            ],
            "fn": "Strings.toString"
        },
        "4030": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                996,
                1020
            ],
            "fn": "Strings.toString"
        },
        "4031": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                996,
                1020
            ],
            "fn": "Strings.toString"
        },
        "4032": {
            "op": "PUSH1",
            "value": "0xF8",
            "path": "3",
            "offset": [
                983,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4034": {
            "op": "SHL",
            "path": "3",
            "offset": [
                983,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4035": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                966,
                972
            ],
            "fn": "Strings.toString"
        },
        "4036": {
            "op": "DUP4",
            "path": "3",
            "offset": [
                973,
                979
            ],
            "fn": "Strings.toString"
        },
        "4037": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4038": {
            "op": "MLOAD",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4039": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4040": {
            "op": "LT",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4041": {
            "op": "PUSH2",
            "value": "0xFD4",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4044": {
            "op": "JUMPI",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4045": {
            "op": "PUSH2",
            "value": "0xFD4",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4048": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4051": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4052": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4053": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4055": {
            "op": "ADD",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4056": {
            "op": "ADD",
            "path": "3",
            "offset": [
                966,
                980
            ],
            "fn": "Strings.toString"
        },
        "4057": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4058": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4060": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4062": {
            "op": "PUSH1",
            "value": "0xF8"
        },
        "4064": {
            "op": "SHL"
        },
        "4065": {
            "op": "SUB"
        },
        "4066": {
            "op": "NOT",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4067": {
            "op": "AND",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4068": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4069": {
            "op": "DUP2",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4070": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4072": {
            "op": "BYTE",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4073": {
            "op": "SWAP1",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4074": {
            "op": "MSTORE8",
            "path": "3",
            "offset": [
                966,
                1022
            ],
            "fn": "Strings.toString"
        },
        "4075": {
            "op": "POP"
        },
        "4076": {
            "op": "PUSH2",
            "value": "0xFF6",
            "path": "3",
            "offset": [
                1036,
                1047
            ],
            "fn": "Strings.toString",
            "statement": 46
        },
        "4079": {
            "op": "PUSH1",
            "value": "0xA",
            "path": "3",
            "offset": [
                1045,
                1047
            ],
            "fn": "Strings.toString"
        },
        "4081": {
            "op": "DUP7",
            "path": "3",
            "offset": [
                1036,
                1047
            ],
            "fn": "Strings.toString"
        },
        "4082": {
            "op": "PUSH2",
            "value": "0x197E",
            "path": "3",
            "offset": [
                1036,
                1047
            ],
            "fn": "Strings.toString"
        },
        "4085": {
            "op": "JUMP",
            "jump": "i",
            "path": "3",
            "offset": [
                1036,
                1047
            ],
            "fn": "Strings.toString"
        },
        "4086": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                1036,
                1047
            ],
            "fn": "Strings.toString"
        },
        "4087": {
            "op": "SWAP5",
            "path": "3",
            "offset": [
                1036,
                1047
            ],
            "fn": "Strings.toString"
        },
        "4088": {
            "op": "POP",
            "path": "3",
            "offset": [
                1036,
                1047
            ],
            "fn": "Strings.toString"
        },
        "4089": {
            "op": "PUSH2",
            "value": "0xF96",
            "path": "3",
            "offset": [
                908,
                1058
            ],
            "fn": "Strings.toString"
        },
        "4092": {
            "op": "JUMP",
            "path": "3",
            "offset": [
                908,
                1058
            ],
            "fn": "Strings.toString"
        },
        "4093": {
            "op": "JUMPDEST",
            "path": "3",
            "offset": [
                908,
                1058
            ],
            "fn": "Strings.toString"
        },
        "4094": {
            "op": "SWAP5",
            "path": "3",
            "offset": [
                1081,
                1087
            ],
            "fn": "Strings.toString",
            "statement": 47
        },
        "4095": {
            "op": "SWAP4",
            "path": "3",
            "offset": [
                392,
                1095
            ],
            "fn": "Strings.toString"
        },
        "4096": {
            "op": "POP"
        },
        "4097": {
            "op": "POP"
        },
        "4098": {
            "op": "POP"
        },
        "4099": {
            "op": "POP"
        },
        "4100": {
            "op": "JUMP",
            "jump": "o",
            "path": "3",
            "offset": [
                392,
                1095
            ],
            "fn": "Strings.toString"
        },
        "4101": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8634,
                9710
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4102": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8674,
                8681
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4104": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                8731,
                8763
            ],
            "fn": "MyLottery.sendPrizes",
            "statement": 48
        },
        "4106": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                8714,
                8727
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4108": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8714,
                8727
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4109": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                8714,
                8727
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4112": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8714,
                8727
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4113": {
            "op": "DIV",
            "path": "7",
            "offset": [
                8714,
                8727
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4114": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                8714,
                8727
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4116": {
            "op": "AND",
            "path": "7",
            "offset": [
                8714,
                8727
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4117": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4119": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4120": {
            "op": "GT",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4121": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4122": {
            "op": "PUSH2",
            "value": "0x1025",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4125": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4126": {
            "op": "PUSH2",
            "value": "0x1025",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4129": {
            "op": "PUSH2",
            "value": "0x1729",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4132": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4133": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4134": {
            "op": "EQ",
            "path": "7",
            "offset": [
                8714,
                8763
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 91
        },
        "4135": {
            "op": "PUSH2",
            "value": "0x1072",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4138": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 91
        },
        "4139": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4141": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4142": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4146": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4148": {
            "op": "SHL"
        },
        "4149": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4150": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4151": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4153": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4155": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4156": {
            "op": "ADD",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4157": {
            "op": "MSTORE"
        },
        "4158": {
            "op": "PUSH1",
            "value": "0x17"
        },
        "4160": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4162": {
            "op": "DUP3"
        },
        "4163": {
            "op": "ADD"
        },
        "4164": {
            "op": "MSTORE"
        },
        "4165": {
            "op": "PUSH32",
            "value": "0x2073656E64207072697A652077726F6E67207374617465000000000000000000"
        },
        "4198": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4200": {
            "op": "DUP3"
        },
        "4201": {
            "op": "ADD"
        },
        "4202": {
            "op": "MSTORE"
        },
        "4203": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "4205": {
            "op": "ADD"
        },
        "4206": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4209": {
            "op": "JUMP"
        },
        "4210": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8693,
                8812
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4211": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                8893,
                8902
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4213": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8893,
                8902
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4214": {
            "op": "SELFBALANCE",
            "path": "7",
            "offset": [
                8844,
                8865
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4215": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8844,
                8865
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4216": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                8893,
                8902
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4218": {
            "op": "AND",
            "path": "7",
            "offset": [
                8893,
                8902
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 92
        },
        "4219": {
            "op": "PUSH2",
            "value": "0x1183",
            "path": "7",
            "offset": [
                8875,
                9371
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4222": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8875,
                9371
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 92
        },
        "4223": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8997,
                9006
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4225": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                9008,
                9025
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4226": {
            "op": "PUSH2",
            "value": "0x1093",
            "path": "7",
            "offset": [
                9029,
                9036
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4229": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                1247,
                1254
            ],
            "fn": "Ownable.owner"
        },
        "4231": {
            "op": "SLOAD",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "4232": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4234": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4236": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4238": {
            "op": "SHL"
        },
        "4239": {
            "op": "SUB"
        },
        "4240": {
            "op": "AND",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "4241": {
            "op": "SWAP1",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "4242": {
            "op": "JUMP",
            "path": "0",
            "offset": [
                1201,
                1286
            ],
            "fn": "Ownable.owner"
        },
        "4243": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9029,
                9036
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4244": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4246": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4248": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4250": {
            "op": "SHL"
        },
        "4251": {
            "op": "SUB"
        },
        "4252": {
            "op": "AND",
            "path": "7",
            "offset": [
                9029,
                9041
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4253": {
            "op": "PUSH1",
            "value": "0x64",
            "path": "7",
            "offset": [
                9097,
                9100
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4255": {
            "op": "PUSH1",
            "value": "0xA",
            "path": "7",
            "offset": [
                9081,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4257": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                9081,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4258": {
            "op": "DUP6",
            "path": "7",
            "offset": [
                9067,
                9078
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4259": {
            "op": "PUSH2",
            "value": "0x10AC",
            "path": "7",
            "offset": [
                9067,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4262": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9067,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4263": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9067,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4264": {
            "op": "PUSH2",
            "value": "0x19E9",
            "path": "7",
            "offset": [
                9067,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4267": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                9067,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4268": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9067,
                9093
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4269": {
            "op": "PUSH2",
            "value": "0x10B6",
            "path": "7",
            "offset": [
                9066,
                9100
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4272": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9066,
                9100
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4273": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9066,
                9100
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4274": {
            "op": "PUSH2",
            "value": "0x197E",
            "path": "7",
            "offset": [
                9066,
                9100
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4277": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                9066,
                9100
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4278": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9066,
                9100
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4279": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4281": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4282": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4284": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4285": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4286": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4287": {
            "op": "DUP6",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4288": {
            "op": "DUP8",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4289": {
            "op": "GAS",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4290": {
            "op": "CALL",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4291": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4292": {
            "op": "POP",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4293": {
            "op": "POP",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4294": {
            "op": "POP",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4295": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4296": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4297": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4299": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4300": {
            "op": "EQ",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4301": {
            "op": "PUSH2",
            "value": "0x10F2",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4304": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4305": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4307": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4308": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4309": {
            "op": "POP",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4310": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4312": {
            "op": "NOT",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4313": {
            "op": "PUSH1",
            "value": "0x3F",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4315": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4316": {
            "op": "ADD",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4317": {
            "op": "AND",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4318": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4319": {
            "op": "ADD",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4320": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4322": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4323": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4324": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4325": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4326": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4327": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4329": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4331": {
            "op": "DUP5",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4332": {
            "op": "ADD",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4333": {
            "op": "RETURNDATACOPY",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4334": {
            "op": "PUSH2",
            "value": "0x10F7",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4337": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4338": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4339": {
            "op": "PUSH1",
            "value": "0x60",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4341": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4342": {
            "op": "POP",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4343": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9029,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4344": {
            "op": "POP"
        },
        "4345": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                9132,
                9141
            ],
            "fn": "MyLottery.sendPrizes",
            "statement": 49
        },
        "4347": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4348": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4349": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "4351": {
            "op": "NOT"
        },
        "4352": {
            "op": "AND",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4353": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4354": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4355": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4356": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4357": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4358": {
            "op": "OR",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4359": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4360": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4361": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4362": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4363": {
            "op": "SWAP4",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4364": {
            "op": "POP"
        },
        "4365": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8996,
                9118
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4366": {
            "op": "POP"
        },
        "4367": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                9132,
                9148
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4369": {
            "op": "AND",
            "path": "7",
            "offset": [
                9167,
                9176
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 93
        },
        "4370": {
            "op": "PUSH2",
            "value": "0x1180",
            "path": "7",
            "offset": [
                9162,
                9361
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4373": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                9162,
                9361
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 93
        },
        "4374": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                1247,
                1254
            ],
            "fn": "Ownable.owner"
        },
        "4376": {
            "op": "SLOAD",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "4377": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4379": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4381": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4383": {
            "op": "SHL"
        },
        "4384": {
            "op": "SUB"
        },
        "4385": {
            "op": "AND",
            "path": "0",
            "offset": [
                1273,
                1279
            ],
            "fn": "Ownable.owner"
        },
        "4386": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4388": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4390": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4392": {
            "op": "SHL"
        },
        "4393": {
            "op": "SUB"
        },
        "4394": {
            "op": "AND",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes",
            "statement": 50
        },
        "4395": {
            "op": "PUSH32",
            "value": "0x7A4C4FDF5D3172470D96D64C965B30DE694852175EFC7A6B546FB3BDBF76D178",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4428": {
            "op": "PUSH1",
            "value": "0x64",
            "path": "7",
            "offset": [
                9299,
                9302
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4430": {
            "op": "PUSH1",
            "value": "0xA",
            "path": "7",
            "offset": [
                9283,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4432": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                9283,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4433": {
            "op": "DUP7",
            "path": "7",
            "offset": [
                9269,
                9280
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4434": {
            "op": "PUSH2",
            "value": "0x115B",
            "path": "7",
            "offset": [
                9269,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4437": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9269,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4438": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9269,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4439": {
            "op": "PUSH2",
            "value": "0x19E9",
            "path": "7",
            "offset": [
                9269,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4442": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                9269,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4443": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9269,
                9295
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4444": {
            "op": "PUSH2",
            "value": "0x1165",
            "path": "7",
            "offset": [
                9268,
                9302
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4447": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9268,
                9302
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4448": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9268,
                9302
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4449": {
            "op": "PUSH2",
            "value": "0x197E",
            "path": "7",
            "offset": [
                9268,
                9302
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4452": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                9268,
                9302
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4453": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9268,
                9302
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4454": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4456": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4457": {
            "op": "SWAP1"
        },
        "4458": {
            "op": "DUP2"
        },
        "4459": {
            "op": "MSTORE"
        },
        "4460": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4462": {
            "op": "ADD"
        },
        "4463": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4465": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4466": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4467": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4468": {
            "op": "SUB",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4469": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4470": {
            "op": "LOG2",
            "path": "7",
            "offset": [
                9201,
                9320
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4471": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                9345,
                9346
            ],
            "fn": "MyLottery.sendPrizes",
            "statement": 51
        },
        "4473": {
            "op": "SWAP4",
            "path": "7",
            "offset": [
                9338,
                9346
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4474": {
            "op": "POP",
            "path": "7",
            "offset": [
                9338,
                9346
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4475": {
            "op": "POP",
            "path": "7",
            "offset": [
                9338,
                9346
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4476": {
            "op": "POP",
            "path": "7",
            "offset": [
                9338,
                9346
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4477": {
            "op": "POP",
            "path": "7",
            "offset": [
                9338,
                9346
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4478": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8634,
                9710
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4479": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                8634,
                9710
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4480": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9162,
                9361
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4481": {
            "op": "POP",
            "path": "7",
            "offset": [
                8982,
                9371
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4482": {
            "op": "POP",
            "path": "7",
            "offset": [
                8982,
                9371
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4483": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8875,
                9371
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4484": {
            "op": "PUSH1",
            "value": "0x3",
            "path": "7",
            "offset": [
                9414,
                9426
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4486": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                9414,
                9426
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4487": {
            "op": "PUSH1",
            "value": "0x9",
            "path": "7",
            "offset": [
                9467,
                9479
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4489": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                9467,
                9479
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4490": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9382,
                9391
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4492": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9382,
                9391
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4493": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                9382,
                9391
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4494": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9382,
                9391
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4495": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4497": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4499": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4501": {
            "op": "SHL"
        },
        "4502": {
            "op": "SUB"
        },
        "4503": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9414,
                9426
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4504": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9414,
                9426
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4505": {
            "op": "AND",
            "path": "7",
            "offset": [
                9414,
                9426
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4506": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9414,
                9426
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4507": {
            "op": "PUSH1",
            "value": "0x64",
            "path": "7",
            "offset": [
                9483,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4509": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9483,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4510": {
            "op": "PUSH2",
            "value": "0x11A7",
            "path": "7",
            "offset": [
                9453,
                9479
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4513": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9453,
                9479
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4514": {
            "op": "DUP7",
            "path": "7",
            "offset": [
                9453,
                9464
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4515": {
            "op": "PUSH2",
            "value": "0x19E9",
            "path": "7",
            "offset": [
                9453,
                9479
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4518": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                9453,
                9479
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4519": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9453,
                9479
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4520": {
            "op": "PUSH2",
            "value": "0x11B1",
            "path": "7",
            "offset": [
                9452,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4523": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9452,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4524": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9452,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4525": {
            "op": "PUSH2",
            "value": "0x197E",
            "path": "7",
            "offset": [
                9452,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4528": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                9452,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4529": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9452,
                9486
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4530": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4532": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4533": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4535": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4536": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4537": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4538": {
            "op": "DUP6",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4539": {
            "op": "DUP8",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4540": {
            "op": "GAS",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4541": {
            "op": "CALL",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4542": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4543": {
            "op": "POP",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4544": {
            "op": "POP",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4545": {
            "op": "POP",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4546": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4547": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4548": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4550": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4551": {
            "op": "EQ",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4552": {
            "op": "PUSH2",
            "value": "0x11ED",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4555": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4556": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4558": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4559": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4560": {
            "op": "POP",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4561": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4563": {
            "op": "NOT",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4564": {
            "op": "PUSH1",
            "value": "0x3F",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4566": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4567": {
            "op": "ADD",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4568": {
            "op": "AND",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4569": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4570": {
            "op": "ADD",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4571": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4573": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4574": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4575": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4576": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4577": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4578": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4580": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4582": {
            "op": "DUP5",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4583": {
            "op": "ADD",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4584": {
            "op": "RETURNDATACOPY",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4585": {
            "op": "PUSH2",
            "value": "0x11F2",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4588": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4589": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4590": {
            "op": "PUSH1",
            "value": "0x60",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4592": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4593": {
            "op": "POP",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4594": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4595": {
            "op": "POP",
            "path": "7",
            "offset": [
                9414,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4596": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9381,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4597": {
            "op": "POP",
            "path": "7",
            "offset": [
                9381,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4598": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9381,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4599": {
            "op": "POP",
            "path": "7",
            "offset": [
                9381,
                9500
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4600": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                9515,
                9519
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 94
        },
        "4601": {
            "op": "PUSH2",
            "value": "0x123D",
            "path": "7",
            "offset": [
                9510,
                9686
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4604": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                9510,
                9686
            ],
            "fn": "MyLottery.sendPrizes",
            "branch": 94
        },
        "4605": {
            "op": "PUSH1",
            "value": "0x3",
            "path": "7",
            "offset": [
                9575,
                9587
            ],
            "fn": "MyLottery.sendPrizes",
            "statement": 52
        },
        "4607": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                9575,
                9587
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4608": {
            "op": "PUSH1",
            "value": "0x9",
            "path": "7",
            "offset": [
                9620,
                9632
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4610": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                9620,
                9632
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4611": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4613": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4615": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4617": {
            "op": "SHL"
        },
        "4618": {
            "op": "SUB"
        },
        "4619": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9575,
                9587
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4620": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                9575,
                9587
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4621": {
            "op": "AND",
            "path": "7",
            "offset": [
                9575,
                9587
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4622": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9575,
                9587
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4623": {
            "op": "PUSH32",
            "value": "0x977E2C32BE07C8AA27BFE58F2BF200E11ECA859B94D36E76E645FCAF1D4CC946",
            "path": "7",
            "offset": [
                9540,
                9653
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4656": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9540,
                9653
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4657": {
            "op": "PUSH1",
            "value": "0x64",
            "path": "7",
            "offset": [
                9636,
                9639
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4659": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9636,
                9639
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4660": {
            "op": "PUSH2",
            "value": "0x115B",
            "path": "7",
            "offset": [
                9606,
                9632
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4663": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                9606,
                9632
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4664": {
            "op": "DUP8",
            "path": "7",
            "offset": [
                9606,
                9617
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4665": {
            "op": "PUSH2",
            "value": "0x19E9",
            "path": "7",
            "offset": [
                9606,
                9632
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4668": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                9606,
                9632
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4669": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                9510,
                9686
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4670": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                9702,
                9703
            ],
            "fn": "MyLottery.sendPrizes",
            "statement": 53
        },
        "4672": {
            "op": "SWAP4",
            "path": "7",
            "offset": [
                9695,
                9703
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4673": {
            "op": "POP",
            "path": "7",
            "offset": [
                9695,
                9703
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4674": {
            "op": "POP",
            "path": "7",
            "offset": [
                9695,
                9703
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4675": {
            "op": "POP",
            "path": "7",
            "offset": [
                9695,
                9703
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4676": {
            "op": "POP",
            "path": "7",
            "offset": [
                9695,
                9703
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4677": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8634,
                9710
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4678": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                8634,
                9710
            ],
            "fn": "MyLottery.sendPrizes"
        },
        "4679": {
            "op": "JUMPDEST",
            "path": "0",
            "offset": [
                2433,
                2620
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4680": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "0",
            "offset": [
                2506,
                2522
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4682": {
            "op": "DUP1",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4683": {
            "op": "SLOAD",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4684": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4686": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4688": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4690": {
            "op": "SHL"
        },
        "4691": {
            "op": "SUB"
        },
        "4692": {
            "op": "DUP4",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership",
            "statement": 54
        },
        "4693": {
            "op": "DUP2",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4694": {
            "op": "AND",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4695": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4697": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4699": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4701": {
            "op": "SHL"
        },
        "4702": {
            "op": "SUB"
        },
        "4703": {
            "op": "NOT"
        },
        "4704": {
            "op": "DUP4",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4705": {
            "op": "AND",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4706": {
            "op": "DUP2",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4707": {
            "op": "OR",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4708": {
            "op": "DUP5",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4709": {
            "op": "SSTORE",
            "path": "0",
            "offset": [
                2541,
                2558
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4710": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "0",
            "offset": [
                2573,
                2613
            ],
            "fn": "Ownable._transferOwnership",
            "statement": 55
        },
        "4712": {
            "op": "MLOAD",
            "path": "0",
            "offset": [
                2573,
                2613
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4713": {
            "op": "SWAP2",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4714": {
            "op": "SWAP1",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4715": {
            "op": "SWAP3",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4716": {
            "op": "AND",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4717": {
            "op": "SWAP3",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4718": {
            "op": "DUP4",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4719": {
            "op": "SWAP2",
            "path": "0",
            "offset": [
                2525,
                2531
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4720": {
            "op": "PUSH32",
            "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0",
            "path": "0",
            "offset": [
                2573,
                2613
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4753": {
            "op": "SWAP2",
            "path": "0",
            "offset": [
                2573,
                2613
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4754": {
            "op": "SWAP1",
            "path": "0",
            "offset": [
                2506,
                2522
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4755": {
            "op": "LOG3",
            "path": "0",
            "offset": [
                2573,
                2613
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4756": {
            "op": "POP",
            "path": "0",
            "offset": [
                2496,
                2620
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4757": {
            "op": "POP",
            "path": "0",
            "offset": [
                2433,
                2620
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4758": {
            "op": "JUMP",
            "jump": "o",
            "path": "0",
            "offset": [
                2433,
                2620
            ],
            "fn": "Ownable._transferOwnership"
        },
        "4759": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10220,
                10756
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4760": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10278,
                10285
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4762": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4763": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                10295,
                10302
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4765": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10295,
                10309
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4766": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                10291,
                10309
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4768": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10291,
                10309
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4769": {
            "op": "AND",
            "path": "7",
            "offset": [
                10291,
                10309
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4770": {
            "op": "LT",
            "path": "7",
            "offset": [
                10291,
                10309
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4771": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4772": {
            "op": "PUSH2",
            "value": "0x13EF",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4775": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4776": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10410,
                10419
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4778": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10421,
                10438
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4779": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                10442,
                10449
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4781": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                10450,
                10451
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4782": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4784": {
            "op": "AND",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4785": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4786": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4787": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4788": {
            "op": "LT",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4789": {
            "op": "PUSH2",
            "value": "0x12C0",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4792": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4793": {
            "op": "PUSH2",
            "value": "0x12C0",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4796": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4799": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4800": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4801": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4803": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4804": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4805": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4806": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4808": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4809": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4810": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4811": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4812": {
            "op": "PUSH1",
            "value": "0x7",
            "path": "7",
            "offset": [
                10465,
                10473
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4814": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10465,
                10473
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4815": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4817": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4818": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4820": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4822": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4824": {
            "op": "SHL"
        },
        "4825": {
            "op": "SUB"
        },
        "4826": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4827": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4828": {
            "op": "AND",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4829": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4830": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10465,
                10473
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4831": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10465,
                10473
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4832": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4833": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4834": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4835": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4836": {
            "op": "DUP6",
            "path": "7",
            "offset": [
                10465,
                10473
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4837": {
            "op": "DUP8",
            "path": "7",
            "offset": [
                10442,
                10452
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4838": {
            "op": "GAS",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4839": {
            "op": "CALL",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4840": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4841": {
            "op": "POP",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4842": {
            "op": "POP",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4843": {
            "op": "POP",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4844": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4845": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4846": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4848": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4849": {
            "op": "EQ",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4850": {
            "op": "PUSH2",
            "value": "0x1317",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4853": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4854": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4856": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4857": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4858": {
            "op": "POP",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4859": {
            "op": "PUSH1",
            "value": "0x1F",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4861": {
            "op": "NOT",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4862": {
            "op": "PUSH1",
            "value": "0x3F",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4864": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4865": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4866": {
            "op": "AND",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4867": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4868": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4869": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4871": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4872": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4873": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4874": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4875": {
            "op": "RETURNDATASIZE",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4876": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4878": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4880": {
            "op": "DUP5",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4881": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4882": {
            "op": "RETURNDATACOPY",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4883": {
            "op": "PUSH2",
            "value": "0x131C",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4886": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4887": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4888": {
            "op": "PUSH1",
            "value": "0x60",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4890": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4891": {
            "op": "POP",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4892": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4893": {
            "op": "POP",
            "path": "7",
            "offset": [
                10442,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4894": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10409,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4895": {
            "op": "POP",
            "path": "7",
            "offset": [
                10409,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4896": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10409,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4897": {
            "op": "POP",
            "path": "7",
            "offset": [
                10409,
                10508
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4898": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10550,
                10555
            ],
            "fn": "MyLottery.not_enough_participant",
            "statement": 56
        },
        "4900": {
            "op": "PUSH1",
            "value": "0x8",
            "path": "7",
            "offset": [
                10522,
                10535
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4902": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4904": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                10536,
                10543
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4906": {
            "op": "DUP7",
            "path": "7",
            "offset": [
                10544,
                10545
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4907": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4909": {
            "op": "AND",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4910": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4911": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4912": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4913": {
            "op": "LT",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4914": {
            "op": "PUSH2",
            "value": "0x133D",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4917": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4918": {
            "op": "PUSH2",
            "value": "0x133D",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4921": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4924": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4925": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4926": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4928": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4929": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4930": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4931": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4933": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4934": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4935": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4936": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4937": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4938": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4939": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4940": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4941": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4943": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4945": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4947": {
            "op": "SHL"
        },
        "4948": {
            "op": "SUB"
        },
        "4949": {
            "op": "AND",
            "path": "7",
            "offset": [
                10536,
                10546
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4950": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4951": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4952": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4953": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4954": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4955": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4956": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4957": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4958": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4960": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4961": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4962": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                10522,
                10547
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4963": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4964": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4965": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "4967": {
            "op": "NOT"
        },
        "4968": {
            "op": "AND",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4969": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4970": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4971": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4972": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4973": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4974": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4975": {
            "op": "OR",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4976": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4977": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                10522,
                10555
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4978": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10627,
                10631
            ],
            "fn": "MyLottery.not_enough_participant",
            "branch": 95
        },
        "4979": {
            "op": "PUSH2",
            "value": "0x13DA",
            "path": "7",
            "offset": [
                10622,
                10716
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4982": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10622,
                10716
            ],
            "fn": "MyLottery.not_enough_participant",
            "branch": 95
        },
        "4983": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                10680,
                10687
            ],
            "fn": "MyLottery.not_enough_participant",
            "statement": 57
        },
        "4985": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                10688,
                10689
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4986": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4988": {
            "op": "AND",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4989": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4990": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4991": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4992": {
            "op": "LT",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4993": {
            "op": "PUSH2",
            "value": "0x138C",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4996": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "4997": {
            "op": "PUSH2",
            "value": "0x138C",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5000": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5003": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5004": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5005": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5007": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5008": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5009": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5010": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5012": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5013": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5014": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5015": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5016": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5017": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5018": {
            "op": "PUSH1",
            "value": "0x7",
            "path": "7",
            "offset": [
                10692,
                10700
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5020": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10692,
                10700
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5021": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5023": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5024": {
            "op": "SWAP1"
        },
        "5025": {
            "op": "DUP2"
        },
        "5026": {
            "op": "MSTORE"
        },
        "5027": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5029": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5031": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5033": {
            "op": "SHL"
        },
        "5034": {
            "op": "SUB"
        },
        "5035": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5036": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5037": {
            "op": "AND",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5038": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10680,
                10690
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5039": {
            "op": "PUSH32",
            "value": "0x1198B3902400A4722F08A21EB834E8F872109A5DAB83213639D3670A10D8D40A",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5072": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5073": {
            "op": "ADD"
        },
        "5074": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5076": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5077": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5078": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5079": {
            "op": "SUB",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5080": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5081": {
            "op": "LOG2",
            "path": "7",
            "offset": [
                10656,
                10701
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5082": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10622,
                10716
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5083": {
            "op": "POP",
            "path": "7",
            "offset": [
                10316,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5084": {
            "op": "POP",
            "path": "7",
            "offset": [
                10316,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5085": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant",
            "statement": 58
        },
        "5086": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5087": {
            "op": "PUSH2",
            "value": "0x13E7",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5090": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5091": {
            "op": "PUSH2",
            "value": "0x1A08",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5094": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5095": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5096": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5097": {
            "op": "POP",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5098": {
            "op": "POP",
            "path": "7",
            "offset": [
                10311,
                10314
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5099": {
            "op": "PUSH2",
            "value": "0x129A",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5102": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5103": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5104": {
            "op": "POP",
            "path": "7",
            "offset": [
                10273,
                10726
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5105": {
            "op": "PUSH2",
            "value": "0x962",
            "path": "7",
            "offset": [
                10735,
                10749
            ],
            "fn": "MyLottery.not_enough_participant",
            "statement": 59
        },
        "5108": {
            "op": "PUSH2",
            "value": "0x14E4",
            "path": "7",
            "offset": [
                10735,
                10747
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5111": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10735,
                10749
            ],
            "fn": "MyLottery.not_enough_participant"
        },
        "5112": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5318,
                5866
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5113": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                5541,
                5548
            ],
            "fn": "MyLottery.calculate_winner",
            "statement": 60
        },
        "5115": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                5549,
                5550
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5117": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5118": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5119": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5120": {
            "op": "LT",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5121": {
            "op": "PUSH2",
            "value": "0x140C",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5124": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5125": {
            "op": "PUSH2",
            "value": "0x140C",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5128": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5131": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5132": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5133": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5135": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5136": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5137": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5138": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5140": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5141": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5142": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5143": {
            "op": "ADD",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5144": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5145": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                5586,
                5593
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5147": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5148": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5149": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5151": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5153": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5155": {
            "op": "SHL"
        },
        "5156": {
            "op": "SUB"
        },
        "5157": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5158": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5159": {
            "op": "AND",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5160": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5161": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5163": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5541,
                5551
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5164": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5165": {
            "op": "LT",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5166": {
            "op": "PUSH2",
            "value": "0x1439",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5169": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5170": {
            "op": "PUSH2",
            "value": "0x1439",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5173": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5176": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5177": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5178": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5180": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5181": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5182": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5183": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5185": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5186": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5187": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5188": {
            "op": "ADD",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5189": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5190": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                5618,
                5625
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5192": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                5626,
                5640
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5193": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                5626,
                5640
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5194": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5196": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5198": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5200": {
            "op": "SHL"
        },
        "5201": {
            "op": "SUB"
        },
        "5202": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5203": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5204": {
            "op": "AND",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5205": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5206": {
            "op": "PUSH2",
            "value": "0x1461",
            "path": "7",
            "offset": [
                5626,
                5644
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5209": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5626,
                5644
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5210": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5212": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5586,
                5596
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5213": {
            "op": "PUSH2",
            "value": "0x19A8",
            "path": "7",
            "offset": [
                5626,
                5644
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5216": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                5626,
                5644
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5217": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5626,
                5644
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5218": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5219": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5220": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5221": {
            "op": "LT",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5222": {
            "op": "PUSH2",
            "value": "0x1471",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5225": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5226": {
            "op": "PUSH2",
            "value": "0x1471",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5229": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5232": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5233": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5234": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5236": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5237": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5238": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5239": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5241": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5242": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5243": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5244": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5245": {
            "op": "ADD",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5246": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                5618,
                5645
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5247": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5249": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5250": {
            "op": "PUSH12",
            "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
        },
        "5263": {
            "op": "NOT"
        },
        "5264": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5266": {
            "op": "SWAP6"
        },
        "5267": {
            "op": "DUP7"
        },
        "5268": {
            "op": "SHL"
        },
        "5269": {
            "op": "DUP2"
        },
        "5270": {
            "op": "AND"
        },
        "5271": {
            "op": "SWAP4",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5272": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5273": {
            "op": "ADD",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5274": {
            "op": "SWAP4"
        },
        "5275": {
            "op": "SWAP1"
        },
        "5276": {
            "op": "SWAP4"
        },
        "5277": {
            "op": "MSTORE"
        },
        "5278": {
            "op": "SWAP3"
        },
        "5279": {
            "op": "DUP5"
        },
        "5280": {
            "op": "SHL"
        },
        "5281": {
            "op": "DUP3"
        },
        "5282": {
            "op": "AND"
        },
        "5283": {
            "op": "PUSH1",
            "value": "0x34"
        },
        "5285": {
            "op": "DUP5"
        },
        "5286": {
            "op": "ADD"
        },
        "5287": {
            "op": "MSTORE"
        },
        "5288": {
            "op": "SWAP1"
        },
        "5289": {
            "op": "SWAP3"
        },
        "5290": {
            "op": "SHL"
        },
        "5291": {
            "op": "SWAP1"
        },
        "5292": {
            "op": "SWAP2"
        },
        "5293": {
            "op": "AND"
        },
        "5294": {
            "op": "PUSH1",
            "value": "0x48"
        },
        "5296": {
            "op": "DUP3"
        },
        "5297": {
            "op": "ADD"
        },
        "5298": {
            "op": "MSTORE"
        },
        "5299": {
            "op": "DIFFICULTY",
            "path": "7",
            "offset": [
                5667,
                5683
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5300": {
            "op": "PUSH1",
            "value": "0x5C"
        },
        "5302": {
            "op": "DUP3"
        },
        "5303": {
            "op": "ADD"
        },
        "5304": {
            "op": "MSTORE"
        },
        "5305": {
            "op": "TIMESTAMP",
            "path": "7",
            "offset": [
                5751,
                5766
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5306": {
            "op": "PUSH1",
            "value": "0x7C"
        },
        "5308": {
            "op": "DUP3"
        },
        "5309": {
            "op": "ADD"
        },
        "5310": {
            "op": "MSTORE"
        },
        "5311": {
            "op": "PUSH1",
            "value": "0x9C"
        },
        "5313": {
            "op": "ADD"
        },
        "5314": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5316": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5317": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5318": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "5320": {
            "op": "NOT"
        },
        "5321": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5322": {
            "op": "DUP5",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5323": {
            "op": "SUB",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5324": {
            "op": "ADD",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5325": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5326": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5327": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5328": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5329": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5330": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                5476,
                5826
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5331": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                5476,
                5826
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5332": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                5503,
                5812
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5334": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                5476,
                5826
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5335": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                5476,
                5826
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5336": {
            "op": "ADD",
            "path": "7",
            "offset": [
                5476,
                5826
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5337": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                5476,
                5826
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5338": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                5442,
                5452
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5340": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                5442,
                5836
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5341": {
            "op": "PUSH2",
            "value": "0x962",
            "path": "7",
            "offset": [
                5846,
                5859
            ],
            "fn": "MyLottery.calculate_winner",
            "statement": 61
        },
        "5344": {
            "op": "PUSH2",
            "value": "0x158B",
            "path": "7",
            "offset": [
                5846,
                5857
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5347": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                5846,
                5859
            ],
            "fn": "MyLottery.calculate_winner"
        },
        "5348": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10872,
                11188
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5349": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10920,
                10927
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5351": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10915,
                11016
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5352": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                10937,
                10944
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5354": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10937,
                10951
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5355": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                10933,
                10951
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5357": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10933,
                10951
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5358": {
            "op": "AND",
            "path": "7",
            "offset": [
                10933,
                10951
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5359": {
            "op": "LT",
            "path": "7",
            "offset": [
                10933,
                10951
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5360": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                10915,
                11016
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5361": {
            "op": "PUSH2",
            "value": "0x1556",
            "path": "7",
            "offset": [
                10915,
                11016
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5364": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10915,
                11016
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5365": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                11000,
                11005
            ],
            "fn": "MyLottery.clearPlayers",
            "statement": 62
        },
        "5367": {
            "op": "PUSH1",
            "value": "0x8",
            "path": "7",
            "offset": [
                10972,
                10985
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5369": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5371": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                10986,
                10993
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5373": {
            "op": "DUP5",
            "path": "7",
            "offset": [
                10994,
                10995
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5374": {
            "op": "PUSH1",
            "value": "0xFF",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5376": {
            "op": "AND",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5377": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5378": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5379": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5380": {
            "op": "LT",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5381": {
            "op": "PUSH2",
            "value": "0x1510",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5384": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5385": {
            "op": "PUSH2",
            "value": "0x1510",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5388": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5391": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5392": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5393": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5395": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5396": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5397": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5398": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5400": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5401": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5402": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5403": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5404": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5405": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5406": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5407": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5408": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5410": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5412": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5414": {
            "op": "SHL"
        },
        "5415": {
            "op": "SUB"
        },
        "5416": {
            "op": "AND",
            "path": "7",
            "offset": [
                10986,
                10996
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5417": {
            "op": "DUP4",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5418": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5419": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5420": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5421": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5422": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5423": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5424": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5425": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5427": {
            "op": "ADD",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5428": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5429": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                10972,
                10997
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5430": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5431": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5432": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "5434": {
            "op": "NOT"
        },
        "5435": {
            "op": "AND",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5436": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5437": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5438": {
            "op": "ISZERO",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5439": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5440": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5441": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5442": {
            "op": "OR",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5443": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5444": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                10972,
                11005
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5445": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers",
            "statement": 63
        },
        "5446": {
            "op": "PUSH2",
            "value": "0x154E",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5449": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5450": {
            "op": "PUSH2",
            "value": "0x1A08",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5453": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5454": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5455": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5456": {
            "op": "POP",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5457": {
            "op": "POP",
            "path": "7",
            "offset": [
                10953,
                10956
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5458": {
            "op": "PUSH2",
            "value": "0x14E7",
            "path": "7",
            "offset": [
                10915,
                11016
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5461": {
            "op": "JUMP",
            "path": "7",
            "offset": [
                10915,
                11016
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5462": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                10915,
                11016
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5463": {
            "op": "POP"
        },
        "5464": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers",
            "statement": 64
        },
        "5466": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5467": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5468": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                11057,
                11058
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5470": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5471": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5472": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5474": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5475": {
            "op": "ADD",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5476": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5477": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5478": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5479": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                11035,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5480": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                11025,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5481": {
            "op": "PUSH2",
            "value": "0x1574",
            "path": "7",
            "offset": [
                11025,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5484": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                11025,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5485": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                11025,
                11032
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5487": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                11025,
                11032
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5488": {
            "op": "PUSH2",
            "value": "0x166D",
            "path": "7",
            "offset": [
                11025,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5491": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                11025,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5492": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                11025,
                11059
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5493": {
            "op": "POP"
        },
        "5494": {
            "op": "PUSH1",
            "value": "0x10",
            "path": "7",
            "offset": [
                11069,
                11082
            ],
            "fn": "MyLottery.clearPlayers",
            "statement": 65
        },
        "5496": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                11069,
                11105
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5497": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                11069,
                11105
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5498": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5500": {
            "op": "PUSH1",
            "value": "0xD",
            "path": "7",
            "offset": [
                11115,
                11124
            ],
            "fn": "MyLottery.clearPlayers",
            "statement": 66
        },
        "5502": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                11115,
                11128
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5503": {
            "op": "PUSH2",
            "value": "0xFFFF"
        },
        "5506": {
            "op": "NOT"
        },
        "5507": {
            "op": "AND",
            "path": "7",
            "offset": [
                11138,
                11155
            ],
            "fn": "MyLottery.clearPlayers",
            "statement": 67
        },
        "5508": {
            "op": "PUSH2",
            "value": "0x100",
            "path": "7",
            "offset": [
                11069,
                11105
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5511": {
            "op": "OR",
            "path": "7",
            "offset": [
                11138,
                11155
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5512": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                11138,
                11155
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5513": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                11138,
                11155
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5514": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                10872,
                11188
            ],
            "fn": "MyLottery.clearPlayers"
        },
        "5515": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                7936,
                8547
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5516": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8009,
                8025
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5518": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                8047,
                8057
            ],
            "fn": "MyLottery.afterFinish",
            "statement": 68
        },
        "5520": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8047,
                8057
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5521": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8061,
                8062
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5523": {
            "op": "SUB",
            "path": "7",
            "offset": [
                8047,
                8062
            ],
            "fn": "MyLottery.afterFinish",
            "branch": 96
        },
        "5524": {
            "op": "PUSH2",
            "value": "0x15D6",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5527": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish",
            "branch": 96
        },
        "5528": {
            "op": "PUSH1",
            "value": "0x40",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5530": {
            "op": "MLOAD",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5531": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "5535": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "5537": {
            "op": "SHL"
        },
        "5538": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5539": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5540": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5542": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5544": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5545": {
            "op": "ADD",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5546": {
            "op": "MSTORE"
        },
        "5547": {
            "op": "PUSH1",
            "value": "0x14"
        },
        "5549": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "5551": {
            "op": "DUP3"
        },
        "5552": {
            "op": "ADD"
        },
        "5553": {
            "op": "MSTORE"
        },
        "5554": {
            "op": "PUSH20",
            "value": "0x63616E742066696E642072616E646F6D6E657373"
        },
        "5575": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5577": {
            "op": "SHL"
        },
        "5578": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "5580": {
            "op": "DUP3"
        },
        "5581": {
            "op": "ADD"
        },
        "5582": {
            "op": "MSTORE"
        },
        "5583": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "5585": {
            "op": "ADD"
        },
        "5586": {
            "op": "PUSH2",
            "value": "0x715",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5589": {
            "op": "JUMP"
        },
        "5590": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8039,
                8087
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5591": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                8134,
                8141
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5593": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8134,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5594": {
            "op": "PUSH1",
            "value": "0x4",
            "path": "7",
            "offset": [
                8121,
                8131
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5596": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8121,
                8131
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5597": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8097,
                8118
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5599": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8097,
                8118
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5600": {
            "op": "PUSH2",
            "value": "0x15E8",
            "path": "7",
            "offset": [
                8121,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5603": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8121,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5604": {
            "op": "PUSH2",
            "value": "0x19BF",
            "path": "7",
            "offset": [
                8121,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5607": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8121,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5608": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8121,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5609": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8097,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5610": {
            "op": "POP",
            "path": "7",
            "offset": [
                8097,
                8148
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5611": {
            "op": "PUSH1",
            "value": "0x2",
            "path": "7",
            "offset": [
                8173,
                8180
            ],
            "fn": "MyLottery.afterFinish",
            "statement": 69
        },
        "5613": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8181,
                8194
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5614": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5615": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5616": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5617": {
            "op": "LT",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5618": {
            "op": "PUSH2",
            "value": "0x15FD",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5621": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5622": {
            "op": "PUSH2",
            "value": "0x15FD",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5625": {
            "op": "PUSH2",
            "value": "0x19D3",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5628": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5629": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5630": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5632": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5633": {
            "op": "DUP3",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5634": {
            "op": "MSTORE",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5635": {
            "op": "PUSH1",
            "value": "0x20",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5637": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5638": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5639": {
            "op": "KECCAK256",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5640": {
            "op": "ADD",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5641": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5642": {
            "op": "PUSH1",
            "value": "0x3",
            "path": "7",
            "offset": [
                8158,
                8170
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5644": {
            "op": "DUP1",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5645": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5646": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5648": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5650": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5652": {
            "op": "SHL"
        },
        "5653": {
            "op": "SUB"
        },
        "5654": {
            "op": "NOT"
        },
        "5655": {
            "op": "AND",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5656": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5658": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5660": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5662": {
            "op": "SHL"
        },
        "5663": {
            "op": "SUB"
        },
        "5664": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5665": {
            "op": "SWAP3",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5666": {
            "op": "AND",
            "path": "7",
            "offset": [
                8173,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5667": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5668": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5669": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5670": {
            "op": "OR",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5671": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5672": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                8158,
                8195
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5673": {
            "op": "PUSH2",
            "value": "0x1630",
            "path": "7",
            "offset": [
                8217,
                8229
            ],
            "fn": "MyLottery.afterFinish",
            "statement": 70
        },
        "5676": {
            "op": "PUSH2",
            "value": "0x1005",
            "path": "7",
            "offset": [
                8217,
                8227
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5679": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8217,
                8229
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5680": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8217,
                8229
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5681": {
            "op": "SWAP2",
            "path": "7",
            "offset": [
                8206,
                8229
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5682": {
            "op": "POP",
            "path": "7",
            "offset": [
                8206,
                8229
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5683": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8244,
                8252
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5684": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8256,
                8257
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5686": {
            "op": "SUB",
            "path": "7",
            "offset": [
                8244,
                8257
            ],
            "fn": "MyLottery.afterFinish",
            "branch": 97
        },
        "5687": {
            "op": "PUSH2",
            "value": "0x1646",
            "path": "7",
            "offset": [
                8240,
                8491
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5690": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8240,
                8491
            ],
            "fn": "MyLottery.afterFinish",
            "branch": 97
        },
        "5691": {
            "op": "PUSH2",
            "value": "0x1642",
            "path": "7",
            "offset": [
                8273,
                8287
            ],
            "fn": "MyLottery.afterFinish",
            "statement": 71
        },
        "5694": {
            "op": "PUSH2",
            "value": "0x14E4",
            "path": "7",
            "offset": [
                8273,
                8285
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5697": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8273,
                8287
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5698": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8273,
                8287
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5699": {
            "op": "POP",
            "path": "7",
            "offset": [
                7968,
                8547
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5700": {
            "op": "POP",
            "path": "7",
            "offset": [
                7968,
                8547
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5701": {
            "op": "JUMP",
            "jump": "o",
            "path": "7",
            "offset": [
                7936,
                8547
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5702": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8240,
                8491
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5703": {
            "op": "PUSH1",
            "value": "0xD",
            "path": "7",
            "offset": [
                8330,
                8339
            ],
            "fn": "MyLottery.afterFinish",
            "statement": 72
        },
        "5705": {
            "op": "SLOAD",
            "path": "7",
            "offset": [
                8330,
                8339
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5706": {
            "op": "PUSH2",
            "value": "0x1654",
            "path": "7",
            "offset": [
                8330,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5709": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8330,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5710": {
            "op": "PUSH1",
            "value": "0x1",
            "path": "7",
            "offset": [
                8342,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5712": {
            "op": "PUSH2",
            "value": "0x1937",
            "path": "7",
            "offset": [
                8330,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5715": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8330,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5716": {
            "op": "JUMPDEST",
            "path": "7",
            "offset": [
                8330,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5717": {
            "op": "PUSH1",
            "value": "0xD",
            "path": "7",
            "offset": [
                8318,
                8327
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5719": {
            "op": "DUP2",
            "path": "7",
            "offset": [
                8318,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5720": {
            "op": "SWAP1",
            "path": "7",
            "offset": [
                8318,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5721": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                8318,
                8343
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5722": {
            "op": "PUSH1",
            "value": "0x3",
            "path": "7",
            "offset": [
                8374,
                8375
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5724": {
            "op": "SUB",
            "path": "7",
            "offset": [
                8361,
                8375
            ],
            "fn": "MyLottery.afterFinish",
            "branch": 98
        },
        "5725": {
            "op": "PUSH2",
            "value": "0x1642",
            "path": "7",
            "offset": [
                8357,
                8481
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5728": {
            "op": "JUMPI",
            "path": "7",
            "offset": [
                8357,
                8481
            ],
            "fn": "MyLottery.afterFinish",
            "branch": 98
        },
        "5729": {
            "op": "PUSH1",
            "value": "0x0",
            "path": "7",
            "offset": [
                8407,
                8408
            ],
            "fn": "MyLottery.afterFinish",
            "statement": 73
        },
        "5731": {
            "op": "PUSH1",
            "value": "0xD",
            "path": "7",
            "offset": [
                8395,
                8404
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5733": {
            "op": "SSTORE",
            "path": "7",
            "offset": [
                8395,
                8408
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5734": {
            "op": "PUSH2",
            "value": "0x1642",
            "path": "7",
            "offset": [
                8426,
                8444
            ],
            "fn": "MyLottery.afterFinish",
            "statement": 74
        },
        "5737": {
            "op": "PUSH2",
            "value": "0x13F8",
            "path": "7",
            "offset": [
                8426,
                8442
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5740": {
            "op": "JUMP",
            "jump": "i",
            "path": "7",
            "offset": [
                8426,
                8444
            ],
            "fn": "MyLottery.afterFinish"
        },
        "5741": {
            "op": "JUMPDEST"
        },
        "5742": {
            "op": "DUP3"
        },
        "5743": {
            "op": "DUP1"
        },
        "5744": {
            "op": "SLOAD"
        },
        "5745": {
            "op": "DUP3"
        },
        "5746": {
            "op": "DUP3"
        },
        "5747": {
            "op": "SSTORE"
        },
        "5748": {
            "op": "SWAP1"
        },
        "5749": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5751": {
            "op": "MSTORE"
        },
        "5752": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5754": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5756": {
            "op": "KECCAK256"
        },
        "5757": {
            "op": "SWAP1"
        },
        "5758": {
            "op": "DUP2"
        },
        "5759": {
            "op": "ADD"
        },
        "5760": {
            "op": "SWAP3"
        },
        "5761": {
            "op": "DUP3"
        },
        "5762": {
            "op": "ISZERO"
        },
        "5763": {
            "op": "PUSH2",
            "value": "0x16C2"
        },
        "5766": {
            "op": "JUMPI"
        },
        "5767": {
            "op": "SWAP2"
        },
        "5768": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5770": {
            "op": "MUL"
        },
        "5771": {
            "op": "DUP3"
        },
        "5772": {
            "op": "ADD"
        },
        "5773": {
            "op": "JUMPDEST"
        },
        "5774": {
            "op": "DUP3"
        },
        "5775": {
            "op": "DUP2"
        },
        "5776": {
            "op": "GT"
        },
        "5777": {
            "op": "ISZERO"
        },
        "5778": {
            "op": "PUSH2",
            "value": "0x16C2"
        },
        "5781": {
            "op": "JUMPI"
        },
        "5782": {
            "op": "DUP3"
        },
        "5783": {
            "op": "MLOAD"
        },
        "5784": {
            "op": "DUP3"
        },
        "5785": {
            "op": "SLOAD"
        },
        "5786": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5788": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5790": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5792": {
            "op": "SHL"
        },
        "5793": {
            "op": "SUB"
        },
        "5794": {
            "op": "NOT"
        },
        "5795": {
            "op": "AND"
        },
        "5796": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5798": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5800": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5802": {
            "op": "SHL"
        },
        "5803": {
            "op": "SUB"
        },
        "5804": {
            "op": "SWAP1"
        },
        "5805": {
            "op": "SWAP2"
        },
        "5806": {
            "op": "AND"
        },
        "5807": {
            "op": "OR"
        },
        "5808": {
            "op": "DUP3"
        },
        "5809": {
            "op": "SSTORE"
        },
        "5810": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5812": {
            "op": "SWAP1"
        },
        "5813": {
            "op": "SWAP3"
        },
        "5814": {
            "op": "ADD"
        },
        "5815": {
            "op": "SWAP2"
        },
        "5816": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5818": {
            "op": "SWAP1"
        },
        "5819": {
            "op": "SWAP2"
        },
        "5820": {
            "op": "ADD"
        },
        "5821": {
            "op": "SWAP1"
        },
        "5822": {
            "op": "PUSH2",
            "value": "0x168D"
        },
        "5825": {
            "op": "JUMP"
        },
        "5826": {
            "op": "JUMPDEST"
        },
        "5827": {
            "op": "POP"
        },
        "5828": {
            "op": "PUSH2",
            "value": "0x16CE"
        },
        "5831": {
            "op": "SWAP3"
        },
        "5832": {
            "op": "SWAP2"
        },
        "5833": {
            "op": "POP"
        },
        "5834": {
            "op": "PUSH2",
            "value": "0x16D2"
        },
        "5837": {
            "op": "JUMP",
            "jump": "i"
        },
        "5838": {
            "op": "JUMPDEST"
        },
        "5839": {
            "op": "POP"
        },
        "5840": {
            "op": "SWAP1"
        },
        "5841": {
            "op": "JUMP",
            "jump": "o"
        },
        "5842": {
            "op": "JUMPDEST"
        },
        "5843": {
            "op": "JUMPDEST"
        },
        "5844": {
            "op": "DUP1"
        },
        "5845": {
            "op": "DUP3"
        },
        "5846": {
            "op": "GT"
        },
        "5847": {
            "op": "ISZERO"
        },
        "5848": {
            "op": "PUSH2",
            "value": "0x16CE"
        },
        "5851": {
            "op": "JUMPI"
        },
        "5852": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5854": {
            "op": "DUP2"
        },
        "5855": {
            "op": "SSTORE"
        },
        "5856": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5858": {
            "op": "ADD"
        },
        "5859": {
            "op": "PUSH2",
            "value": "0x16D3"
        },
        "5862": {
            "op": "JUMP"
        },
        "5863": {
            "op": "JUMPDEST"
        },
        "5864": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5866": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5868": {
            "op": "DUP3"
        },
        "5869": {
            "op": "DUP5"
        },
        "5870": {
            "op": "SUB"
        },
        "5871": {
            "op": "SLT"
        },
        "5872": {
            "op": "ISZERO"
        },
        "5873": {
            "op": "PUSH2",
            "value": "0x16F9"
        },
        "5876": {
            "op": "JUMPI"
        },
        "5877": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5879": {
            "op": "DUP1"
        },
        "5880": {
            "op": "REVERT"
        },
        "5881": {
            "op": "JUMPDEST"
        },
        "5882": {
            "op": "DUP2"
        },
        "5883": {
            "op": "CALLDATALOAD"
        },
        "5884": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5886": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5888": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5890": {
            "op": "SHL"
        },
        "5891": {
            "op": "SUB"
        },
        "5892": {
            "op": "DUP2"
        },
        "5893": {
            "op": "AND"
        },
        "5894": {
            "op": "DUP2"
        },
        "5895": {
            "op": "EQ"
        },
        "5896": {
            "op": "PUSH2",
            "value": "0xE53"
        },
        "5899": {
            "op": "JUMPI"
        },
        "5900": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5902": {
            "op": "DUP1"
        },
        "5903": {
            "op": "REVERT"
        },
        "5904": {
            "op": "JUMPDEST"
        },
        "5905": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5907": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5909": {
            "op": "DUP3"
        },
        "5910": {
            "op": "DUP5"
        },
        "5911": {
            "op": "SUB"
        },
        "5912": {
            "op": "SLT"
        },
        "5913": {
            "op": "ISZERO"
        },
        "5914": {
            "op": "PUSH2",
            "value": "0x1722"
        },
        "5917": {
            "op": "JUMPI"
        },
        "5918": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5920": {
            "op": "DUP1"
        },
        "5921": {
            "op": "REVERT"
        },
        "5922": {
            "op": "JUMPDEST"
        },
        "5923": {
            "op": "POP"
        },
        "5924": {
            "op": "CALLDATALOAD"
        },
        "5925": {
            "op": "SWAP2"
        },
        "5926": {
            "op": "SWAP1"
        },
        "5927": {
            "op": "POP"
        },
        "5928": {
            "op": "JUMP",
            "jump": "o"
        },
        "5929": {
            "op": "JUMPDEST"
        },
        "5930": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "5935": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "5937": {
            "op": "SHL"
        },
        "5938": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5940": {
            "op": "MSTORE"
        },
        "5941": {
            "op": "PUSH1",
            "value": "0x21"
        },
        "5943": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "5945": {
            "op": "MSTORE"
        },
        "5946": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "5948": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5950": {
            "op": "REVERT"
        },
        "5951": {
            "op": "JUMPDEST"
        },
        "5952": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5954": {
            "op": "DUP2"
        },
        "5955": {
            "op": "ADD"
        },
        "5956": {
            "op": "PUSH1",
            "value": "0x3"
        },
        "5958": {
            "op": "DUP4"
        },
        "5959": {
            "op": "LT"
        },
        "5960": {
            "op": "PUSH2",
            "value": "0x1753"
        },
        "5963": {
            "op": "JUMPI"
        },
        "5964": {
            "op": "PUSH2",
            "value": "0x1753"
        },
        "5967": {
            "op": "PUSH2",
            "value": "0x1729"
        },
        "5970": {
            "op": "JUMP",
            "jump": "i"
        },
        "5971": {
            "op": "JUMPDEST"
        },
        "5972": {
            "op": "SWAP2"
        },
        "5973": {
            "op": "SWAP1"
        },
        "5974": {
            "op": "MSTORE"
        },
        "5975": {
            "op": "SWAP1"
        },
        "5976": {
            "op": "JUMP",
            "jump": "o"
        },
        "5977": {
            "op": "JUMPDEST"
        },
        "5978": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5980": {
            "op": "DUP2"
        },
        "5981": {
            "op": "ADD"
        },
        "5982": {
            "op": "PUSH1",
            "value": "0x2"
        },
        "5984": {
            "op": "DUP4"
        },
        "5985": {
            "op": "LT"
        },
        "5986": {
            "op": "PUSH2",
            "value": "0x1753"
        },
        "5989": {
            "op": "JUMPI"
        },
        "5990": {
            "op": "PUSH2",
            "value": "0x1753"
        },
        "5993": {
            "op": "PUSH2",
            "value": "0x1729"
        },
        "5996": {
            "op": "JUMP",
            "jump": "i"
        },
        "5997": {
            "op": "JUMPDEST"
        },
        "5998": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6000": {
            "op": "DUP1"
        },
        "6001": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6003": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6005": {
            "op": "DUP5"
        },
        "6006": {
            "op": "DUP7"
        },
        "6007": {
            "op": "SUB"
        },
        "6008": {
            "op": "SLT"
        },
        "6009": {
            "op": "ISZERO"
        },
        "6010": {
            "op": "PUSH2",
            "value": "0x1782"
        },
        "6013": {
            "op": "JUMPI"
        },
        "6014": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6016": {
            "op": "DUP1"
        },
        "6017": {
            "op": "REVERT"
        },
        "6018": {
            "op": "JUMPDEST"
        },
        "6019": {
            "op": "POP"
        },
        "6020": {
            "op": "POP"
        },
        "6021": {
            "op": "DUP2"
        },
        "6022": {
            "op": "CALLDATALOAD"
        },
        "6023": {
            "op": "SWAP4"
        },
        "6024": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6026": {
            "op": "DUP4"
        },
        "6027": {
            "op": "ADD"
        },
        "6028": {
            "op": "CALLDATALOAD"
        },
        "6029": {
            "op": "SWAP4"
        },
        "6030": {
            "op": "POP"
        },
        "6031": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6033": {
            "op": "SWAP1"
        },
        "6034": {
            "op": "SWAP3"
        },
        "6035": {
            "op": "ADD"
        },
        "6036": {
            "op": "CALLDATALOAD"
        },
        "6037": {
            "op": "SWAP2"
        },
        "6038": {
            "op": "SWAP1"
        },
        "6039": {
            "op": "POP"
        },
        "6040": {
            "op": "JUMP",
            "jump": "o"
        },
        "6041": {
            "op": "JUMPDEST"
        },
        "6042": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6044": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6046": {
            "op": "DUP3"
        },
        "6047": {
            "op": "DUP5"
        },
        "6048": {
            "op": "SUB"
        },
        "6049": {
            "op": "SLT"
        },
        "6050": {
            "op": "ISZERO"
        },
        "6051": {
            "op": "PUSH2",
            "value": "0x17AB"
        },
        "6054": {
            "op": "JUMPI"
        },
        "6055": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6057": {
            "op": "DUP1"
        },
        "6058": {
            "op": "REVERT"
        },
        "6059": {
            "op": "JUMPDEST"
        },
        "6060": {
            "op": "POP"
        },
        "6061": {
            "op": "MLOAD"
        },
        "6062": {
            "op": "SWAP2"
        },
        "6063": {
            "op": "SWAP1"
        },
        "6064": {
            "op": "POP"
        },
        "6065": {
            "op": "JUMP",
            "jump": "o"
        },
        "6066": {
            "op": "JUMPDEST"
        },
        "6067": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6069": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6071": {
            "op": "DUP3"
        },
        "6072": {
            "op": "DUP5"
        },
        "6073": {
            "op": "SUB"
        },
        "6074": {
            "op": "SLT"
        },
        "6075": {
            "op": "ISZERO"
        },
        "6076": {
            "op": "PUSH2",
            "value": "0x17C4"
        },
        "6079": {
            "op": "JUMPI"
        },
        "6080": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6082": {
            "op": "DUP1"
        },
        "6083": {
            "op": "REVERT"
        },
        "6084": {
            "op": "JUMPDEST"
        },
        "6085": {
            "op": "DUP2"
        },
        "6086": {
            "op": "MLOAD"
        },
        "6087": {
            "op": "DUP1"
        },
        "6088": {
            "op": "ISZERO"
        },
        "6089": {
            "op": "ISZERO"
        },
        "6090": {
            "op": "DUP2"
        },
        "6091": {
            "op": "EQ"
        },
        "6092": {
            "op": "PUSH2",
            "value": "0xE53"
        },
        "6095": {
            "op": "JUMPI"
        },
        "6096": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6098": {
            "op": "DUP1"
        },
        "6099": {
            "op": "REVERT"
        },
        "6100": {
            "op": "JUMPDEST"
        },
        "6101": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6103": {
            "op": "DUP1"
        },
        "6104": {
            "op": "DUP3"
        },
        "6105": {
            "op": "MSTORE"
        },
        "6106": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6108": {
            "op": "SWAP1"
        },
        "6109": {
            "op": "DUP3"
        },
        "6110": {
            "op": "ADD"
        },
        "6111": {
            "op": "MSTORE"
        },
        "6112": {
            "op": "PUSH32",
            "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
        },
        "6145": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6147": {
            "op": "DUP3"
        },
        "6148": {
            "op": "ADD"
        },
        "6149": {
            "op": "MSTORE"
        },
        "6150": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6152": {
            "op": "ADD"
        },
        "6153": {
            "op": "SWAP1"
        },
        "6154": {
            "op": "JUMP",
            "jump": "o"
        },
        "6155": {
            "op": "JUMPDEST"
        },
        "6156": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6158": {
            "op": "DUP1"
        },
        "6159": {
            "op": "DUP3"
        },
        "6160": {
            "op": "MSTORE"
        },
        "6161": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "6163": {
            "op": "SWAP1"
        },
        "6164": {
            "op": "DUP3"
        },
        "6165": {
            "op": "ADD"
        },
        "6166": {
            "op": "MSTORE"
        },
        "6167": {
            "op": "PUSH15",
            "value": "0x131BDD1D195C9E4814DD1BDC1C1959"
        },
        "6183": {
            "op": "PUSH1",
            "value": "0x8A"
        },
        "6185": {
            "op": "SHL"
        },
        "6186": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6188": {
            "op": "DUP3"
        },
        "6189": {
            "op": "ADD"
        },
        "6190": {
            "op": "MSTORE"
        },
        "6191": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6193": {
            "op": "ADD"
        },
        "6194": {
            "op": "SWAP1"
        },
        "6195": {
            "op": "JUMP",
            "jump": "o"
        },
        "6196": {
            "op": "JUMPDEST"
        },
        "6197": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6199": {
            "op": "JUMPDEST"
        },
        "6200": {
            "op": "DUP4"
        },
        "6201": {
            "op": "DUP2"
        },
        "6202": {
            "op": "LT"
        },
        "6203": {
            "op": "ISZERO"
        },
        "6204": {
            "op": "PUSH2",
            "value": "0x184F"
        },
        "6207": {
            "op": "JUMPI"
        },
        "6208": {
            "op": "DUP2"
        },
        "6209": {
            "op": "DUP2"
        },
        "6210": {
            "op": "ADD"
        },
        "6211": {
            "op": "MLOAD"
        },
        "6212": {
            "op": "DUP4"
        },
        "6213": {
            "op": "DUP3"
        },
        "6214": {
            "op": "ADD"
        },
        "6215": {
            "op": "MSTORE"
        },
        "6216": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6218": {
            "op": "ADD"
        },
        "6219": {
            "op": "PUSH2",
            "value": "0x1837"
        },
        "6222": {
            "op": "JUMP"
        },
        "6223": {
            "op": "JUMPDEST"
        },
        "6224": {
            "op": "DUP4"
        },
        "6225": {
            "op": "DUP2"
        },
        "6226": {
            "op": "GT"
        },
        "6227": {
            "op": "ISZERO"
        },
        "6228": {
            "op": "PUSH2",
            "value": "0x185E"
        },
        "6231": {
            "op": "JUMPI"
        },
        "6232": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6234": {
            "op": "DUP5"
        },
        "6235": {
            "op": "DUP5"
        },
        "6236": {
            "op": "ADD"
        },
        "6237": {
            "op": "MSTORE"
        },
        "6238": {
            "op": "JUMPDEST"
        },
        "6239": {
            "op": "POP"
        },
        "6240": {
            "op": "POP"
        },
        "6241": {
            "op": "POP"
        },
        "6242": {
            "op": "POP"
        },
        "6243": {
            "op": "JUMP",
            "jump": "o"
        },
        "6244": {
            "op": "JUMPDEST"
        },
        "6245": {
            "op": "PUSH32",
            "value": "0x456E74727920666565206D75737420626520657175616C20746F3A2000000000"
        },
        "6278": {
            "op": "DUP2"
        },
        "6279": {
            "op": "MSTORE"
        },
        "6280": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6282": {
            "op": "DUP3"
        },
        "6283": {
            "op": "MLOAD"
        },
        "6284": {
            "op": "PUSH2",
            "value": "0x189C"
        },
        "6287": {
            "op": "DUP2"
        },
        "6288": {
            "op": "PUSH1",
            "value": "0x1C"
        },
        "6290": {
            "op": "DUP6"
        },
        "6291": {
            "op": "ADD"
        },
        "6292": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6294": {
            "op": "DUP8"
        },
        "6295": {
            "op": "ADD"
        },
        "6296": {
            "op": "PUSH2",
            "value": "0x1834"
        },
        "6299": {
            "op": "JUMP",
            "jump": "i"
        },
        "6300": {
            "op": "JUMPDEST"
        },
        "6301": {
            "op": "PUSH4",
            "value": "0x408AE8D"
        },
        "6306": {
            "op": "PUSH1",
            "value": "0xE3"
        },
        "6308": {
            "op": "SHL"
        },
        "6309": {
            "op": "PUSH1",
            "value": "0x1C"
        },
        "6311": {
            "op": "SWAP4"
        },
        "6312": {
            "op": "SWAP1"
        },
        "6313": {
            "op": "SWAP2"
        },
        "6314": {
            "op": "ADD"
        },
        "6315": {
            "op": "SWAP3"
        },
        "6316": {
            "op": "DUP4"
        },
        "6317": {
            "op": "ADD"
        },
        "6318": {
            "op": "MSTORE"
        },
        "6319": {
            "op": "POP"
        },
        "6320": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6322": {
            "op": "ADD"
        },
        "6323": {
            "op": "SWAP2"
        },
        "6324": {
            "op": "SWAP1"
        },
        "6325": {
            "op": "POP"
        },
        "6326": {
            "op": "JUMP",
            "jump": "o"
        },
        "6327": {
            "op": "JUMPDEST"
        },
        "6328": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6330": {
            "op": "DUP2"
        },
        "6331": {
            "op": "MSTORE"
        },
        "6332": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6334": {
            "op": "DUP3"
        },
        "6335": {
            "op": "MLOAD"
        },
        "6336": {
            "op": "DUP1"
        },
        "6337": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6339": {
            "op": "DUP5"
        },
        "6340": {
            "op": "ADD"
        },
        "6341": {
            "op": "MSTORE"
        },
        "6342": {
            "op": "PUSH2",
            "value": "0x18D6"
        },
        "6345": {
            "op": "DUP2"
        },
        "6346": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6348": {
            "op": "DUP6"
        },
        "6349": {
            "op": "ADD"
        },
        "6350": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6352": {
            "op": "DUP8"
        },
        "6353": {
            "op": "ADD"
        },
        "6354": {
            "op": "PUSH2",
            "value": "0x1834"
        },
        "6357": {
            "op": "JUMP",
            "jump": "i"
        },
        "6358": {
            "op": "JUMPDEST"
        },
        "6359": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6361": {
            "op": "ADD"
        },
        "6362": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6364": {
            "op": "NOT"
        },
        "6365": {
            "op": "AND"
        },
        "6366": {
            "op": "SWAP2"
        },
        "6367": {
            "op": "SWAP1"
        },
        "6368": {
            "op": "SWAP2"
        },
        "6369": {
            "op": "ADD"
        },
        "6370": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6372": {
            "op": "ADD"
        },
        "6373": {
            "op": "SWAP3"
        },
        "6374": {
            "op": "SWAP2"
        },
        "6375": {
            "op": "POP"
        },
        "6376": {
            "op": "POP"
        },
        "6377": {
            "op": "JUMP",
            "jump": "o"
        },
        "6378": {
            "op": "JUMPDEST"
        },
        "6379": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6381": {
            "op": "DUP1"
        },
        "6382": {
            "op": "DUP3"
        },
        "6383": {
            "op": "MSTORE"
        },
        "6384": {
            "op": "PUSH1",
            "value": "0x1D"
        },
        "6386": {
            "op": "SWAP1"
        },
        "6387": {
            "op": "DUP3"
        },
        "6388": {
            "op": "ADD"
        },
        "6389": {
            "op": "MSTORE"
        },
        "6390": {
            "op": "PUSH32",
            "value": "0x43616E204E6F74207768696C65206C6F7474657279206F6E676F696E67000000"
        },
        "6423": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6425": {
            "op": "DUP3"
        },
        "6426": {
            "op": "ADD"
        },
        "6427": {
            "op": "MSTORE"
        },
        "6428": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6430": {
            "op": "ADD"
        },
        "6431": {
            "op": "SWAP1"
        },
        "6432": {
            "op": "JUMP",
            "jump": "o"
        },
        "6433": {
            "op": "JUMPDEST"
        },
        "6434": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6439": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6441": {
            "op": "SHL"
        },
        "6442": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6444": {
            "op": "MSTORE"
        },
        "6445": {
            "op": "PUSH1",
            "value": "0x11"
        },
        "6447": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6449": {
            "op": "MSTORE"
        },
        "6450": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6452": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6454": {
            "op": "REVERT"
        },
        "6455": {
            "op": "JUMPDEST"
        },
        "6456": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6458": {
            "op": "DUP3"
        },
        "6459": {
            "op": "NOT"
        },
        "6460": {
            "op": "DUP3"
        },
        "6461": {
            "op": "GT"
        },
        "6462": {
            "op": "ISZERO"
        },
        "6463": {
            "op": "PUSH2",
            "value": "0x194A"
        },
        "6466": {
            "op": "JUMPI"
        },
        "6467": {
            "op": "PUSH2",
            "value": "0x194A"
        },
        "6470": {
            "op": "PUSH2",
            "value": "0x1921"
        },
        "6473": {
            "op": "JUMP",
            "jump": "i"
        },
        "6474": {
            "op": "JUMPDEST"
        },
        "6475": {
            "op": "POP"
        },
        "6476": {
            "op": "ADD"
        },
        "6477": {
            "op": "SWAP1"
        },
        "6478": {
            "op": "JUMP",
            "jump": "o"
        },
        "6479": {
            "op": "JUMPDEST"
        },
        "6480": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6482": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6484": {
            "op": "DUP3"
        },
        "6485": {
            "op": "ADD"
        },
        "6486": {
            "op": "PUSH2",
            "value": "0x1961"
        },
        "6489": {
            "op": "JUMPI"
        },
        "6490": {
            "op": "PUSH2",
            "value": "0x1961"
        },
        "6493": {
            "op": "PUSH2",
            "value": "0x1921"
        },
        "6496": {
            "op": "JUMP",
            "jump": "i"
        },
        "6497": {
            "op": "JUMPDEST"
        },
        "6498": {
            "op": "POP"
        },
        "6499": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6501": {
            "op": "ADD"
        },
        "6502": {
            "op": "SWAP1"
        },
        "6503": {
            "op": "JUMP",
            "jump": "o"
        },
        "6504": {
            "op": "JUMPDEST"
        },
        "6505": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6510": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6512": {
            "op": "SHL"
        },
        "6513": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6515": {
            "op": "MSTORE"
        },
        "6516": {
            "op": "PUSH1",
            "value": "0x12"
        },
        "6518": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6520": {
            "op": "MSTORE"
        },
        "6521": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6523": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6525": {
            "op": "REVERT"
        },
        "6526": {
            "op": "JUMPDEST"
        },
        "6527": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6529": {
            "op": "DUP3"
        },
        "6530": {
            "op": "PUSH2",
            "value": "0x198D"
        },
        "6533": {
            "op": "JUMPI"
        },
        "6534": {
            "op": "PUSH2",
            "value": "0x198D"
        },
        "6537": {
            "op": "PUSH2",
            "value": "0x1968"
        },
        "6540": {
            "op": "JUMP",
            "jump": "i"
        },
        "6541": {
            "op": "JUMPDEST"
        },
        "6542": {
            "op": "POP"
        },
        "6543": {
            "op": "DIV"
        },
        "6544": {
            "op": "SWAP1"
        },
        "6545": {
            "op": "JUMP",
            "jump": "o"
        },
        "6546": {
            "op": "JUMPDEST"
        },
        "6547": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6552": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6554": {
            "op": "SHL"
        },
        "6555": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6557": {
            "op": "MSTORE"
        },
        "6558": {
            "op": "PUSH1",
            "value": "0x41"
        },
        "6560": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6562": {
            "op": "MSTORE"
        },
        "6563": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6565": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6567": {
            "op": "REVERT"
        },
        "6568": {
            "op": "JUMPDEST"
        },
        "6569": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6571": {
            "op": "DUP3"
        },
        "6572": {
            "op": "DUP3"
        },
        "6573": {
            "op": "LT"
        },
        "6574": {
            "op": "ISZERO"
        },
        "6575": {
            "op": "PUSH2",
            "value": "0x19BA"
        },
        "6578": {
            "op": "JUMPI"
        },
        "6579": {
            "op": "PUSH2",
            "value": "0x19BA"
        },
        "6582": {
            "op": "PUSH2",
            "value": "0x1921"
        },
        "6585": {
            "op": "JUMP",
            "jump": "i"
        },
        "6586": {
            "op": "JUMPDEST"
        },
        "6587": {
            "op": "POP"
        },
        "6588": {
            "op": "SUB"
        },
        "6589": {
            "op": "SWAP1"
        },
        "6590": {
            "op": "JUMP",
            "jump": "o"
        },
        "6591": {
            "op": "JUMPDEST"
        },
        "6592": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6594": {
            "op": "DUP3"
        },
        "6595": {
            "op": "PUSH2",
            "value": "0x19CE"
        },
        "6598": {
            "op": "JUMPI"
        },
        "6599": {
            "op": "PUSH2",
            "value": "0x19CE"
        },
        "6602": {
            "op": "PUSH2",
            "value": "0x1968"
        },
        "6605": {
            "op": "JUMP",
            "jump": "i"
        },
        "6606": {
            "op": "JUMPDEST"
        },
        "6607": {
            "op": "POP"
        },
        "6608": {
            "op": "MOD"
        },
        "6609": {
            "op": "SWAP1"
        },
        "6610": {
            "op": "JUMP",
            "jump": "o"
        },
        "6611": {
            "op": "JUMPDEST"
        },
        "6612": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6617": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6619": {
            "op": "SHL"
        },
        "6620": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6622": {
            "op": "MSTORE"
        },
        "6623": {
            "op": "PUSH1",
            "value": "0x32"
        },
        "6625": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6627": {
            "op": "MSTORE"
        },
        "6628": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6630": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6632": {
            "op": "REVERT"
        },
        "6633": {
            "op": "JUMPDEST"
        },
        "6634": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6636": {
            "op": "DUP2"
        },
        "6637": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6639": {
            "op": "NOT"
        },
        "6640": {
            "op": "DIV"
        },
        "6641": {
            "op": "DUP4"
        },
        "6642": {
            "op": "GT"
        },
        "6643": {
            "op": "DUP3"
        },
        "6644": {
            "op": "ISZERO"
        },
        "6645": {
            "op": "ISZERO"
        },
        "6646": {
            "op": "AND"
        },
        "6647": {
            "op": "ISZERO"
        },
        "6648": {
            "op": "PUSH2",
            "value": "0x1A03"
        },
        "6651": {
            "op": "JUMPI"
        },
        "6652": {
            "op": "PUSH2",
            "value": "0x1A03"
        },
        "6655": {
            "op": "PUSH2",
            "value": "0x1921"
        },
        "6658": {
            "op": "JUMP",
            "jump": "i"
        },
        "6659": {
            "op": "JUMPDEST"
        },
        "6660": {
            "op": "POP"
        },
        "6661": {
            "op": "MUL"
        },
        "6662": {
            "op": "SWAP1"
        },
        "6663": {
            "op": "JUMP",
            "jump": "o"
        },
        "6664": {
            "op": "JUMPDEST"
        },
        "6665": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6667": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "6669": {
            "op": "DUP3"
        },
        "6670": {
            "op": "AND"
        },
        "6671": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "6673": {
            "op": "DUP2"
        },
        "6674": {
            "op": "SUB"
        },
        "6675": {
            "op": "PUSH2",
            "value": "0x1A1E"
        },
        "6678": {
            "op": "JUMPI"
        },
        "6679": {
            "op": "PUSH2",
            "value": "0x1A1E"
        },
        "6682": {
            "op": "PUSH2",
            "value": "0x1921"
        },
        "6685": {
            "op": "JUMP",
            "jump": "i"
        },
        "6686": {
            "op": "JUMPDEST"
        },
        "6687": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6689": {
            "op": "ADD"
        },
        "6690": {
            "op": "SWAP3"
        },
        "6691": {
            "op": "SWAP2"
        },
        "6692": {
            "op": "POP"
        },
        "6693": {
            "op": "POP"
        },
        "6694": {
            "op": "JUMP",
            "jump": "o"
        }
    },
    "type": "contract",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor",
            "name": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "requestId",
                    "type": "bytes32"
                }
            ],
            "name": "RequestedRandomness",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "cantSendEthOwner",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "cantSendEthParticipants",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "cantSendEthWinner",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "EntryFee",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "contractPercent",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "emergency",
            "outputs": [
                {
                    "internalType": "enum MyLottery.EMERGENCY",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "end_lottery",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "enter_lottery",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "errorFlag",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fee",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_tokenContractAddress",
                    "type": "address"
                }
            ],
            "name": "getBalance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "isUserEntered",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "keyhash",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lotteryDuration",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lotteryStart",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lottery_state",
            "outputs": [
                {
                    "internalType": "enum MyLottery.LOTTERY_STATE",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maxTryCounter",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maximumParticipants",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "minumumParticipants",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "ownerPercent",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "ownerSent",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "players",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pricePercent",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "randomness",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "recentWinner",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "recoverEth",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenAddress",
                    "type": "address"
                }
            ],
            "name": "recoverTokens",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "retrySendPrizes",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_entryFee",
                    "type": "uint256"
                }
            ],
            "name": "setEntranceFee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_duration",
                    "type": "uint256"
                }
            ],
            "name": "setLotteryDuration",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_maximumParticipants",
                    "type": "uint256"
                }
            ],
            "name": "setMaximumParticipants",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_minumumParticipants",
                    "type": "uint256"
                }
            ],
            "name": "setMinumumParticipants",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_pricePercent",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_ownerPercent",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_contractPercent",
                    "type": "uint256"
                }
            ],
            "name": "setPrizePercents",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "start_lottery",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwner",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "ast": {
        "absolutePath": "contracts/MyLottery.sol",
        "exportedSymbols": {
            "Context": [
                1387
            ],
            "IERC20": [
                72
            ],
            "LinkTokenInterface": [
                1532
            ],
            "MyLottery": [
                865
            ],
            "Ownable": [
                978
            ],
            "ReentrancyGuard": [
                1018
            ],
            "Strings": [
                1244
            ],
            "VRFConsumerBase": [
                1365
            ],
            "VRFRequestIDBase": [
                1437
            ]
        },
        "id": 866,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".13"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:24:7"
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
                "file": "@openzeppelin/contracts/access/Ownable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 866,
                "sourceUnit": 979,
                "src": "84:52:7",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/security/ReentrancyGuard.sol",
                "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 866,
                "sourceUnit": 1019,
                "src": "137:62:7",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/VRFConsumerBase.sol",
                "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 866,
                "sourceUnit": 1366,
                "src": "279:59:7",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Strings.sol",
                "file": "@openzeppelin/contracts/utils/Strings.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 866,
                "sourceUnit": 1245,
                "src": "339:51:7",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "IERC20",
                "contractDependencies": [],
                "contractKind": "interface",
                "fullyImplemented": false,
                "id": 72,
                "linearizedBaseContracts": [
                    72
                ],
                "name": "IERC20",
                "nameLocation": "402:6:7",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "18160ddd",
                        "id": 10,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "totalSupply",
                        "nameLocation": "424:11:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 6,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "435:2:7"
                        },
                        "returnParameters": {
                            "id": 9,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 8,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 10,
                                    "src": "461:7:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 7,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "461:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "460:9:7"
                        },
                        "scope": 72,
                        "src": "415:55:7",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "70a08231",
                        "id": 17,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "balanceOf",
                        "nameLocation": "485:9:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 13,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 12,
                                    "mutability": "mutable",
                                    "name": "account",
                                    "nameLocation": "503:7:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 17,
                                    "src": "495:15:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 11,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "495:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "494:17:7"
                        },
                        "returnParameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 15,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 17,
                                    "src": "535:7:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 14,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "535:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "534:9:7"
                        },
                        "scope": 72,
                        "src": "476:68:7",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "a9059cbb",
                        "id": 26,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nameLocation": "559:8:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 22,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 19,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nameLocation": "576:9:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "568:17:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 18,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "568:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 21,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "595:6:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "587:14:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 20,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "587:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "567:35:7"
                        },
                        "returnParameters": {
                            "id": 25,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 24,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "637:4:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 23,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "637:4:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "636:6:7"
                        },
                        "scope": 72,
                        "src": "550:93:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "dd62ed3e",
                        "id": 35,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "allowance",
                        "nameLocation": "658:9:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 31,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 28,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "676:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 35,
                                    "src": "668:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 27,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "668:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 30,
                                    "mutability": "mutable",
                                    "name": "spender",
                                    "nameLocation": "691:7:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 35,
                                    "src": "683:15:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 29,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "683:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "667:32:7"
                        },
                        "returnParameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 33,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 35,
                                    "src": "747:7:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 32,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "747:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "746:9:7"
                        },
                        "scope": 72,
                        "src": "649:107:7",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "095ea7b3",
                        "id": 44,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "approve",
                        "nameLocation": "771:7:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 40,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 37,
                                    "mutability": "mutable",
                                    "name": "spender",
                                    "nameLocation": "787:7:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 44,
                                    "src": "779:15:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 36,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "779:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "804:6:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 44,
                                    "src": "796:14:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 38,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "796:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "778:33:7"
                        },
                        "returnParameters": {
                            "id": 43,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 42,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 44,
                                    "src": "830:4:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 41,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "830:4:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "829:6:7"
                        },
                        "scope": 72,
                        "src": "762:74:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "23b872dd",
                        "id": 55,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transferFrom",
                        "nameLocation": "851:12:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 51,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "881:6:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 55,
                                    "src": "873:14:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "873:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 48,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nameLocation": "905:9:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 55,
                                    "src": "897:17:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "897:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 50,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "932:6:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 55,
                                    "src": "924:14:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 49,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "924:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "863:81:7"
                        },
                        "returnParameters": {
                            "id": 54,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 53,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 55,
                                    "src": "963:4:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 52,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "963:4:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "962:6:7"
                        },
                        "scope": 72,
                        "src": "842:127:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                        "id": 63,
                        "name": "Transfer",
                        "nameLocation": "981:8:7",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 62,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "1006:4:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 63,
                                    "src": "990:20:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 56,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "990:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 59,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1028:2:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 63,
                                    "src": "1012:18:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 58,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1012:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 61,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1040:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 63,
                                    "src": "1032:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 60,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1032:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "989:57:7"
                        },
                        "src": "975:72:7"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                        "id": 71,
                        "name": "Approval",
                        "nameLocation": "1058:8:7",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 70,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 65,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "1092:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 71,
                                    "src": "1076:21:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 64,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1076:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 67,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "spender",
                                    "nameLocation": "1123:7:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 71,
                                    "src": "1107:23:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 66,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1107:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 69,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1148:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 71,
                                    "src": "1140:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 68,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1140:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1066:93:7"
                        },
                        "src": "1052:108:7"
                    }
                ],
                "scope": 866,
                "src": "392:770:7",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 73,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 978,
                            "src": "1186:7:7"
                        },
                        "id": 74,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1186:7:7"
                    },
                    {
                        "baseName": {
                            "id": 75,
                            "name": "ReentrancyGuard",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1018,
                            "src": "1195:15:7"
                        },
                        "id": 76,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1195:15:7"
                    }
                ],
                "canonicalName": "MyLottery",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 865,
                "linearizedBaseContracts": [
                    865,
                    1018,
                    978,
                    1387
                ],
                "name": "MyLottery",
                "nameLocation": "1173:9:7",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "f71d96cb",
                        "id": 79,
                        "mutability": "mutable",
                        "name": "players",
                        "nameLocation": "1242:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1217:32:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 77,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1217:15:7",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                }
                            },
                            "id": 78,
                            "nodeType": "ArrayTypeName",
                            "src": "1217:17:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                                "typeString": "address payable[]"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "4f8c70cf",
                        "id": 81,
                        "mutability": "mutable",
                        "name": "recentWinner",
                        "nameLocation": "1278:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1255:35:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                        },
                        "typeName": {
                            "id": 80,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1255:15:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "36013189",
                        "id": 83,
                        "mutability": "mutable",
                        "name": "randomness",
                        "nameLocation": "1338:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1323:25:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 82,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1323:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "a6d811ea",
                        "id": 85,
                        "mutability": "mutable",
                        "name": "minumumParticipants",
                        "nameLocation": "1369:19:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1354:34:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 84,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1354:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "04283412",
                        "id": 87,
                        "mutability": "mutable",
                        "name": "maximumParticipants",
                        "nameLocation": "1409:19:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1394:34:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 86,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1394:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "59fe8c84",
                        "id": 89,
                        "mutability": "mutable",
                        "name": "EntryFee",
                        "nameLocation": "1449:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1434:23:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 88,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1434:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "be55c9c9",
                        "id": 93,
                        "mutability": "mutable",
                        "name": "isUserEntered",
                        "nameLocation": "1495:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1463:45:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                        },
                        "typeName": {
                            "id": 92,
                            "keyType": {
                                "id": 90,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1471:7:7",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1463:24:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                            },
                            "valueType": {
                                "id": 91,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "1482:4:7",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "81fb84fb",
                        "id": 95,
                        "mutability": "mutable",
                        "name": "pricePercent",
                        "nameLocation": "1583:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1568:27:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 94,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1568:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "95d12000",
                        "id": 97,
                        "mutability": "mutable",
                        "name": "ownerPercent",
                        "nameLocation": "1616:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1601:27:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 96,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1601:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "9bb57718",
                        "id": 99,
                        "mutability": "mutable",
                        "name": "contractPercent",
                        "nameLocation": "1649:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1634:30:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 98,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1634:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "501d0780",
                        "id": 101,
                        "mutability": "mutable",
                        "name": "maxTryCounter",
                        "nameLocation": "1685:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1670:28:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 100,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1670:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "faea18c6",
                        "id": 103,
                        "mutability": "mutable",
                        "name": "errorFlag",
                        "nameLocation": "1719:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1704:24:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 102,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1704:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "cd8cc844",
                        "id": 105,
                        "mutability": "mutable",
                        "name": "lotteryStart",
                        "nameLocation": "1749:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1734:27:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 104,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1734:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "2d97902f",
                        "id": 107,
                        "mutability": "mutable",
                        "name": "lotteryDuration",
                        "nameLocation": "1782:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1767:30:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 106,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1767:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "0b3ff280",
                        "id": 109,
                        "mutability": "mutable",
                        "name": "ownerSent",
                        "nameLocation": "1815:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "1803:21:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                        },
                        "typeName": {
                            "id": 108,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1803:4:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "MyLottery.LOTTERY_STATE",
                        "id": 113,
                        "members": [
                            {
                                "id": 110,
                                "name": "OPEN",
                                "nameLocation": "2257:4:7",
                                "nodeType": "EnumValue",
                                "src": "2257:4:7"
                            },
                            {
                                "id": 111,
                                "name": "CLOSED",
                                "nameLocation": "2271:6:7",
                                "nodeType": "EnumValue",
                                "src": "2271:6:7"
                            },
                            {
                                "id": 112,
                                "name": "CALCULATING_WINNER",
                                "nameLocation": "2287:18:7",
                                "nodeType": "EnumValue",
                                "src": "2287:18:7"
                            }
                        ],
                        "name": "LOTTERY_STATE",
                        "nameLocation": "2233:13:7",
                        "nodeType": "EnumDefinition",
                        "src": "2228:83:7"
                    },
                    {
                        "constant": false,
                        "functionSelector": "81447999",
                        "id": 116,
                        "mutability": "mutable",
                        "name": "lottery_state",
                        "nameLocation": "2337:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "2316:34:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                            "typeString": "enum MyLottery.LOTTERY_STATE"
                        },
                        "typeName": {
                            "id": 115,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 114,
                                "name": "LOTTERY_STATE",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 113,
                                "src": "2316:13:7"
                            },
                            "referencedDeclaration": 113,
                            "src": "2316:13:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                "typeString": "enum MyLottery.LOTTERY_STATE"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "MyLottery.EMERGENCY",
                        "id": 119,
                        "members": [
                            {
                                "id": 117,
                                "name": "STOPPED",
                                "nameLocation": "2382:7:7",
                                "nodeType": "EnumValue",
                                "src": "2382:7:7"
                            },
                            {
                                "id": 118,
                                "name": "NOT_STOPPED",
                                "nameLocation": "2399:11:7",
                                "nodeType": "EnumValue",
                                "src": "2399:11:7"
                            }
                        ],
                        "name": "EMERGENCY",
                        "nameLocation": "2362:9:7",
                        "nodeType": "EnumDefinition",
                        "src": "2357:59:7"
                    },
                    {
                        "constant": false,
                        "functionSelector": "caa6fea4",
                        "id": 122,
                        "mutability": "mutable",
                        "name": "emergency",
                        "nameLocation": "2438:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "2421:26:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EMERGENCY_$119",
                            "typeString": "enum MyLottery.EMERGENCY"
                        },
                        "typeName": {
                            "id": 121,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 120,
                                "name": "EMERGENCY",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 119,
                                "src": "2421:9:7"
                            },
                            "referencedDeclaration": 119,
                            "src": "2421:9:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                "typeString": "enum MyLottery.EMERGENCY"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "ddca3f43",
                        "id": 124,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "2468:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "2453:18:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 123,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2453:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "69ebe78e",
                        "id": 126,
                        "mutability": "mutable",
                        "name": "keyhash",
                        "nameLocation": "2492:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "2477:22:7",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 125,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2477:7:7",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "e5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e",
                        "id": 130,
                        "name": "RequestedRandomness",
                        "nameLocation": "2511:19:7",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 129,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 128,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "requestId",
                                    "nameLocation": "2539:9:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 130,
                                    "src": "2531:17:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 127,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2531:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2530:19:7"
                        },
                        "src": "2505:45:7"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "7a4c4fdf5d3172470d96d64c965b30de694852175efc7a6b546fb3bdbf76d178",
                        "id": 136,
                        "name": "cantSendEthOwner",
                        "nameLocation": "2610:16:7",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 135,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 132,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2643:2:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 136,
                                    "src": "2627:18:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 131,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2627:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 134,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "2655:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 136,
                                    "src": "2647:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 133,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2647:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2626:35:7"
                        },
                        "src": "2604:58:7"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "977e2c32be07c8aa27bfe58f2bf200e11eca859b94d36e76e645fcaf1d4cc946",
                        "id": 142,
                        "name": "cantSendEthWinner",
                        "nameLocation": "2673:17:7",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 141,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 138,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2707:2:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 142,
                                    "src": "2691:18:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 137,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2691:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 140,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "2719:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 142,
                                    "src": "2711:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 139,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2711:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2690:35:7"
                        },
                        "src": "2667:59:7"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "1198b3902400a4722f08a21eb834e8f872109a5dab83213639d3670a10d8d40a",
                        "id": 148,
                        "name": "cantSendEthParticipants",
                        "nameLocation": "2737:23:7",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 147,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 144,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2777:2:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 148,
                                    "src": "2761:18:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 143,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2761:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 146,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "2789:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 148,
                                    "src": "2781:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 145,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2781:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2760:35:7"
                        },
                        "src": "2731:65:7"
                    },
                    {
                        "body": {
                            "id": 198,
                            "nodeType": "Block",
                            "src": "2851:379:7",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 151,
                                            "name": "EntryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 89,
                                            "src": "2861:8:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                                "typeString": "int_const 50000000000000000"
                                            },
                                            "id": 157,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "hexValue": "302e3035",
                                                "id": 152,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2872:4:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_20",
                                                    "typeString": "rational_const 1 / 20"
                                                },
                                                "value": "0.05"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        },
                                                        "id": 155,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "3130",
                                                            "id": 153,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2880:2:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                            },
                                                            "value": "10"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "**",
                                                        "rightExpression": {
                                                            "hexValue": "3138",
                                                            "id": 154,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2884:2:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_18_by_1",
                                                                "typeString": "int_const 18"
                                                            },
                                                            "value": "18"
                                                        },
                                                        "src": "2880:6:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        }
                                                    }
                                                ],
                                                "id": 156,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "2879:8:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                }
                                            },
                                            "src": "2872:15:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                                "typeString": "int_const 50000000000000000"
                                            }
                                        },
                                        "src": "2861:26:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 159,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2861:26:7"
                                },
                                {
                                    "expression": {
                                        "id": 163,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 160,
                                            "name": "lottery_state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 116,
                                            "src": "2912:13:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 161,
                                                "name": "LOTTERY_STATE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 113,
                                                "src": "2928:13:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                    "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                }
                                            },
                                            "id": 162,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "CLOSED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 111,
                                            "src": "2928:20:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "src": "2912:36:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                        }
                                    },
                                    "id": 164,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2912:36:7"
                                },
                                {
                                    "expression": {
                                        "id": 168,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 165,
                                            "name": "emergency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 122,
                                            "src": "2958:9:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 166,
                                                "name": "EMERGENCY",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 119,
                                                "src": "2970:9:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$119_$",
                                                    "typeString": "type(enum MyLottery.EMERGENCY)"
                                                }
                                            },
                                            "id": 167,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "NOT_STOPPED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 118,
                                            "src": "2970:21:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "src": "2958:33:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                            "typeString": "enum MyLottery.EMERGENCY"
                                        }
                                    },
                                    "id": 169,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2958:33:7"
                                },
                                {
                                    "expression": {
                                        "id": 172,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 170,
                                            "name": "minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 85,
                                            "src": "3001:19:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "33",
                                            "id": 171,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3023:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_3_by_1",
                                                "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                        },
                                        "src": "3001:23:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 173,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3001:23:7"
                                },
                                {
                                    "expression": {
                                        "id": 176,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 174,
                                            "name": "maximumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 87,
                                            "src": "3034:19:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "313030",
                                            "id": 175,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3056:3:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                        },
                                        "src": "3034:25:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 177,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3034:25:7"
                                },
                                {
                                    "expression": {
                                        "id": 180,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 178,
                                            "name": "pricePercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "3069:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3635",
                                            "id": 179,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3084:2:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_65_by_1",
                                                "typeString": "int_const 65"
                                            },
                                            "value": "65"
                                        },
                                        "src": "3069:17:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 181,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3069:17:7"
                                },
                                {
                                    "expression": {
                                        "id": 184,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 182,
                                            "name": "ownerPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 97,
                                            "src": "3096:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3230",
                                            "id": 183,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3111:2:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_20_by_1",
                                                "typeString": "int_const 20"
                                            },
                                            "value": "20"
                                        },
                                        "src": "3096:17:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 185,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3096:17:7"
                                },
                                {
                                    "expression": {
                                        "id": 188,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 186,
                                            "name": "contractPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 99,
                                            "src": "3123:15:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3135",
                                            "id": 187,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3141:2:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_15_by_1",
                                                "typeString": "int_const 15"
                                            },
                                            "value": "15"
                                        },
                                        "src": "3123:20:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 189,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3123:20:7"
                                },
                                {
                                    "expression": {
                                        "id": 192,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 190,
                                            "name": "maxTryCounter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 101,
                                            "src": "3153:13:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "33",
                                            "id": 191,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3169:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_3_by_1",
                                                "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                        },
                                        "src": "3153:17:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 193,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3153:17:7"
                                },
                                {
                                    "expression": {
                                        "id": 196,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 194,
                                            "name": "lotteryDuration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 107,
                                            "src": "3180:15:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "333030",
                                            "id": 195,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3198:3:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_300_by_1",
                                                "typeString": "int_const 300"
                                            },
                                            "value": "300"
                                        },
                                        "src": "3180:21:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 197,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3180:21:7"
                                }
                            ]
                        },
                        "id": 199,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 149,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2841:2:7"
                        },
                        "returnParameters": {
                            "id": 150,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2851:0:7"
                        },
                        "scope": 865,
                        "src": "2830:400:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 273,
                            "nodeType": "Block",
                            "src": "3310:664:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 210,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "baseExpression": {
                                                        "id": 205,
                                                        "name": "isUserEntered",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 93,
                                                        "src": "3328:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 208,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 206,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "3342:3:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 207,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "3342:10:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3328:25:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "66616c7365",
                                                    "id": 209,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3357:5:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3328:34:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416c726561647920656e7465726564",
                                                "id": 211,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3364:17:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_deb4b8a8201ed6a00a5b44f6de73097d57e1dd1992298f73c80fd116035f4ed8",
                                                    "typeString": "literal_string \"Already entered\""
                                                },
                                                "value": "Already entered"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_deb4b8a8201ed6a00a5b44f6de73097d57e1dd1992298f73c80fd116035f4ed8",
                                                    "typeString": "literal_string \"Already entered\""
                                                }
                                            ],
                                            "id": 204,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3320:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 212,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3320:62:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 213,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3320:62:7"
                                },
                                {
                                    "expression": {
                                        "id": 219,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 214,
                                                "name": "isUserEntered",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 93,
                                                "src": "3392:13:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                    "typeString": "mapping(address => bool)"
                                                }
                                            },
                                            "id": 217,
                                            "indexExpression": {
                                                "expression": {
                                                    "id": 215,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "3406:3:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 216,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3406:10:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "3392:25:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 218,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3420:4:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "3392:32:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 220,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3392:32:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 225,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 222,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "3442:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 223,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "3459:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 224,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "OPEN",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 110,
                                                    "src": "3459:18:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "3442:35:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f7474657279204e6f742073746172746564",
                                                "id": 226,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3479:21:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                },
                                                "value": "Lottery Not started"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                }
                                            ],
                                            "id": 221,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3434:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 227,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3434:67:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 228,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3434:67:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                            "typeString": "enum MyLottery.EMERGENCY"
                                                        },
                                                        "id": 233,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 230,
                                                            "name": "emergency",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 122,
                                                            "src": "3520:9:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                                "typeString": "enum MyLottery.EMERGENCY"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 231,
                                                                "name": "EMERGENCY",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 119,
                                                                "src": "3533:9:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$119_$",
                                                                    "typeString": "type(enum MyLottery.EMERGENCY)"
                                                                }
                                                            },
                                                            "id": 232,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "NOT_STOPPED",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 118,
                                                            "src": "3533:21:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                                "typeString": "enum MyLottery.EMERGENCY"
                                                            }
                                                        },
                                                        "src": "3520:34:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "id": 234,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "3519:36:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f74746572792053746f70706564",
                                                "id": 235,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3557:17:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                },
                                                "value": "Lottery Stopped"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                }
                                            ],
                                            "id": 229,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3511:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 236,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3511:64:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 237,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3511:64:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 242,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 239,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "3606:3:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 240,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3606:9:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 241,
                                                    "name": "EntryFee",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 89,
                                                    "src": "3619:8:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3606:21:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "456e74727920666565206d75737420626520657175616c20746f3a20",
                                                        "id": 246,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3672:30:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_df696564c2d0cbc18ba0582b88bd73b59cb1a08f930115fa1905a3f2d4fff617",
                                                            "typeString": "literal_string \"Entry fee must be equal to: \""
                                                        },
                                                        "value": "Entry fee must be equal to: "
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 249,
                                                                "name": "EntryFee",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 89,
                                                                "src": "3737:8:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 247,
                                                                "name": "Strings",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1244,
                                                                "src": "3720:7:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Strings_$1244_$",
                                                                    "typeString": "type(library Strings)"
                                                                }
                                                            },
                                                            "id": 248,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "toString",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1106,
                                                            "src": "3720:16:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function (uint256) pure returns (string memory)"
                                                            }
                                                        },
                                                        "id": 250,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3720:26:7",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "20457468",
                                                        "id": 251,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3764:6:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_b6ee96e7166402c66a60c745b2e54bae2a950cd694d6fc5ed31c4730260033f8",
                                                            "typeString": "literal_string \" Eth\""
                                                        },
                                                        "value": " Eth"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_df696564c2d0cbc18ba0582b88bd73b59cb1a08f930115fa1905a3f2d4fff617",
                                                            "typeString": "literal_string \"Entry fee must be equal to: \""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_b6ee96e7166402c66a60c745b2e54bae2a950cd694d6fc5ed31c4730260033f8",
                                                            "typeString": "literal_string \" Eth\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 244,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3641:6:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                            "typeString": "type(string storage pointer)"
                                                        },
                                                        "typeName": {
                                                            "id": 243,
                                                            "name": "string",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3641:6:7",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 245,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "concat",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3641:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                                        "typeString": "function () pure returns (string memory)"
                                                    }
                                                },
                                                "id": 252,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3641:143:7",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 238,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3585:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3585:209:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 254,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3585:209:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 259,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 256,
                                                        "name": "players",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 79,
                                                        "src": "3825:7:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                            "typeString": "address payable[] storage ref"
                                                        }
                                                    },
                                                    "id": 257,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3825:14:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "id": 258,
                                                    "name": "maximumParticipants",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 87,
                                                    "src": "3843:19:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3825:37:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4d6178696d756d204e756d626572207265616368656420666f7220206c6f7474657279",
                                                "id": 260,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3876:37:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_9aa3901f561e302bc0fa3d7d8001b37fece8b2ac86462524d93a201586e85418",
                                                    "typeString": "literal_string \"Maximum Number reached for  lottery\""
                                                },
                                                "value": "Maximum Number reached for  lottery"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_9aa3901f561e302bc0fa3d7d8001b37fece8b2ac86462524d93a201586e85418",
                                                    "typeString": "literal_string \"Maximum Number reached for  lottery\""
                                                }
                                            ],
                                            "id": 255,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3804:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 261,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3804:119:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 262,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3804:119:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 268,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "3955:3:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 269,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "3955:10:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 267,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3947:8:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 266,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3947:8:7",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 270,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3947:19:7",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "expression": {
                                                "id": 263,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "3934:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 265,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "3934:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                                                "typeString": "function (address payable[] storage pointer,address payable)"
                                            }
                                        },
                                        "id": 271,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3934:33:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 272,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3934:33:7"
                                }
                            ]
                        },
                        "functionSelector": "382e5e7a",
                        "id": 274,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 202,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 201,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1017,
                                    "src": "3297:12:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3297:12:7"
                            }
                        ],
                        "name": "enter_lottery",
                        "nameLocation": "3266:13:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 200,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3279:2:7"
                        },
                        "returnParameters": {
                            "id": 203,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3310:0:7"
                        },
                        "scope": 865,
                        "src": "3257:717:7",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 309,
                            "nodeType": "Block",
                            "src": "4025:304:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 283,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 280,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "4056:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 281,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "4073:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 282,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 111,
                                                    "src": "4073:20:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "4056:37:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f747465727920416c72656164792073746172746564",
                                                "id": 284,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4107:25:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7fe149e6b25e5d1c4cb2a0f7706a1c16a526c3bf763601c97d5007c09f2cfb61",
                                                    "typeString": "literal_string \"Lottery Already started\""
                                                },
                                                "value": "Lottery Already started"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_7fe149e6b25e5d1c4cb2a0f7706a1c16a526c3bf763601c97d5007c09f2cfb61",
                                                    "typeString": "literal_string \"Lottery Already started\""
                                                }
                                            ],
                                            "id": 279,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4035:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 285,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4035:107:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 286,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4035:107:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                    "typeString": "enum MyLottery.EMERGENCY"
                                                },
                                                "id": 291,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 288,
                                                    "name": "emergency",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 122,
                                                    "src": "4160:9:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 289,
                                                        "name": "EMERGENCY",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 119,
                                                        "src": "4173:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$119_$",
                                                            "typeString": "type(enum MyLottery.EMERGENCY)"
                                                        }
                                                    },
                                                    "id": 290,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "NOT_STOPPED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 118,
                                                    "src": "4173:21:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "src": "4160:34:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f74746572792053746f70706564",
                                                "id": 292,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4196:17:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                },
                                                "value": "Lottery Stopped"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                }
                                            ],
                                            "id": 287,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4152:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 293,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4152:62:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 294,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4152:62:7"
                                },
                                {
                                    "expression": {
                                        "id": 298,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 295,
                                            "name": "lottery_state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 116,
                                            "src": "4224:13:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 296,
                                                "name": "LOTTERY_STATE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 113,
                                                "src": "4240:13:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                    "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                }
                                            },
                                            "id": 297,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "OPEN",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 110,
                                            "src": "4240:18:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "src": "4224:34:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                        }
                                    },
                                    "id": 299,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4224:34:7"
                                },
                                {
                                    "expression": {
                                        "id": 302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 300,
                                            "name": "randomness",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "4268:10:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 301,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4281:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4268:14:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 303,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4268:14:7"
                                },
                                {
                                    "expression": {
                                        "id": 307,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 304,
                                            "name": "lotteryStart",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 105,
                                            "src": "4292:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 305,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "4307:5:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                }
                                            },
                                            "id": 306,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "4307:15:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4292:30:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 308,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4292:30:7"
                                }
                            ]
                        },
                        "functionSelector": "ee44abb2",
                        "id": 310,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 277,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 276,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1017,
                                    "src": "4012:12:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "4012:12:7"
                            }
                        ],
                        "name": "start_lottery",
                        "nameLocation": "3989:13:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 275,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4002:2:7"
                        },
                        "returnParameters": {
                            "id": 278,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4025:0:7"
                        },
                        "scope": 865,
                        "src": "3980:349:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 360,
                            "nodeType": "Block",
                            "src": "4378:614:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 319,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 316,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "4396:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 317,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "4413:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 318,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "OPEN",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 110,
                                                    "src": "4413:18:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "4396:35:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f7474657279204e6f742073746172746564",
                                                "id": 320,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4433:21:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                },
                                                "value": "Lottery Not started"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                }
                                            ],
                                            "id": 315,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4388:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4388:67:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 322,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4388:67:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                    "typeString": "enum MyLottery.EMERGENCY"
                                                },
                                                "id": 327,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 324,
                                                    "name": "emergency",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 122,
                                                    "src": "4473:9:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 325,
                                                        "name": "EMERGENCY",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 119,
                                                        "src": "4486:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$119_$",
                                                            "typeString": "type(enum MyLottery.EMERGENCY)"
                                                        }
                                                    },
                                                    "id": 326,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "NOT_STOPPED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 118,
                                                    "src": "4486:21:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$119",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "src": "4473:34:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f74746572792053746f70706564",
                                                "id": 328,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4509:17:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                },
                                                "value": "Lottery Stopped"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                }
                                            ],
                                            "id": 323,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4465:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 329,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4465:62:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 330,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4465:62:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 338,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 332,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "4558:5:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 333,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4558:15:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 336,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 334,
                                                                "name": "lotteryStart",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 105,
                                                                "src": "4577:12:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "+",
                                                            "rightExpression": {
                                                                "id": 335,
                                                                "name": "lotteryDuration",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 107,
                                                                "src": "4592:15:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "4577:30:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 337,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "4576:32:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4558:50:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6d696e206c6f7474657279206475726174696f6e206e6f7420706173736564",
                                                "id": 339,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4622:33:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f7f296de8cd88a125ebac456b653a90a0e9b7bda92c5e8cc3362ac1d92e969d9",
                                                    "typeString": "literal_string \"min lottery duration not passed\""
                                                },
                                                "value": "min lottery duration not passed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f7f296de8cd88a125ebac456b653a90a0e9b7bda92c5e8cc3362ac1d92e969d9",
                                                    "typeString": "literal_string \"min lottery duration not passed\""
                                                }
                                            ],
                                            "id": 331,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4537:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 340,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4537:128:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 341,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4537:128:7"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 345,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 342,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "4734:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 343,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "4734:14:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "id": 344,
                                            "name": "minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 85,
                                            "src": "4751:19:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4734:36:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 358,
                                        "nodeType": "Block",
                                        "src": "4827:105:7",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 353,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 350,
                                                        "name": "lottery_state",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "4841:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "expression": {
                                                            "id": 351,
                                                            "name": "LOTTERY_STATE",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 113,
                                                            "src": "4857:13:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                                "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                            }
                                                        },
                                                        "id": 352,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "CALCULATING_WINNER",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 112,
                                                        "src": "4857:32:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                                        }
                                                    },
                                                    "src": "4841:48:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "id": 354,
                                                "nodeType": "ExpressionStatement",
                                                "src": "4841:48:7"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 355,
                                                        "name": "calculate_winner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 395,
                                                        "src": "4903:16:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                            "typeString": "function ()"
                                                        }
                                                    },
                                                    "id": 356,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4903:18:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 357,
                                                "nodeType": "ExpressionStatement",
                                                "src": "4903:18:7"
                                            }
                                        ]
                                    },
                                    "id": 359,
                                    "nodeType": "IfStatement",
                                    "src": "4730:202:7",
                                    "trueBody": {
                                        "id": 349,
                                        "nodeType": "Block",
                                        "src": "4772:49:7",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 346,
                                                        "name": "not_enough_participant",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 806,
                                                        "src": "4786:22:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                            "typeString": "function ()"
                                                        }
                                                    },
                                                    "id": 347,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4786:24:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 348,
                                                "nodeType": "ExpressionStatement",
                                                "src": "4786:24:7"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "d718aea9",
                        "id": 361,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 313,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 312,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1017,
                                    "src": "4365:12:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "4365:12:7"
                            }
                        ],
                        "name": "end_lottery",
                        "nameLocation": "4344:11:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 311,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4355:2:7"
                        },
                        "returnParameters": {
                            "id": 314,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4378:0:7"
                        },
                        "scope": 865,
                        "src": "4335:657:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 394,
                            "nodeType": "Block",
                            "src": "5355:511:7",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 389,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 364,
                                            "name": "randomness",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "5442:10:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "baseExpression": {
                                                                        "id": 370,
                                                                        "name": "players",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 79,
                                                                        "src": "5541:7:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                            "typeString": "address payable[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 372,
                                                                    "indexExpression": {
                                                                        "hexValue": "30",
                                                                        "id": 371,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "5549:1:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_0_by_1",
                                                                            "typeString": "int_const 0"
                                                                        },
                                                                        "value": "0"
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5541:10:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "baseExpression": {
                                                                        "id": 373,
                                                                        "name": "players",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 79,
                                                                        "src": "5586:7:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                            "typeString": "address payable[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 375,
                                                                    "indexExpression": {
                                                                        "hexValue": "31",
                                                                        "id": 374,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "5594:1:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_1_by_1",
                                                                            "typeString": "int_const 1"
                                                                        },
                                                                        "value": "1"
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5586:10:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "baseExpression": {
                                                                        "id": 376,
                                                                        "name": "players",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 79,
                                                                        "src": "5618:7:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                            "typeString": "address payable[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 381,
                                                                    "indexExpression": {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 380,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "expression": {
                                                                                "id": 377,
                                                                                "name": "players",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 79,
                                                                                "src": "5626:7:7",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                                    "typeString": "address payable[] storage ref"
                                                                                }
                                                                            },
                                                                            "id": 378,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "length",
                                                                            "nodeType": "MemberAccess",
                                                                            "src": "5626:14:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "-",
                                                                        "rightExpression": {
                                                                            "hexValue": "31",
                                                                            "id": 379,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "5643:1:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                                "typeString": "int_const 1"
                                                                            },
                                                                            "value": "1"
                                                                        },
                                                                        "src": "5626:18:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5618:27:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "id": 382,
                                                                        "name": "block",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -4,
                                                                        "src": "5667:5:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_block",
                                                                            "typeString": "block"
                                                                        }
                                                                    },
                                                                    "id": 383,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "difficulty",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "5667:16:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "id": 384,
                                                                        "name": "block",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -4,
                                                                        "src": "5751:5:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_block",
                                                                            "typeString": "block"
                                                                        }
                                                                    },
                                                                    "id": 385,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "timestamp",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "5751:15:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 368,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -1,
                                                                    "src": "5503:3:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 369,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "5503:16:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 386,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5503:309:7",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 367,
                                                        "name": "keccak256",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -8,
                                                        "src": "5476:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                                        }
                                                    },
                                                    "id": 387,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5476:350:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                ],
                                                "id": 366,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "5455:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                    "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                    "id": 365,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "5455:7:7",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 388,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5455:381:7",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "5442:394:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 390,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5442:394:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 391,
                                            "name": "afterFinish",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 647,
                                            "src": "5846:11:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 392,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5846:13:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 393,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5846:13:7"
                                }
                            ]
                        },
                        "id": 395,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "calculate_winner",
                        "nameLocation": "5327:16:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 362,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5343:2:7"
                        },
                        "returnParameters": {
                            "id": 363,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5355:0:7"
                        },
                        "scope": 865,
                        "src": "5318:548:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 452,
                            "nodeType": "Block",
                            "src": "6019:557:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 410,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 407,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "6050:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 408,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "6067:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 409,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 111,
                                                    "src": "6067:20:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "6050:37:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67",
                                                "id": 411,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6101:31:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                },
                                                "value": "Can Not while lottery ongoing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                }
                                            ],
                                            "id": 406,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6029:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 412,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6029:113:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 413,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6029:113:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 418,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 415,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "6173:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 416,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "6190:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 417,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 111,
                                                    "src": "6190:20:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "6173:37:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67",
                                                "id": 419,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6224:31:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                },
                                                "value": "Can Not while lottery ongoing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                }
                                            ],
                                            "id": 414,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6152:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 420,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6152:113:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 421,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6152:113:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 429,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 427,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 425,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 423,
                                                            "name": "_pricePercent",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 397,
                                                            "src": "6296:13:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "+",
                                                        "rightExpression": {
                                                            "id": 424,
                                                            "name": "_ownerPercent",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 399,
                                                            "src": "6312:13:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "6296:29:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 426,
                                                        "name": "_contractPercent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 401,
                                                        "src": "6328:16:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "6296:48:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "hexValue": "313030",
                                                    "id": 428,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6348:3:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                },
                                                "src": "6296:55:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e206e6f74206f76657220313030",
                                                "id": 430,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6365:18:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8d15d6626eb5bcbf0af7b1610f8f7e5cbac4dae9613582ff6e4d6f34a92d9802",
                                                    "typeString": "literal_string \"can not over 100\""
                                                },
                                                "value": "can not over 100"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8d15d6626eb5bcbf0af7b1610f8f7e5cbac4dae9613582ff6e4d6f34a92d9802",
                                                    "typeString": "literal_string \"can not over 100\""
                                                }
                                            ],
                                            "id": 422,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6275:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 431,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6275:118:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 432,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6275:118:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 436,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 434,
                                                    "name": "_pricePercent",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 397,
                                                    "src": "6411:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "hexValue": "3530",
                                                    "id": 435,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6427:2:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_50_by_1",
                                                        "typeString": "int_const 50"
                                                    },
                                                    "value": "50"
                                                },
                                                "src": "6411:18:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e206e6f74206c657373203530",
                                                "id": 437,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6431:17:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_18154d65b3536c6b4be44752ffc5ee7b5de682a34850193a3fb7d196e570d107",
                                                    "typeString": "literal_string \"can not less 50\""
                                                },
                                                "value": "can not less 50"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_18154d65b3536c6b4be44752ffc5ee7b5de682a34850193a3fb7d196e570d107",
                                                    "typeString": "literal_string \"can not less 50\""
                                                }
                                            ],
                                            "id": 433,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6403:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6403:46:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 439,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6403:46:7"
                                },
                                {
                                    "expression": {
                                        "id": 442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 440,
                                            "name": "pricePercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "6459:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 441,
                                            "name": "_pricePercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 397,
                                            "src": "6474:13:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6459:28:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 443,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6459:28:7"
                                },
                                {
                                    "expression": {
                                        "id": 446,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 444,
                                            "name": "ownerPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 97,
                                            "src": "6497:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 445,
                                            "name": "_ownerPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 399,
                                            "src": "6512:13:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6497:28:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 447,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6497:28:7"
                                },
                                {
                                    "expression": {
                                        "id": 450,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 448,
                                            "name": "contractPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 99,
                                            "src": "6535:15:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 449,
                                            "name": "_contractPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 401,
                                            "src": "6553:16:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6535:34:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 451,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6535:34:7"
                                }
                            ]
                        },
                        "functionSelector": "f2640e10",
                        "id": 453,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 404,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 403,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "6009:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "6009:9:7"
                            }
                        ],
                        "name": "setPrizePercents",
                        "nameLocation": "5881:16:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 402,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 397,
                                    "mutability": "mutable",
                                    "name": "_pricePercent",
                                    "nameLocation": "5915:13:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 453,
                                    "src": "5907:21:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 396,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5907:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 399,
                                    "mutability": "mutable",
                                    "name": "_ownerPercent",
                                    "nameLocation": "5946:13:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 453,
                                    "src": "5938:21:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 398,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5938:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 401,
                                    "mutability": "mutable",
                                    "name": "_contractPercent",
                                    "nameLocation": "5977:16:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 453,
                                    "src": "5969:24:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 400,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5969:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5897:102:7"
                        },
                        "returnParameters": {
                            "id": 405,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "6019:0:7"
                        },
                        "scope": 865,
                        "src": "5872:704:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 464,
                            "nodeType": "Block",
                            "src": "6683:59:7",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 462,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 460,
                                            "name": "minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 85,
                                            "src": "6693:19:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 461,
                                            "name": "_minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 455,
                                            "src": "6715:20:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6693:42:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 463,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6693:42:7"
                                }
                            ]
                        },
                        "functionSelector": "b4989917",
                        "id": 465,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 458,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 457,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "6669:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "6669:9:7"
                            }
                        ],
                        "name": "setMinumumParticipants",
                        "nameLocation": "6591:22:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 456,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 455,
                                    "mutability": "mutable",
                                    "name": "_minumumParticipants",
                                    "nameLocation": "6622:20:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 465,
                                    "src": "6614:28:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 454,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6614:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6613:30:7"
                        },
                        "returnParameters": {
                            "id": 459,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "6683:0:7"
                        },
                        "scope": 865,
                        "src": "6582:160:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 476,
                            "nodeType": "Block",
                            "src": "6814:44:7",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 472,
                                            "name": "lotteryDuration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 107,
                                            "src": "6824:15:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 473,
                                            "name": "_duration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 467,
                                            "src": "6842:9:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6824:27:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 475,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6824:27:7"
                                }
                            ]
                        },
                        "functionSelector": "2b58150b",
                        "id": 477,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 470,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 469,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "6804:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "6804:9:7"
                            }
                        ],
                        "name": "setLotteryDuration",
                        "nameLocation": "6757:18:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 468,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 467,
                                    "mutability": "mutable",
                                    "name": "_duration",
                                    "nameLocation": "6784:9:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 477,
                                    "src": "6776:17:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 466,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6776:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6775:19:7"
                        },
                        "returnParameters": {
                            "id": 471,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "6814:0:7"
                        },
                        "scope": 865,
                        "src": "6748:110:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 496,
                            "nodeType": "Block",
                            "src": "6926:160:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 488,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 485,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "6957:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 486,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "6974:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 487,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 111,
                                                    "src": "6974:20:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "6957:37:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67",
                                                "id": 489,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "7008:31:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                },
                                                "value": "Can Not while lottery ongoing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                }
                                            ],
                                            "id": 484,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6936:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 490,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6936:113:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 491,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6936:113:7"
                                },
                                {
                                    "expression": {
                                        "id": 494,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 492,
                                            "name": "EntryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 89,
                                            "src": "7059:8:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 493,
                                            "name": "_entryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 479,
                                            "src": "7070:9:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "7059:20:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 495,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7059:20:7"
                                }
                            ]
                        },
                        "functionSelector": "fe56f5a0",
                        "id": 497,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 482,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 481,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "6916:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "6916:9:7"
                            }
                        ],
                        "name": "setEntranceFee",
                        "nameLocation": "6873:14:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 480,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 479,
                                    "mutability": "mutable",
                                    "name": "_entryFee",
                                    "nameLocation": "6896:9:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 497,
                                    "src": "6888:17:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 478,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6888:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6887:19:7"
                        },
                        "returnParameters": {
                            "id": 483,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "6926:0:7"
                        },
                        "scope": 865,
                        "src": "6864:222:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 508,
                            "nodeType": "Block",
                            "src": "7193:59:7",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 506,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 504,
                                            "name": "maximumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 87,
                                            "src": "7203:19:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 505,
                                            "name": "_maximumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 499,
                                            "src": "7225:20:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "7203:42:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 507,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7203:42:7"
                                }
                            ]
                        },
                        "functionSelector": "56923710",
                        "id": 509,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 502,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 501,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "7179:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7179:9:7"
                            }
                        ],
                        "name": "setMaximumParticipants",
                        "nameLocation": "7101:22:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 500,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 499,
                                    "mutability": "mutable",
                                    "name": "_maximumParticipants",
                                    "nameLocation": "7132:20:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 509,
                                    "src": "7124:28:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 498,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7124:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7123:30:7"
                        },
                        "returnParameters": {
                            "id": 503,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7193:0:7"
                        },
                        "scope": 865,
                        "src": "7092:160:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 530,
                            "nodeType": "Block",
                            "src": "7367:135:7",
                            "statements": [
                                {
                                    "assignments": [
                                        517
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 517,
                                            "mutability": "mutable",
                                            "name": "balance",
                                            "nameLocation": "7385:7:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 530,
                                            "src": "7377:15:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 516,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7377:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 527,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 524,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -28,
                                                        "src": "7456:4:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_MyLottery_$865",
                                                            "typeString": "contract MyLottery"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_MyLottery_$865",
                                                            "typeString": "contract MyLottery"
                                                        }
                                                    ],
                                                    "id": 523,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "7448:7:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 522,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "7448:7:7",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 525,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7448:13:7",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 519,
                                                        "name": "_tokenContractAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 511,
                                                        "src": "7402:21:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 518,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 72,
                                                    "src": "7395:6:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$72_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 520,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7395:29:7",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$72",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 521,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 17,
                                            "src": "7395:39:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 526,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7395:76:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "7377:94:7"
                                },
                                {
                                    "expression": {
                                        "id": 528,
                                        "name": "balance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 517,
                                        "src": "7488:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 515,
                                    "id": 529,
                                    "nodeType": "Return",
                                    "src": "7481:14:7"
                                }
                            ]
                        },
                        "functionSelector": "f8b2cb4f",
                        "id": 531,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getBalance",
                        "nameLocation": "7267:10:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 512,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 511,
                                    "mutability": "mutable",
                                    "name": "_tokenContractAddress",
                                    "nameLocation": "7286:21:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 531,
                                    "src": "7278:29:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 510,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7278:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7277:31:7"
                        },
                        "returnParameters": {
                            "id": 515,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 514,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 531,
                                    "src": "7354:7:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 513,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7354:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7353:9:7"
                        },
                        "scope": 865,
                        "src": "7258:244:7",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 557,
                            "nodeType": "Block",
                            "src": "7549:191:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 540,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 537,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "7580:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 538,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "7597:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 539,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 111,
                                                    "src": "7597:20:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "7580:37:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67",
                                                "id": 541,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "7631:31:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                },
                                                "value": "Can Not while lottery ongoing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                }
                                            ],
                                            "id": 536,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "7559:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 542,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7559:113:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 543,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7559:113:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 552,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -28,
                                                            "src": "7719:4:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_MyLottery_$865",
                                                                "typeString": "contract MyLottery"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_MyLottery_$865",
                                                                "typeString": "contract MyLottery"
                                                            }
                                                        ],
                                                        "id": 551,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "7711:7:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 550,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "7711:7:7",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 553,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "7711:13:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 554,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "balance",
                                                "nodeType": "MemberAccess",
                                                "src": "7711:21:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 546,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "7690:3:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 547,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "7690:10:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 545,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "7682:8:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 544,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "7682:8:7",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 548,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7682:19:7",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 549,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "7682:28:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 555,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7682:51:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 556,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7682:51:7"
                                }
                            ]
                        },
                        "functionSelector": "bcdb446b",
                        "id": 558,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 534,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 533,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "7539:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7539:9:7"
                            }
                        ],
                        "name": "recoverEth",
                        "nameLocation": "7517:10:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 532,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7527:2:7"
                        },
                        "returnParameters": {
                            "id": 535,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7549:0:7"
                        },
                        "scope": 865,
                        "src": "7508:232:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 586,
                            "nodeType": "Block",
                            "src": "7810:120:7",
                            "statements": [
                                {
                                    "assignments": [
                                        567
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 567,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nameLocation": "7827:5:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 586,
                                            "src": "7820:12:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$72",
                                                "typeString": "contract IERC20"
                                            },
                                            "typeName": {
                                                "id": 566,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 565,
                                                    "name": "IERC20",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 72,
                                                    "src": "7820:6:7"
                                                },
                                                "referencedDeclaration": 72,
                                                "src": "7820:6:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$72",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 571,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 569,
                                                "name": "tokenAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 560,
                                                "src": "7842:12:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 568,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 72,
                                            "src": "7835:6:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$72_$",
                                                "typeString": "type(contract IERC20)"
                                            }
                                        },
                                        "id": 570,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7835:20:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$72",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "7820:35:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 575,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "7880:3:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 576,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "7880:10:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 581,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -28,
                                                                "src": "7916:4:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_MyLottery_$865",
                                                                    "typeString": "contract MyLottery"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_MyLottery_$865",
                                                                    "typeString": "contract MyLottery"
                                                                }
                                                            ],
                                                            "id": 580,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "7908:7:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 579,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "7908:7:7",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 582,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "7908:13:7",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 577,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 567,
                                                        "src": "7892:5:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$72",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 578,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 17,
                                                    "src": "7892:15:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 583,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7892:30:7",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 572,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 567,
                                                "src": "7865:5:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$72",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 574,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 26,
                                            "src": "7865:14:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 584,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7865:58:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 585,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7865:58:7"
                                }
                            ]
                        },
                        "functionSelector": "16114acd",
                        "id": 587,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 563,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 562,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "7800:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7800:9:7"
                            }
                        ],
                        "name": "recoverTokens",
                        "nameLocation": "7755:13:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 561,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 560,
                                    "mutability": "mutable",
                                    "name": "tokenAddress",
                                    "nameLocation": "7777:12:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 587,
                                    "src": "7769:20:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 559,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7769:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7768:22:7"
                        },
                        "returnParameters": {
                            "id": 564,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7810:0:7"
                        },
                        "scope": 865,
                        "src": "7746:184:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 646,
                            "nodeType": "Block",
                            "src": "7968:579:7",
                            "statements": [
                                {
                                    "assignments": [
                                        591
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 591,
                                            "mutability": "mutable",
                                            "name": "sentFlag",
                                            "nameLocation": "8017:8:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 646,
                                            "src": "8009:16:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 590,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8009:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 593,
                                    "initialValue": {
                                        "hexValue": "30",
                                        "id": 592,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8028:1:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8009:20:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 597,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 595,
                                                    "name": "randomness",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 83,
                                                    "src": "8047:10:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 596,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "8061:1:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "8047:15:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e742066696e642072616e646f6d6e657373",
                                                "id": 598,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8064:22:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_5441f3fd1ea83df00dcd2998e273d86785fb084ab473a08bbf2ee67978b23a60",
                                                    "typeString": "literal_string \"cant find randomness\""
                                                },
                                                "value": "cant find randomness"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_5441f3fd1ea83df00dcd2998e273d86785fb084ab473a08bbf2ee67978b23a60",
                                                    "typeString": "literal_string \"cant find randomness\""
                                                }
                                            ],
                                            "id": 594,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "8039:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 599,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8039:48:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 600,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8039:48:7"
                                },
                                {
                                    "assignments": [
                                        602
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 602,
                                            "mutability": "mutable",
                                            "name": "indexOfWinner",
                                            "nameLocation": "8105:13:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 646,
                                            "src": "8097:21:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 601,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8097:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 607,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 606,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 603,
                                            "name": "randomness",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "8121:10:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 604,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "8134:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 605,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "8134:14:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "8121:27:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8097:51:7"
                                },
                                {
                                    "expression": {
                                        "id": 612,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 608,
                                            "name": "recentWinner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 81,
                                            "src": "8158:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "baseExpression": {
                                                "id": 609,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "8173:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 611,
                                            "indexExpression": {
                                                "id": 610,
                                                "name": "indexOfWinner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 602,
                                                "src": "8181:13:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8173:22:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "src": "8158:37:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "id": 613,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8158:37:7"
                                },
                                {
                                    "expression": {
                                        "id": 617,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 614,
                                            "name": "sentFlag",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 591,
                                            "src": "8206:8:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 615,
                                                "name": "sendPrizes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 754,
                                                "src": "8217:10:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                                    "typeString": "function () returns (uint256)"
                                                }
                                            },
                                            "id": 616,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8217:12:7",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "8206:23:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 618,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8206:23:7"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 621,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 619,
                                            "name": "sentFlag",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 591,
                                            "src": "8244:8:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 620,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8256:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "8244:13:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 644,
                                        "nodeType": "Block",
                                        "src": "8304:187:7",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 630,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 626,
                                                        "name": "errorFlag",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 103,
                                                        "src": "8318:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 629,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 627,
                                                            "name": "errorFlag",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 103,
                                                            "src": "8330:9:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "+",
                                                        "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 628,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "8342:1:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                        },
                                                        "src": "8330:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "8318:25:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 631,
                                                "nodeType": "ExpressionStatement",
                                                "src": "8318:25:7"
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 634,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 632,
                                                        "name": "errorFlag",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 103,
                                                        "src": "8361:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "hexValue": "33",
                                                        "id": 633,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8374:1:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_3_by_1",
                                                            "typeString": "int_const 3"
                                                        },
                                                        "value": "3"
                                                    },
                                                    "src": "8361:14:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 643,
                                                "nodeType": "IfStatement",
                                                "src": "8357:124:7",
                                                "trueBody": {
                                                    "id": 642,
                                                    "nodeType": "Block",
                                                    "src": "8377:104:7",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 637,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "id": 635,
                                                                    "name": "errorFlag",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 103,
                                                                    "src": "8395:9:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "hexValue": "30",
                                                                    "id": 636,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "8407:1:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                },
                                                                "src": "8395:13:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 638,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "8395:13:7"
                                                        },
                                                        {
                                                            "expression": {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 639,
                                                                    "name": "calculate_winner",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 395,
                                                                    "src": "8426:16:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                                        "typeString": "function ()"
                                                                    }
                                                                },
                                                                "id": 640,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "8426:18:7",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 641,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "8426:18:7"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "id": 645,
                                    "nodeType": "IfStatement",
                                    "src": "8240:251:7",
                                    "trueBody": {
                                        "id": 625,
                                        "nodeType": "Block",
                                        "src": "8259:39:7",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 622,
                                                        "name": "clearPlayers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 864,
                                                        "src": "8273:12:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                            "typeString": "function ()"
                                                        }
                                                    },
                                                    "id": 623,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8273:14:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 624,
                                                "nodeType": "ExpressionStatement",
                                                "src": "8273:14:7"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "id": 647,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "afterFinish",
                        "nameLocation": "7945:11:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 588,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7956:2:7"
                        },
                        "returnParameters": {
                            "id": 589,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7968:0:7"
                        },
                        "scope": 865,
                        "src": "7936:611:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 655,
                            "nodeType": "Block",
                            "src": "8599:29:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 652,
                                            "name": "sendPrizes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 754,
                                            "src": "8609:10:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                                "typeString": "function () returns (uint256)"
                                            }
                                        },
                                        "id": 653,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8609:12:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 654,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8609:12:7"
                                }
                            ]
                        },
                        "functionSelector": "4a8466e9",
                        "id": 656,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 650,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 649,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "8589:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "8589:9:7"
                            }
                        ],
                        "name": "retrySendPrizes",
                        "nameLocation": "8562:15:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 648,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8577:2:7"
                        },
                        "returnParameters": {
                            "id": 651,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8599:0:7"
                        },
                        "scope": 865,
                        "src": "8553:75:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 753,
                            "nodeType": "Block",
                            "src": "8683:1027:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 665,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 662,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 116,
                                                    "src": "8714:13:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 663,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 113,
                                                        "src": "8731:13:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 664,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "CALCULATING_WINNER",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 112,
                                                    "src": "8731:32:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "8714:49:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "2073656e64207072697a652077726f6e67207374617465",
                                                "id": 666,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8777:25:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8c0c3e57c3343e0ccbbc77fd237f0edc8ba109dcef4b530e8d84e381423d9023",
                                                    "typeString": "literal_string \" send prize wrong state\""
                                                },
                                                "value": " send prize wrong state"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8c0c3e57c3343e0ccbbc77fd237f0edc8ba109dcef4b530e8d84e381423d9023",
                                                    "typeString": "literal_string \" send prize wrong state\""
                                                }
                                            ],
                                            "id": 661,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "8693:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 667,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8693:119:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 668,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8693:119:7"
                                },
                                {
                                    "assignments": [
                                        670
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 670,
                                            "mutability": "mutable",
                                            "name": "total_prize",
                                            "nameLocation": "8830:11:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 753,
                                            "src": "8822:19:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 669,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8822:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 676,
                                    "initialValue": {
                                        "expression": {
                                            "arguments": [
                                                {
                                                    "id": 673,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "8852:4:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_MyLottery_$865",
                                                        "typeString": "contract MyLottery"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_MyLottery_$865",
                                                        "typeString": "contract MyLottery"
                                                    }
                                                ],
                                                "id": 672,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "8844:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 671,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "8844:7:7",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 674,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8844:13:7",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "src": "8844:21:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8822:43:7"
                                },
                                {
                                    "condition": {
                                        "id": 678,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "8892:10:7",
                                        "subExpression": {
                                            "id": 677,
                                            "name": "ownerSent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 109,
                                            "src": "8893:9:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 718,
                                    "nodeType": "IfStatement",
                                    "src": "8875:496:7",
                                    "trueBody": {
                                        "id": 717,
                                        "nodeType": "Block",
                                        "src": "8982:389:7",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    680,
                                                    682
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 680,
                                                        "mutability": "mutable",
                                                        "name": "sent",
                                                        "nameLocation": "9002:4:7",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 717,
                                                        "src": "8997:9:7",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "typeName": {
                                                            "id": 679,
                                                            "name": "bool",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "8997:4:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 682,
                                                        "mutability": "mutable",
                                                        "name": "data",
                                                        "nameLocation": "9021:4:7",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 717,
                                                        "src": "9008:17:7",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes"
                                                        },
                                                        "typeName": {
                                                            "id": 681,
                                                            "name": "bytes",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "9008:5:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                                "typeString": "bytes"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 695,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "",
                                                            "id": 693,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "string",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "9115:2:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            },
                                                            "value": ""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                    "typeString": "literal_string \"\""
                                                                }
                                                            ],
                                                            "expression": {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 683,
                                                                    "name": "owner",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 906,
                                                                    "src": "9029:5:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                        "typeString": "function () view returns (address)"
                                                                    }
                                                                },
                                                                "id": 684,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "9029:7:7",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "id": 685,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "call",
                                                            "nodeType": "MemberAccess",
                                                            "src": "9029:12:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                            }
                                                        },
                                                        "id": 692,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                            "value"
                                                        ],
                                                        "nodeType": "FunctionCallOptions",
                                                        "options": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 691,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "components": [
                                                                        {
                                                                            "commonType": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            },
                                                                            "id": 688,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                                "id": 686,
                                                                                "name": "total_prize",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 670,
                                                                                "src": "9067:11:7",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "*",
                                                                            "rightExpression": {
                                                                                "id": 687,
                                                                                "name": "ownerPercent",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 97,
                                                                                "src": "9081:12:7",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "src": "9067:26:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "id": 689,
                                                                    "isConstant": false,
                                                                    "isInlineArray": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "TupleExpression",
                                                                    "src": "9066:28:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "/",
                                                                "rightExpression": {
                                                                    "hexValue": "313030",
                                                                    "id": 690,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "9097:3:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_100_by_1",
                                                                        "typeString": "int_const 100"
                                                                    },
                                                                    "value": "100"
                                                                },
                                                                "src": "9066:34:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "src": "9029:85:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                        }
                                                    },
                                                    "id": 694,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "9029:89:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                                        "typeString": "tuple(bool,bytes memory)"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "8996:122:7"
                                            },
                                            {
                                                "expression": {
                                                    "id": 698,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 696,
                                                        "name": "ownerSent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 109,
                                                        "src": "9132:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "id": 697,
                                                        "name": "sent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 680,
                                                        "src": "9144:4:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "src": "9132:16:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 699,
                                                "nodeType": "ExpressionStatement",
                                                "src": "9132:16:7"
                                            },
                                            {
                                                "condition": {
                                                    "id": 701,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "9166:10:7",
                                                    "subExpression": {
                                                        "id": 700,
                                                        "name": "ownerSent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 109,
                                                        "src": "9167:9:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 716,
                                                "nodeType": "IfStatement",
                                                "src": "9162:199:7",
                                                "trueBody": {
                                                    "id": 715,
                                                    "nodeType": "Block",
                                                    "src": "9178:183:7",
                                                    "statements": [
                                                        {
                                                            "eventCall": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 703,
                                                                            "name": "owner",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 906,
                                                                            "src": "9239:5:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                                "typeString": "function () view returns (address)"
                                                                            }
                                                                        },
                                                                        "id": 704,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "9239:7:7",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 710,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "components": [
                                                                                {
                                                                                    "commonType": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    },
                                                                                    "id": 707,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "leftExpression": {
                                                                                        "id": 705,
                                                                                        "name": "total_prize",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 670,
                                                                                        "src": "9269:11:7",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "nodeType": "BinaryOperation",
                                                                                    "operator": "*",
                                                                                    "rightExpression": {
                                                                                        "id": 706,
                                                                                        "name": "ownerPercent",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 97,
                                                                                        "src": "9283:12:7",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "src": "9269:26:7",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "id": 708,
                                                                            "isConstant": false,
                                                                            "isInlineArray": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "TupleExpression",
                                                                            "src": "9268:28:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "/",
                                                                        "rightExpression": {
                                                                            "hexValue": "313030",
                                                                            "id": 709,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "9299:3:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                                "typeString": "int_const 100"
                                                                            },
                                                                            "value": "100"
                                                                        },
                                                                        "src": "9268:34:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 702,
                                                                    "name": "cantSendEthOwner",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 136,
                                                                    "src": "9201:16:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                                        "typeString": "function (address,uint256)"
                                                                    }
                                                                },
                                                                "id": 711,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "9201:119:7",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 712,
                                                            "nodeType": "EmitStatement",
                                                            "src": "9196:124:7"
                                                        },
                                                        {
                                                            "expression": {
                                                                "hexValue": "31",
                                                                "id": 713,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "9345:1:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_1_by_1",
                                                                    "typeString": "int_const 1"
                                                                },
                                                                "value": "1"
                                                            },
                                                            "functionReturnParameters": 660,
                                                            "id": 714,
                                                            "nodeType": "Return",
                                                            "src": "9338:8:7"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [
                                        720,
                                        722
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 720,
                                            "mutability": "mutable",
                                            "name": "sent",
                                            "nameLocation": "9387:4:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 753,
                                            "src": "9382:9:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 719,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9382:4:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 722,
                                            "mutability": "mutable",
                                            "name": "data",
                                            "nameLocation": "9406:4:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 753,
                                            "src": "9393:17:7",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 721,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9393:5:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 734,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "hexValue": "",
                                                "id": 732,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9497:2:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                        "typeString": "literal_string \"\""
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 723,
                                                    "name": "recentWinner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 81,
                                                    "src": "9414:12:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "id": 724,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "call",
                                                "nodeType": "MemberAccess",
                                                "src": "9414:17:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                }
                                            },
                                            "id": 731,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "names": [
                                                "value"
                                            ],
                                            "nodeType": "FunctionCallOptions",
                                            "options": [
                                                {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 730,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "components": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 727,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "id": 725,
                                                                    "name": "total_prize",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 670,
                                                                    "src": "9453:11:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "*",
                                                                "rightExpression": {
                                                                    "id": 726,
                                                                    "name": "pricePercent",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 95,
                                                                    "src": "9467:12:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "9453:26:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "id": 728,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "9452:28:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "/",
                                                    "rightExpression": {
                                                        "hexValue": "313030",
                                                        "id": 729,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "9483:3:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                    },
                                                    "src": "9452:34:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "src": "9414:82:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                            }
                                        },
                                        "id": 733,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9414:86:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "tuple(bool,bytes memory)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "9381:119:7"
                                },
                                {
                                    "condition": {
                                        "id": 736,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "9514:5:7",
                                        "subExpression": {
                                            "id": 735,
                                            "name": "sent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 720,
                                            "src": "9515:4:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 750,
                                    "nodeType": "IfStatement",
                                    "src": "9510:176:7",
                                    "trueBody": {
                                        "id": 749,
                                        "nodeType": "Block",
                                        "src": "9521:165:7",
                                        "statements": [
                                            {
                                                "eventCall": {
                                                    "arguments": [
                                                        {
                                                            "id": 738,
                                                            "name": "recentWinner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 81,
                                                            "src": "9575:12:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 744,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "components": [
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 741,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "id": 739,
                                                                            "name": "total_prize",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 670,
                                                                            "src": "9606:11:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "rightExpression": {
                                                                            "id": 740,
                                                                            "name": "pricePercent",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 95,
                                                                            "src": "9620:12:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "src": "9606:26:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "id": 742,
                                                                "isConstant": false,
                                                                "isInlineArray": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "TupleExpression",
                                                                "src": "9605:28:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "/",
                                                            "rightExpression": {
                                                                "hexValue": "313030",
                                                                "id": 743,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "9636:3:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_100_by_1",
                                                                    "typeString": "int_const 100"
                                                                },
                                                                "value": "100"
                                                            },
                                                            "src": "9605:34:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 737,
                                                        "name": "cantSendEthWinner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 142,
                                                        "src": "9540:17:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,uint256)"
                                                        }
                                                    },
                                                    "id": 745,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "9540:113:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 746,
                                                "nodeType": "EmitStatement",
                                                "src": "9535:118:7"
                                            },
                                            {
                                                "expression": {
                                                    "hexValue": "31",
                                                    "id": 747,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "9674:1:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "functionReturnParameters": 660,
                                                "id": 748,
                                                "nodeType": "Return",
                                                "src": "9667:8:7"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "hexValue": "30",
                                        "id": 751,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9702:1:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "functionReturnParameters": 660,
                                    "id": 752,
                                    "nodeType": "Return",
                                    "src": "9695:8:7"
                                }
                            ]
                        },
                        "id": 754,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "sendPrizes",
                        "nameLocation": "8643:10:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 657,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8653:2:7"
                        },
                        "returnParameters": {
                            "id": 660,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 659,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 754,
                                    "src": "8674:7:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 658,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8674:7:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "8673:9:7"
                        },
                        "scope": 865,
                        "src": "8634:1076:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 805,
                            "nodeType": "Block",
                            "src": "10263:493:7",
                            "statements": [
                                {
                                    "body": {
                                        "id": 800,
                                        "nodeType": "Block",
                                        "src": "10316:410:7",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    769,
                                                    771
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 769,
                                                        "mutability": "mutable",
                                                        "name": "sent",
                                                        "nameLocation": "10415:4:7",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 800,
                                                        "src": "10410:9:7",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "typeName": {
                                                            "id": 768,
                                                            "name": "bool",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "10410:4:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 771,
                                                        "mutability": "mutable",
                                                        "name": "data",
                                                        "nameLocation": "10434:4:7",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 800,
                                                        "src": "10421:17:7",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes"
                                                        },
                                                        "typeName": {
                                                            "id": 770,
                                                            "name": "bytes",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "10421:5:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                                "typeString": "bytes"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 780,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "",
                                                            "id": 778,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "string",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "10492:2:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            },
                                                            "value": ""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                    "typeString": "literal_string \"\""
                                                                }
                                                            ],
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 772,
                                                                    "name": "players",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 79,
                                                                    "src": "10442:7:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                        "typeString": "address payable[] storage ref"
                                                                    }
                                                                },
                                                                "id": 774,
                                                                "indexExpression": {
                                                                    "id": 773,
                                                                    "name": "i",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 758,
                                                                    "src": "10450:1:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint8",
                                                                        "typeString": "uint8"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "10442:10:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            },
                                                            "id": 775,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "call",
                                                            "nodeType": "MemberAccess",
                                                            "src": "10442:15:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                            }
                                                        },
                                                        "id": 777,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                            "value"
                                                        ],
                                                        "nodeType": "FunctionCallOptions",
                                                        "options": [
                                                            {
                                                                "id": 776,
                                                                "name": "EntryFee",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 89,
                                                                "src": "10465:8:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "src": "10442:32:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                        }
                                                    },
                                                    "id": 779,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "10442:66:7",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                                        "typeString": "tuple(bool,bytes memory)"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "10409:99:7"
                                            },
                                            {
                                                "expression": {
                                                    "id": 787,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 781,
                                                            "name": "isUserEntered",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 93,
                                                            "src": "10522:13:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                "typeString": "mapping(address => bool)"
                                                            }
                                                        },
                                                        "id": 785,
                                                        "indexExpression": {
                                                            "baseExpression": {
                                                                "id": 782,
                                                                "name": "players",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 79,
                                                                "src": "10536:7:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                    "typeString": "address payable[] storage ref"
                                                                }
                                                            },
                                                            "id": 784,
                                                            "indexExpression": {
                                                                "id": 783,
                                                                "name": "i",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 758,
                                                                "src": "10544:1:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "10536:10:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "10522:25:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "hexValue": "66616c7365",
                                                        "id": 786,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "bool",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10550:5:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "value": "false"
                                                    },
                                                    "src": "10522:33:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 788,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10522:33:7"
                                            },
                                            {
                                                "condition": {
                                                    "id": 790,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "10626:5:7",
                                                    "subExpression": {
                                                        "id": 789,
                                                        "name": "sent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 769,
                                                        "src": "10627:4:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 799,
                                                "nodeType": "IfStatement",
                                                "src": "10622:94:7",
                                                "trueBody": {
                                                    "id": 798,
                                                    "nodeType": "Block",
                                                    "src": "10633:83:7",
                                                    "statements": [
                                                        {
                                                            "eventCall": {
                                                                "arguments": [
                                                                    {
                                                                        "baseExpression": {
                                                                            "id": 792,
                                                                            "name": "players",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 79,
                                                                            "src": "10680:7:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                                "typeString": "address payable[] storage ref"
                                                                            }
                                                                        },
                                                                        "id": 794,
                                                                        "indexExpression": {
                                                                            "id": 793,
                                                                            "name": "i",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 758,
                                                                            "src": "10688:1:7",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint8",
                                                                                "typeString": "uint8"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "10680:10:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address_payable",
                                                                            "typeString": "address payable"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": 795,
                                                                        "name": "EntryFee",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 89,
                                                                        "src": "10692:8:7",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address_payable",
                                                                            "typeString": "address payable"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 791,
                                                                    "name": "cantSendEthParticipants",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 148,
                                                                    "src": "10656:23:7",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                                        "typeString": "function (address,uint256)"
                                                                    }
                                                                },
                                                                "id": 796,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "10656:45:7",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 797,
                                                            "nodeType": "EmitStatement",
                                                            "src": "10651:50:7"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 764,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 761,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 758,
                                            "src": "10291:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 762,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "10295:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 763,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "10295:14:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "10291:18:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 801,
                                    "initializationExpression": {
                                        "assignments": [
                                            758
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 758,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "10284:1:7",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 801,
                                                "src": "10278:7:7",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "typeName": {
                                                    "id": 757,
                                                    "name": "uint8",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "10278:5:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 760,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 759,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10288:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "10278:11:7"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 766,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "10311:3:7",
                                            "subExpression": {
                                                "id": 765,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 758,
                                                "src": "10311:1:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "id": 767,
                                        "nodeType": "ExpressionStatement",
                                        "src": "10311:3:7"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "10273:453:7"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 802,
                                            "name": "clearPlayers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 864,
                                            "src": "10735:12:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 803,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10735:14:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 804,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10735:14:7"
                                }
                            ]
                        },
                        "id": 806,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "not_enough_participant",
                        "nameLocation": "10229:22:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 755,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "10251:2:7"
                        },
                        "returnParameters": {
                            "id": 756,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "10263:0:7"
                        },
                        "scope": 865,
                        "src": "10220:536:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 817,
                            "nodeType": "Block",
                            "src": "10822:44:7",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 814,
                                                "name": "newOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 808,
                                                "src": "10850:8:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 813,
                                            "name": "transferOwnership",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 957,
                                            "src": "10832:17:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 815,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10832:27:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 816,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10832:27:7"
                                }
                            ]
                        },
                        "functionSelector": "4fb2e45d",
                        "id": 818,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 811,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 810,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 897,
                                    "src": "10812:9:7"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "10812:9:7"
                            }
                        ],
                        "name": "transferOwner",
                        "nameLocation": "10771:13:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 809,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 808,
                                    "mutability": "mutable",
                                    "name": "newOwner",
                                    "nameLocation": "10793:8:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 818,
                                    "src": "10785:16:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 807,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10785:7:7",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "10784:18:7"
                        },
                        "returnParameters": {
                            "id": 812,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "10822:0:7"
                        },
                        "scope": 865,
                        "src": "10762:104:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 863,
                            "nodeType": "Block",
                            "src": "10905:283:7",
                            "statements": [
                                {
                                    "body": {
                                        "id": 840,
                                        "nodeType": "Block",
                                        "src": "10958:58:7",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 838,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 832,
                                                            "name": "isUserEntered",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 93,
                                                            "src": "10972:13:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                "typeString": "mapping(address => bool)"
                                                            }
                                                        },
                                                        "id": 836,
                                                        "indexExpression": {
                                                            "baseExpression": {
                                                                "id": 833,
                                                                "name": "players",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 79,
                                                                "src": "10986:7:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                    "typeString": "address payable[] storage ref"
                                                                }
                                                            },
                                                            "id": 835,
                                                            "indexExpression": {
                                                                "id": 834,
                                                                "name": "i",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 822,
                                                                "src": "10994:1:7",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "10986:10:7",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "10972:25:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "hexValue": "66616c7365",
                                                        "id": 837,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "bool",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11000:5:7",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "value": "false"
                                                    },
                                                    "src": "10972:33:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 839,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10972:33:7"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 828,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 825,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 822,
                                            "src": "10933:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 826,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "10937:7:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 827,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "10937:14:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "10933:18:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 841,
                                    "initializationExpression": {
                                        "assignments": [
                                            822
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 822,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "10926:1:7",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 841,
                                                "src": "10920:7:7",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "typeName": {
                                                    "id": 821,
                                                    "name": "uint8",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "10920:5:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 824,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 823,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10930:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "10920:11:7"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 830,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "10953:3:7",
                                            "subExpression": {
                                                "id": 829,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 822,
                                                "src": "10953:1:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "id": 831,
                                        "nodeType": "ExpressionStatement",
                                        "src": "10953:3:7"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "10915:101:7"
                                },
                                {
                                    "expression": {
                                        "id": 848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 842,
                                            "name": "players",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 79,
                                            "src": "11025:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                "typeString": "address payable[] storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "30",
                                                    "id": 846,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11057:1:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    }
                                                ],
                                                "id": 845,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "11035:21:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                                                    "typeString": "function (uint256) pure returns (address payable[] memory)"
                                                },
                                                "typeName": {
                                                    "baseType": {
                                                        "id": 843,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "11039:15:7",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "id": 844,
                                                    "nodeType": "ArrayTypeName",
                                                    "src": "11039:17:7",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                                                        "typeString": "address payable[]"
                                                    }
                                                }
                                            },
                                            "id": 847,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "11035:24:7",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                                                "typeString": "address payable[] memory"
                                            }
                                        },
                                        "src": "11025:34:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                            "typeString": "address payable[] storage ref"
                                        }
                                    },
                                    "id": 849,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11025:34:7"
                                },
                                {
                                    "expression": {
                                        "id": 853,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 850,
                                            "name": "lottery_state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 116,
                                            "src": "11069:13:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 851,
                                                "name": "LOTTERY_STATE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 113,
                                                "src": "11085:13:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$113_$",
                                                    "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                }
                                            },
                                            "id": 852,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "CLOSED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 111,
                                            "src": "11085:20:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "src": "11069:36:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$113",
                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                        }
                                    },
                                    "id": 854,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11069:36:7"
                                },
                                {
                                    "expression": {
                                        "id": 857,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 855,
                                            "name": "errorFlag",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 103,
                                            "src": "11115:9:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 856,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11127:1:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "11115:13:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 858,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11115:13:7"
                                },
                                {
                                    "expression": {
                                        "id": 861,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 859,
                                            "name": "ownerSent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 109,
                                            "src": "11138:9:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "66616c7365",
                                            "id": 860,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11150:5:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "false"
                                        },
                                        "src": "11138:17:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 862,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11138:17:7"
                                }
                            ]
                        },
                        "id": 864,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "clearPlayers",
                        "nameLocation": "10881:12:7",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 819,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "10893:2:7"
                        },
                        "returnParameters": {
                            "id": 820,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "10905:0:7"
                        },
                        "scope": 865,
                        "src": "10872:316:7",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 866,
                "src": "1164:10026:7",
                "usedErrors": []
            }
        ],
        "src": "0:11191:7"
    },
    "compiler": {
        "version": "0.8.14+commit.80d49f37",
        "evm_version": "istanbul",
        "optimizer": {
            "enabled": true,
            "runs": 200
        }
    },
    "contractName": "MyLottery",
    "deployedBytecode": "",
    "deployedSourceMap": "1164:10026:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1394:34;;;;;;;;;;;;;;;;;;;160:25:8;;;148:2;133:18;1394:34:7;;;;;;;;1803:21;;;;;;;;;;-1:-1:-1;1803:21:7;;;;;;;;;;;361:14:8;;354:22;336:41;;324:2;309:18;1803:21:7;196:187:8;7746:184:7;;;;;;;;;;-1:-1:-1;7746:184:7;;;;;:::i;:::-;;:::i;:::-;;6748:110;;;;;;;;;;-1:-1:-1;6748:110:7;;;;;:::i;:::-;;:::i;1767:30::-;;;;;;;;;;;;;;;;1323:25;;;;;;;;;;;;;;;;3257:717;;;:::i;8553:75::-;;;;;;;;;;;;;:::i;1255:35::-;;;;;;;;;;-1:-1:-1;1255:35:7;;;;-1:-1:-1;;;;;1255:35:7;;;;;;-1:-1:-1;;;;;1044:32:8;;;1026:51;;1014:2;999:18;1255:35:7;864:219:8;10762:104:7;;;;;;;;;;-1:-1:-1;10762:104:7;;;;;:::i;:::-;;:::i;1670:28::-;;;;;;;;;;;;;;;;7092:160;;;;;;;;;;-1:-1:-1;7092:160:7;;;;;:::i;:::-;;:::i;1434:23::-;;;;;;;;;;;;;;;;2477:22;;;;;;;;;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;2316:34:7:-;;;;;;;;;;-1:-1:-1;2316:34:7;;;;;;;;;;;;;;;;;;:::i;1568:27::-;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1601:27:7;;;;;;;;;;;;;;;;1634:30;;;;;;;;;;;;;;;;1354:34;;;;;;;;;;;;;;;;6582:160;;;;;;;;;;-1:-1:-1;6582:160:7;;;;;:::i;:::-;;:::i;7508:232::-;;;;;;;;;;;;;:::i;1463:45::-;;;;;;;;;;-1:-1:-1;1463:45:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;2421:26;;;;;;;;;;-1:-1:-1;2421:26:7;;;;;;;;;;;;;;;;;;:::i;1734:27::-;;;;;;;;;;;;;;;;4335:657;;;;;;;;;;;;;:::i;2453:18::-;;;;;;;;;;;;;;;;3980:349;;;;;;;;;;;;;:::i;5872:704::-;;;;;;;;;;-1:-1:-1;5872:704:7;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;1217:32:7:-;;;;;;;;;;-1:-1:-1;1217:32:7;;;;;:::i;:::-;;:::i;7258:244::-;;;;;;;;;;-1:-1:-1;7258:244:7;;;;;:::i;:::-;;:::i;1704:24::-;;;;;;;;;;;;;;;;6864:222;;;;;;;;;;-1:-1:-1;6864:222:7;;;;;:::i;:::-;;:::i;7746:184::-;1094:13:0;:11;:13::i;:::-;7892:30:7::1;::::0;-1:-1:-1;;;7892:30:7;;7916:4:::1;7892:30;::::0;::::1;1026:51:8::0;7842:12:7;;-1:-1:-1;;;;;7865:14:7;::::1;::::0;::::1;::::0;7880:10:::1;::::0;7865:14;;7892:15:::1;::::0;999:18:8;;7892:30:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7865:58;::::0;-1:-1:-1;;;;;;7865:58:7::1;::::0;;;;;;-1:-1:-1;;;;;2814:32:8;;;7865:58:7::1;::::0;::::1;2796:51:8::0;2863:18;;;2856:34;2769:18;;7865:58:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7810:120;7746:184:::0;:::o;6748:110::-;1094:13:0;:11;:13::i;:::-;6824:15:7::1;:27:::0;6748:110::o;3257:717::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;3342:10:7::1;3328:25;::::0;;;:13:::1;:25;::::0;;;;;::::1;;:34;3320:62;;;::::0;-1:-1:-1;;;3320:62:7;;3745:2:8;3320:62:7::1;::::0;::::1;3727:21:8::0;3784:2;3764:18;;;3757:30;-1:-1:-1;;;3803:18:8;;;3796:45;3858:18;;3320:62:7::1;3543:339:8::0;3320:62:7::1;3406:10;3392:25;::::0;;;:13:::1;:25;::::0;;;;:32;;-1:-1:-1;;3392:32:7::1;3420:4;3392:32;::::0;;3442:13:::1;::::0;::::1;::::0;::::1;;;:35;::::0;::::1;;;;;;:::i;:::-;;3434:67;;;::::0;-1:-1:-1;;;3434:67:7;;4089:2:8;3434:67:7::1;::::0;::::1;4071:21:8::0;4128:2;4108:18;;;4101:30;-1:-1:-1;;;4147:18:8;;;4140:49;4206:18;;3434:67:7::1;3887:343:8::0;3434:67:7::1;3533:21;3520:9;::::0;;;::::1;;;:34;::::0;::::1;;;;;;:::i;:::-;;3511:64;;;;-1:-1:-1::0;;;3511:64:7::1;;;;;;;:::i;:::-;3619:8;;3606:9;:21;3720:26;3737:8;;3720:16;:26::i;:::-;3641:143;;;;;;;;:::i;:::-;;;;;;;;;;;;;3585:209;;;;;-1:-1:-1::0;;;3585:209:7::1;;;;;;;;:::i;:::-;-1:-1:-1::0;3843:19:7::1;::::0;3825:7:::1;:14:::0;:37:::1;;3804:119;;;::::0;-1:-1:-1;;;3804:119:7;;6023:2:8;3804:119:7::1;::::0;::::1;6005:21:8::0;6062:2;6042:18;;;6035:30;6101:34;6081:18;;;6074:62;-1:-1:-1;;;6152:18:8;;;6145:33;6195:19;;3804:119:7::1;5821:399:8::0;3804:119:7::1;3934:7;:33:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3934:33:7;;;;;::::1;::::0;;-1:-1:-1;;;;;;3934:33:7::1;3955:10;3934:33;::::0;;2628:22:1;;3257:717:7:o;8553:75::-;1094:13:0;:11;:13::i;:::-;8609:12:7::1;:10;:12::i;:::-;;8553:75::o:0;10762:104::-;1094:13:0;:11;:13::i;:::-;10832:27:7::1;10850:8;10832:17;:27::i;7092:160::-:0;1094:13:0;:11;:13::i;:::-;7203:19:7::1;:42:::0;7092:160::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6582:160:7:-;1094:13:0;:11;:13::i;:::-;6693:19:7::1;:42:::0;6582:160::o;7508:232::-;1094:13:0;:11;:13::i;:::-;7597:20:7::1;7580:13;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;7559:113;;;;-1:-1:-1::0;;;7559:113:7::1;;;;;;;:::i;:::-;7682:51;::::0;7690:10:::1;::::0;7711:21:::1;7682:51:::0;::::1;;;::::0;::::1;::::0;;;7711:21;7690:10;7682:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;4335:657:::0;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;4413::7::1;4396:13;::::0;::::1;::::0;::::1;;;:35;::::0;::::1;;;;;;:::i;:::-;;4388:67;;;::::0;-1:-1:-1;;;4388:67:7;;4089:2:8;4388:67:7::1;::::0;::::1;4071:21:8::0;4128:2;4108:18;;;4101:30;-1:-1:-1;;;4147:18:8;;;4140:49;4206:18;;4388:67:7::1;3887:343:8::0;4388:67:7::1;4486:21;4473:9;::::0;;;::::1;;;:34;::::0;::::1;;;;;;:::i;:::-;;4465:62;;;;-1:-1:-1::0;;;4465:62:7::1;;;;;;;:::i;:::-;4592:15;;4577:12;;:30;;;;:::i;:::-;4558:15;:50;4537:128;;;::::0;-1:-1:-1;;;4537:128:7;;7050:2:8;4537:128:7::1;::::0;::::1;7032:21:8::0;7089:2;7069:18;;;7062:30;7128:33;7108:18;;;7101:61;7179:18;;4537:128:7::1;6848:355:8::0;4537:128:7::1;4751:19;::::0;4734:7:::1;:14:::0;:36:::1;4730:202;;;4786:24;:22;:24::i;:::-;4730:202;;;4841:13;:48:::0;;-1:-1:-1;;4841:48:7::1;::::0;::::1;::::0;;4903:18:::1;:16;:18::i;:::-;1701:1:1::0;2628:22;;4335:657:7:o;3980:349::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;4056:13:7::1;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;4035:107;;;::::0;-1:-1:-1;;;4035:107:7;;7410:2:8;4035:107:7::1;::::0;::::1;7392:21:8::0;7449:2;7429:18;;;7422:30;7488:25;7468:18;;;7461:53;7531:18;;4035:107:7::1;7208:347:8::0;4035:107:7::1;4173:21;4160:9;::::0;;;::::1;;;:34;::::0;::::1;;;;;;:::i;:::-;;4152:62;;;;-1:-1:-1::0;;;4152:62:7::1;;;;;;;:::i;:::-;4224:13;:34:::0;;-1:-1:-1;;4224:34:7::1;::::0;;4240:18:::1;4268:10;:14:::0;4307:15:::1;4292:12;:30:::0;-1:-1:-1;2628:22:1;;3980:349:7:o;5872:704::-;1094:13:0;:11;:13::i;:::-;6067:20:7::1;6050:13;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;6029:113;;;;-1:-1:-1::0;;;6029:113:7::1;;;;;;;:::i;:::-;6190:20;6173:13;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;6152:113;;;;-1:-1:-1::0;;;6152:113:7::1;;;;;;;:::i;:::-;6348:3;6328:16:::0;6296:29:::1;6312:13:::0;6296;:29:::1;:::i;:::-;:48;;;;:::i;:::-;:55;;6275:118;;;::::0;-1:-1:-1;;;6275:118:7;;7762:2:8;6275:118:7::1;::::0;::::1;7744:21:8::0;7801:2;7781:18;;;7774:30;-1:-1:-1;;;7820:18:8;;;7813:46;7876:18;;6275:118:7::1;7560:340:8::0;6275:118:7::1;6427:2;6411:13;:18;6403:46;;;::::0;-1:-1:-1;;;6403:46:7;;8107:2:8;6403:46:7::1;::::0;::::1;8089:21:8::0;8146:2;8126:18;;;8119:30;-1:-1:-1;;;8165:18:8;;;8158:45;8220:18;;6403:46:7::1;7905:339:8::0;6403:46:7::1;6459:12;:28:::0;;;;6497:12:::1;:28:::0;6535:15:::1;:34:::0;5872:704::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;8451:2:8;2161:73:0::1;::::0;::::1;8433:21:8::0;8490:2;8470:18;;;8463:30;8529:34;8509:18;;;8502:62;-1:-1:-1;;;8580:18:8;;;8573:36;8626:19;;2161:73:0::1;8249:402:8::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1217:32:7:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1217:32:7;;-1:-1:-1;1217:32:7;:::o;7258:244::-;7395:76;;-1:-1:-1;;;7395:76:7;;7456:4;7395:76;;;1026:51:8;7354:7:7;;;;-1:-1:-1;;;;;7395:39:7;;;;;999:18:8;;7395:76:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7377:94;7258:244;-1:-1:-1;;;7258:244:7:o;6864:222::-;1094:13:0;:11;:13::i;:::-;6974:20:7::1;6957:13;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;6936:113;;;;-1:-1:-1::0;;;6936:113:7::1;;;;;;;:::i;:::-;7059:8;:20:::0;6864:222::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;8858:2:8;1414:68:0;;;8840:21:8;;;8877:18;;;8870:30;8936:34;8916:18;;;8909:62;8988:18;;1414:68:0;8656:356:8;392:703:3;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:3;;;;;;;;;;;;-1:-1:-1;;;691:10:3;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:3;;-1:-1:-1;837:2:3;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:3;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:3;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:3;;;;;;;;-1:-1:-1;1036:11:3;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:3:o;8634:1076:7:-;8674:7;8731:32;8714:13;;;;;;;:49;;;;;;;;:::i;:::-;;8693:119;;;;-1:-1:-1;;;8693:119:7;;10127:2:8;8693:119:7;;;10109:21:8;10166:2;10146:18;;;10139:30;10205:25;10185:18;;;10178:53;10248:18;;8693:119:7;9925:347:8;8693:119:7;8893:9;;8844:21;;8893:9;;8875:496;;8997:9;9008:17;9029:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;9029:7:7;-1:-1:-1;;;;;9029:12:7;9097:3;9081:12;;9067:11;:26;;;;:::i;:::-;9066:34;;;;:::i;:::-;9029:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9132:9:7;:16;;-1:-1:-1;;9132:16:7;;;;;;;;;;;;-1:-1:-1;8996:122:7;-1:-1:-1;9132:16:7;9167:9;9162:199;;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;-1:-1:-1;;;;;9201:119:7;;9299:3;9283:12;;9269:11;:26;;;;:::i;:::-;9268:34;;;;:::i;:::-;9201:119;;160:25:8;;;148:2;133:18;9201:119:7;;;;;;;9345:1;9338:8;;;;;8634:1076;:::o;9162:199::-;8982:389;;8875:496;9414:12;;9467;;9382:9;;;;-1:-1:-1;;;;;9414:12:7;;;;9483:3;;9453:26;;:11;:26;:::i;:::-;9452:34;;;;:::i;:::-;9414:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9381:119;;;;9515:4;9510:176;;9575:12;;9620;;-1:-1:-1;;;;;9575:12:7;;;;9540:113;;9636:3;;9606:26;;:11;:26;:::i;9510:176::-;9702:1;9695:8;;;;;8634:1076;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;10220:536:7:-;10278:7;10273:453;10295:7;:14;10291:18;;;;10273:453;;;10410:9;10421:17;10442:7;10450:1;10442:10;;;;;;;;;;:::i;:::-;;;;;;;;;;10465:8;;10442:66;;-1:-1:-1;;;;;10442:10:7;;;;10465:8;;10442:66;;:10;:66;10465:8;10442:10;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10409:99;;;;10550:5;10522:13;:25;10536:7;10544:1;10536:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;10536:10:7;10522:25;;;;;;;;;;;;:33;;-1:-1:-1;;10522:33:7;;;;;;;;;;10627:4;10622:94;;10680:7;10688:1;10680:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;10692:8;;10656:45;;160:25:8;;;-1:-1:-1;;;;;10680:10:7;;;;10656:45;;133:18:8;10656:45:7;;;;;;;10622:94;10316:410;;10311:3;;;;;:::i;:::-;;;;10273:453;;;;10735:14;:12;:14::i;5318:548::-;5541:7;5549:1;5541:10;;;;;;;;:::i;:::-;;;;;;;;;;;5586:7;:10;;-1:-1:-1;;;;;5541:10:7;;;;;;5586;;;;;;:::i;:::-;;;;;;;;;;;5618:7;5626:14;;-1:-1:-1;;;;;5586:10:7;;;;5626:18;;5586:10;;5626:18;:::i;:::-;5618:27;;;;;;;;:::i;:::-;;;;;;;;;;;;5503:309;;-1:-1:-1;;11199:2:8;11195:15;;;11191:24;;5503:309:7;;;11179:37:8;;;;11250:15;;;11246:24;;11232:12;;;11225:46;11305:15;;;;;;11287:12;;;11280:46;5667:16:7;11342:12:8;;;11335:28;5751:15:7;11379:12:8;;;11372:28;11416:13;;5503:309:7;;;-1:-1:-1;;5503:309:7;;;;;;;;;5476:350;;5503:309;5476:350;;;;5442:10;:394;5846:13;:11;:13::i;10872:316::-;10920:7;10915:101;10937:7;:14;10933:18;;;;10915:101;;;11000:5;10972:13;:25;10986:7;10994:1;10986:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;10986:10:7;10972:25;;;;;;;;;;;;:33;;-1:-1:-1;;10972:33:7;;;;;;;;;;10953:3;;;;:::i;:::-;;;;10915:101;;;-1:-1:-1;11035:24:7;;;11057:1;11035:24;;;;;;;;;11025:34;;;:7;;:34;:::i;:::-;-1:-1:-1;11069:13:7;:36;;-1:-1:-1;11115:9:7;:13;-1:-1:-1;;11138:17:7;11069:36;11138:17;;;10872:316::o;7936:611::-;8009:16;8047:10;;8061:1;8047:15;8039:48;;;;-1:-1:-1;;;8039:48:7;;11642:2:8;8039:48:7;;;11624:21:8;11681:2;11661:18;;;11654:30;-1:-1:-1;;;11700:18:8;;;11693:50;11760:18;;8039:48:7;11440:344:8;8039:48:7;8134:7;:14;8121:10;;8097:21;;8121:27;;;:::i;:::-;8097:51;;8173:7;8181:13;8173:22;;;;;;;;:::i;:::-;;;;;;;;;;;8158:12;:37;;-1:-1:-1;;;;;;8158:37:7;-1:-1:-1;;;;;8173:22:7;;;8158:37;;;;;;8217:12;:10;:12::i;:::-;8206:23;;8244:8;8256:1;8244:13;8240:251;;8273:14;:12;:14::i;:::-;7968:579;;7936:611::o;8240:251::-;8330:9;;:13;;8342:1;8330:13;:::i;:::-;8318:9;:25;;;8374:1;8361:14;8357:124;;8407:1;8395:9;:13;8426:18;:16;:18::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;388:286:8;447:6;500:2;488:9;479:7;475:23;471:32;468:52;;;516:1;513;506:12;468:52;542:23;;-1:-1:-1;;;;;594:31:8;;584:42;;574:70;;640:1;637;630:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:8;;679:180;-1:-1:-1;679:180:8:o;1270:127::-;1331:10;1326:3;1322:20;1319:1;1312:31;1362:4;1359:1;1352:15;1386:4;1383:1;1376:15;1402:248;1551:2;1536:18;;1584:1;1573:13;;1563:47;;1590:18;;:::i;:::-;1619:25;;;1402:248;:::o;1863:244::-;2008:2;1993:18;;2041:1;2030:13;;2020:47;;2047:18;;:::i;2112:316::-;2189:6;2197;2205;2258:2;2246:9;2237:7;2233:23;2229:32;2226:52;;;2274:1;2271;2264:12;2226:52;-1:-1:-1;;2297:23:8;;;2367:2;2352:18;;2339:32;;-1:-1:-1;2418:2:8;2403:18;;;2390:32;;2112:316;-1:-1:-1;2112:316:8:o;2433:184::-;2503:6;2556:2;2544:9;2535:7;2531:23;2527:32;2524:52;;;2572:1;2569;2562:12;2524:52;-1:-1:-1;2595:16:8;;2433:184;-1:-1:-1;2433:184:8:o;2901:277::-;2968:6;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3069:9;3063:16;3122:5;3115:13;3108:21;3101:5;3098:32;3088:60;;3144:1;3141;3134:12;3183:355;3385:2;3367:21;;;3424:2;3404:18;;;3397:30;3463:33;3458:2;3443:18;;3436:61;3529:2;3514:18;;3183:355::o;4235:339::-;4437:2;4419:21;;;4476:2;4456:18;;;4449:30;-1:-1:-1;;;4510:2:8;4495:18;;4488:45;4565:2;4550:18;;4235:339::o;4579:258::-;4651:1;4661:113;4675:6;4672:1;4669:13;4661:113;;;4751:11;;;4745:18;4732:11;;;4725:39;4697:2;4690:10;4661:113;;;4792:6;4789:1;4786:13;4783:48;;;4827:1;4818:6;4813:3;4809:16;4802:27;4783:48;;4579:258;;;:::o;4842:586::-;5184:30;5179:3;5172:43;5154:3;5244:6;5238:13;5260:62;5315:6;5310:2;5305:3;5301:12;5294:4;5286:6;5282:17;5260:62;:::i;:::-;-1:-1:-1;;;5381:2:8;5341:16;;;;5373:11;;;5366:27;-1:-1:-1;5417:4:8;5409:13;;4842:586;-1:-1:-1;4842:586:8:o;5433:383::-;5582:2;5571:9;5564:21;5545:4;5614:6;5608:13;5657:6;5652:2;5641:9;5637:18;5630:34;5673:66;5732:6;5727:2;5716:9;5712:18;5707:2;5699:6;5695:15;5673:66;:::i;:::-;5800:2;5779:15;-1:-1:-1;;5775:29:8;5760:45;;;;5807:2;5756:54;;5433:383;-1:-1:-1;;5433:383:8:o;6225:353::-;6427:2;6409:21;;;6466:2;6446:18;;;6439:30;6505:31;6500:2;6485:18;;6478:59;6569:2;6554:18;;6225:353::o;6583:127::-;6644:10;6639:3;6635:20;6632:1;6625:31;6675:4;6672:1;6665:15;6699:4;6696:1;6689:15;6715:128;6755:3;6786:1;6782:6;6779:1;6776:13;6773:39;;;6792:18;;:::i;:::-;-1:-1:-1;6828:9:8;;6715:128::o;9017:135::-;9056:3;9077:17;;;9074:43;;9097:18;;:::i;:::-;-1:-1:-1;9144:1:8;9133:13;;9017:135::o;9157:127::-;9218:10;9213:3;9209:20;9206:1;9199:31;9249:4;9246:1;9239:15;9273:4;9270:1;9263:15;9289:120;9329:1;9355;9345:35;;9360:18;;:::i;:::-;-1:-1:-1;9394:9:8;;9289:120::o;9414:127::-;9475:10;9470:3;9466:20;9463:1;9456:31;9506:4;9503:1;9496:15;9530:4;9527:1;9520:15;9546:125;9586:4;9614:1;9611;9608:8;9605:34;;;9619:18;;:::i;:::-;-1:-1:-1;9656:9:8;;9546:125::o;9676:112::-;9708:1;9734;9724:35;;9739:18;;:::i;:::-;-1:-1:-1;9773:9:8;;9676:112::o;9793:127::-;9854:10;9849:3;9845:20;9842:1;9835:31;9885:4;9882:1;9875:15;9909:4;9906:1;9899:15;10277:168;10317:7;10383:1;10379;10375:6;10371:14;10368:1;10365:21;10360:1;10353:9;10346:17;10342:45;10339:71;;;10390:18;;:::i;:::-;-1:-1:-1;10430:9:8;;10277:168::o;10660:175::-;10697:3;10741:4;10734:5;10730:16;10770:4;10761:7;10758:17;10755:43;;10778:18;;:::i;:::-;10827:1;10814:15;;10660:175;-1:-1:-1;;10660:175:8:o",
    "language": "Solidity",
    "natspec": {
        "methods": {
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "kind": "dev",
        "version": 1
    },
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xD718AEA9 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xFAEA18C6 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xFE56F5A0 EQ PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD718AEA9 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xEE44ABB2 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xF2640E10 EQ PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4989917 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xB4989917 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xBCDB446B EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xBE55C9C9 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xCAA6FEA4 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xCD8CC844 EQ PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x95D12000 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x9BB57718 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0xA6D811EA EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F8C70CF GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x59FE8C84 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x59FE8C84 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x81447999 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x81FB84FB EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F8C70CF EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x4FB2E45D EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x501D0780 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x56923710 EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D97902F GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2D97902F EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x382E5E7A EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x4A8466E9 EQ PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4283412 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xB3FF280 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x16114ACD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x2B58150B EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x24C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x6F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x307 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x950 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x3D5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x971 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x4DD SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1759 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x9E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0xB38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x55B CALLDATASIZE PUSH1 0x4 PUSH2 0x176D JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x57B CALLDATASIZE PUSH1 0x4 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0xDBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xDE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x5FE PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0x17B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6EE PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E48195B9D195C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x7AB PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E48139BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80D PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE EQ PUSH2 0x83A PUSH1 0x7 SLOAD PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D204E756D626572207265616368656420666F7220206C6F7474 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657279 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SSTORE JUMP JUMPDEST PUSH2 0x927 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x92F PUSH2 0x1005 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x93A PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x92F DUP2 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x94B PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x958 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x962 PUSH1 0x0 PUSH2 0x1247 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x96C PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x979 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x92F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA25 JUMPI PUSH2 0xA25 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E48139BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA87 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH2 0xAB4 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST TIMESTAMP GT PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E206C6F7474657279206475726174696F6E206E6F742070617373656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB16 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x200 OR SWAP1 SSTORE PUSH2 0xB32 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7D PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F747465727920416C72656164792073746172746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBE9 JUMPI PUSH2 0xBE9 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0xE SSTORE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xC28 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC81 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x64 DUP2 PUSH2 0xCAB DUP5 DUP7 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST GT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x63616E206E6F74206F7665722031303 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x32 DUP4 LT PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x63616E206E6F74206C65737320353 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x9 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH2 0xD4E PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x715 JUMP JUMPDEST PUSH2 0x92F DUP2 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE53 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE62 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE80 JUMPI PUSH2 0xE80 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xF23 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xF4D JUMPI DUP1 PUSH2 0xF37 DUP2 PUSH2 0x194F JUMP JUMPDEST SWAP2 POP PUSH2 0xF46 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x197E JUMP JUMPDEST SWAP2 POP PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF68 JUMPI PUSH2 0xF68 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF92 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xFFD JUMPI PUSH2 0xFA7 PUSH1 0x1 DUP4 PUSH2 0x19A8 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB4 PUSH1 0xA DUP7 PUSH2 0x19BF JUMP JUMPDEST PUSH2 0xFBF SWAP1 PUSH1 0x30 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFD4 JUMPI PUSH2 0xFD4 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xFF6 PUSH1 0xA DUP7 PUSH2 0x197E JUMP JUMPDEST SWAP5 POP PUSH2 0xF96 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1025 JUMPI PUSH2 0x1025 PUSH2 0x1729 JUMP JUMPDEST EQ PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2073656E64207072697A652077726F6E67207374617465000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x10 SLOAD SELFBALANCE SWAP1 PUSH1 0xFF AND PUSH2 0x1183 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1093 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x64 PUSH1 0xA SLOAD DUP6 PUSH2 0x10AC SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND PUSH2 0x1180 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7A4C4FDF5D3172470D96D64C965B30DE694852175EFC7A6B546FB3BDBF76D178 PUSH1 0x64 PUSH1 0xA SLOAD DUP7 PUSH2 0x115B SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x1165 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x11A7 SWAP1 DUP7 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11ED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x123D JUMPI PUSH1 0x3 SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x977E2C32BE07C8AA27BFE58F2BF200E11ECA859B94D36E76E645FCAF1D4CC946 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x115B SWAP1 DUP8 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x12C0 JUMPI PUSH2 0x12C0 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x131C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x133D JUMPI PUSH2 0x133D PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 PUSH2 0x13DA JUMPI PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0x1198B3902400A4722F08A21EB834E8F872109A5DAB83213639D3670A10D8D40A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP DUP1 DUP1 PUSH2 0x13E7 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x129A JUMP JUMPDEST POP PUSH2 0x962 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x140C JUMPI PUSH2 0x140C PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x1461 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1471 JUMPI PUSH2 0x1471 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP6 DUP7 SHL DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 DUP5 SHL DUP3 AND PUSH1 0x34 DUP5 ADD MSTORE SWAP1 SWAP3 SHL SWAP1 SWAP2 AND PUSH1 0x48 DUP3 ADD MSTORE DIFFICULTY PUSH1 0x5C DUP3 ADD MSTORE TIMESTAMP PUSH1 0x7C DUP3 ADD MSTORE PUSH1 0x9C ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x4 SSTORE PUSH2 0x962 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1556 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1510 JUMPI PUSH2 0x1510 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x154E DUP2 PUSH2 0x1A08 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14E7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0x1574 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0x166D JUMP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x0 PUSH1 0xD SSTORE PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x0 SUB PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x63616E742066696E642072616E646F6D6E657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x715 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x15E8 SWAP2 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15FD JUMPI PUSH2 0x15FD PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1630 PUSH2 0x1005 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0x0 SUB PUSH2 0x1646 JUMPI PUSH2 0x1642 PUSH2 0x14E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1654 SWAP1 PUSH1 0x1 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x3 SUB PUSH2 0x1642 JUMPI PUSH1 0x0 PUSH1 0xD SSTORE PUSH2 0x1642 PUSH2 0x13F8 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x16C2 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x16C2 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x168D JUMP JUMPDEST POP PUSH2 0x16CE SWAP3 SWAP2 POP PUSH2 0x16D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1753 JUMPI PUSH2 0x1753 PUSH2 0x1729 JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x1753 JUMPI PUSH2 0x1753 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x131BDD1D195C9E4814DD1BDC1C1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x184F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1837 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x185E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x456E74727920666565206D75737420626520657175616C20746F3A2000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x189C DUP2 PUSH1 0x1C DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1834 JUMP JUMPDEST PUSH4 0x408AE8D PUSH1 0xE3 SHL PUSH1 0x1C SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18D6 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E204E6F74207768696C65206C6F7474657279206F6E676F696E67000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x194A JUMPI PUSH2 0x194A PUSH2 0x1921 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1961 JUMPI PUSH2 0x1961 PUSH2 0x1921 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x1968 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19BA JUMPI PUSH2 0x19BA PUSH2 0x1921 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19CE JUMPI PUSH2 0x19CE PUSH2 0x1968 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A03 PUSH2 0x1921 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1A1E JUMPI PUSH2 0x1A1E PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 CHAINID 0xC6 0x27 0xE6 0xB7 PUSH16 0x1225CD27A0F5ECA081456248A46C3AF0 0x5F 0xEB XOR ADDMOD PUSH31 0x601B1A5564736F6C634300080E003300000000000000000000000000000000 ",
    "sha1": "114131d2b9b53cd37da65623e8f17a86205ef631",
    "source": "pragma solidity ^0.8.13;\n\n//import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n//import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\ncontract MyLottery is Ownable, ReentrancyGuard {\n    address payable[] public players;\n    address payable public recentWinner;\n    //address public link;\n    uint256 public randomness;\n    uint256 public minumumParticipants;\n    uint256 public maximumParticipants;\n    uint256 public EntryFee;\n    mapping(address => bool) public isUserEntered;\n    //AggregatorV3Interface internal ethUsdPriceFeed;\n    uint256 public pricePercent;\n    uint256 public ownerPercent;\n    uint256 public contractPercent;\n    uint256 public maxTryCounter;\n    uint256 public errorFlag;\n    uint256 public lotteryStart;\n    uint256 public lotteryDuration;\n    bool public ownerSent;\n    //bool public winnerSent;\n\n    //timestamp ekliyip closeda required bilmem kac saat ge\u00e7meden bitemez\n\n    //maxTryCounter  end lottery icin calismali\n    //CALCULATING_WINNER da takilabilir\n    //lottery no id filan belki 1 le ba\u015fl\u0131y\u0131p art\u0131r\u0131p\n    // kazanan i\u00e7in emit event tutar filan\n    //hi\u00e7 kimse kat\u0131lmam\u0131\u015fsa end lotterye gerek yok ilerde python schedule event laz\u0131m olucak\n\n    enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    LOTTERY_STATE public lottery_state;\n\n    enum EMERGENCY {\n        STOPPED,\n        NOT_STOPPED\n    }\n    EMERGENCY public emergency;\n    uint256 public fee;\n    bytes32 public keyhash;\n    event RequestedRandomness(bytes32 requestId);\n    //event ethSendError(address cannotEthSend);\n    event cantSendEthOwner(address indexed to, uint256 value);\n    event cantSendEthWinner(address indexed to, uint256 value);\n    event cantSendEthParticipants(address indexed to, uint256 value);\n\n    // 0\n    // 1\n    // 2\n\n    constructor() public {\n        EntryFee = 0.05 * (10**18); //bura deiscek\n        lottery_state = LOTTERY_STATE.CLOSED;\n        emergency = EMERGENCY.NOT_STOPPED;\n        minumumParticipants = 3;\n        maximumParticipants = 100;\n        pricePercent = 65;\n        ownerPercent = 20;\n        contractPercent = 15;\n        maxTryCounter = 3;\n        lotteryDuration = 300; //28800 saniye 8 saat\n    }\n\n    /*nonReentrant*/\n    function enter_lottery() public payable nonReentrant {\n        require(isUserEntered[msg.sender] == false, \"Already entered\");\n        isUserEntered[msg.sender] = true;\n        require(lottery_state == LOTTERY_STATE.OPEN, \"Lottery Not started\");\n        require((emergency == EMERGENCY.NOT_STOPPED), \"Lottery Stopped\");\n        require(\n            msg.value == EntryFee,\n            string.concat(\n                \"Entry fee must be equal to: \",\n                Strings.toString(EntryFee),\n                \" Eth\"\n            )\n        );\n        require(\n            players.length <= maximumParticipants,\n            \"Maximum Number reached for  lottery\"\n        );\n\n        players.push(payable(msg.sender));\n    }\n\n    function start_lottery() public nonReentrant {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Lottery Already started\"\n        );\n        require(emergency == EMERGENCY.NOT_STOPPED, \"Lottery Stopped\");\n        lottery_state = LOTTERY_STATE.OPEN;\n        randomness = 0;\n        lotteryStart = block.timestamp;\n    }\n\n    function end_lottery() public nonReentrant {\n        require(lottery_state == LOTTERY_STATE.OPEN, \"Lottery Not started\");\n        require(emergency == EMERGENCY.NOT_STOPPED, \"Lottery Stopped\");\n        require(\n            block.timestamp > (lotteryStart + lotteryDuration),\n            \"min lottery duration not passed\"\n        );\n        //some\n        //timestamp requirede gerekiyor\n        if (players.length < minumumParticipants) {\n            not_enough_participant();\n        } else {\n            lottery_state = LOTTERY_STATE.CALCULATING_WINNER;\n            calculate_winner();\n        }\n\n        //ERC20 yeterli link var m\u0131 diye kontrol et\n    }\n\n    //if cant find winner something happens buna gerek kalmadi sanki\n    /*function retry_winner() public onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \"wrong state\"\n        );\n        require(randomness == 0, \"not random\");\n        calculate_winner();\n    }*/\n\n    function calculate_winner() internal {\n        //if players.length>\n\n        //another random not very very random\n\n        randomness = uint256(\n            keccak256(\n                abi.encodePacked(\n                    players[0], //  seenable\n                    players[1],\n                    players[players.length - 1],\n                    block.difficulty, // can actually be manipulated by the miners!\n                    block.timestamp // timestamp is predictable\n                )\n            )\n        );\n        afterFinish();\n    }\n\n    function setPrizePercents(\n        uint256 _pricePercent,\n        uint256 _ownerPercent,\n        uint256 _contractPercent\n    ) external onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can Not while lottery ongoing\"\n        );\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can Not while lottery ongoing\"\n        );\n        require(\n            _pricePercent + _ownerPercent + _contractPercent <= 100,\n            \"can not over 100\"\n        );\n        require(_pricePercent < 50, \"can not less 50\");\n        pricePercent = _pricePercent;\n        ownerPercent = _ownerPercent;\n        contractPercent = _contractPercent;\n    }\n\n    function setMinumumParticipants(uint256 _minumumParticipants)\n        external\n        onlyOwner\n    {\n        minumumParticipants = _minumumParticipants;\n    }\n\n    function setLotteryDuration(uint256 _duration) external onlyOwner {\n        lotteryDuration = _duration;\n    }\n\n    function setEntranceFee(uint256 _entryFee) external onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can Not while lottery ongoing\"\n        );\n        EntryFee = _entryFee;\n    }\n\n    function setMaximumParticipants(uint256 _maximumParticipants)\n        external\n        onlyOwner\n    {\n        maximumParticipants = _maximumParticipants;\n    }\n\n    function getBalance(address _tokenContractAddress)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 balance = IERC20(_tokenContractAddress).balanceOf(\n            address(this)\n        );\n        return balance;\n    }\n\n    function recoverEth() external onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can Not while lottery ongoing\"\n        );\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function recoverTokens(address tokenAddress) external onlyOwner {\n        IERC20 token = IERC20(tokenAddress);\n        token.transfer(msg.sender, token.balanceOf(address(this)));\n    }\n\n    function afterFinish() internal {\n        //mapping clear unutma\n        uint256 sentFlag = 0;\n        require(randomness != 0, \"cant find randomness\");\n        uint256 indexOfWinner = randomness % players.length;\n        recentWinner = players[indexOfWinner];\n\n        sentFlag = sendPrizes();\n\n        if (sentFlag == 0) {\n            clearPlayers();\n        } else {\n            errorFlag = errorFlag + 1;\n            if (errorFlag == 3) {\n                errorFlag = 0;\n                calculate_winner(); //yeni winner secicez\n            }\n        }\n\n        //require(sent, \"Failed to send Ether\");\n    }\n\n    function retrySendPrizes() external onlyOwner {\n        sendPrizes();\n    }\n\n    function sendPrizes() internal returns (uint256) {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \" send prize wrong state\"\n        );\n        uint256 total_prize = address(this).balance;\n        if (\n            !ownerSent\n        ) //recentWinner.transfer(total_prize * (pricePercent / 100));\n        {\n            (bool sent, bytes memory data) = owner().call{\n                value: (total_prize * ownerPercent) / 100\n            }(\"\");\n            ownerSent = sent;\n            if (!ownerSent) {\n                emit cantSendEthOwner(\n                    owner(),\n                    (total_prize * ownerPercent) / 100\n                );\n                return 1;\n            }\n        }\n\n        (bool sent, bytes memory data) = recentWinner.call{\n            value: (total_prize * pricePercent) / 100\n        }(\"\");\n        if (!sent) {\n            emit cantSendEthWinner(\n                recentWinner,\n                (total_prize * pricePercent) / 100\n            );\n            return 1;\n        }\n        return 0;\n    }\n\n    /*function test(address sender)\n        external\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 total_prize = address(this).balance;\n        (bool sent, bytes memory data) = sender.call{\n            value: ((total_prize * pricePercent) / 100)\n        }(\"\");\n        require(sent, \"Failed to send Ether\");\n        uint256 calc_prize = total_prize * (pricePercent / 100);\n        return (calc_prize, total_prize, pricePercent);\n    }*/\n\n    function not_enough_participant() internal {\n        for (uint8 i = 0; i < players.length; i++) {\n            //players[i].transfer(EntryFee);\n            // burasi de\u011fi\u015fecek\n            (bool sent, bytes memory data) = players[i].call{value: EntryFee}(\n                \"\"\n            );\n            isUserEntered[players[i]] = false;\n            //require(sent, \"Failed to send Ether\");\n            if (!sent) {\n                emit cantSendEthParticipants(players[i], EntryFee);\n            }\n        }\n        clearPlayers();\n    }\n\n    function transferOwner(address newOwner) external onlyOwner {\n        transferOwnership(newOwner);\n    }\n\n    function clearPlayers() internal {\n        for (uint8 i = 0; i < players.length; i++) {\n            isUserEntered[players[i]] = false;\n        }\n        players = new address payable[](0);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        errorFlag = 0;\n        ownerSent = false;\n        //randomness = 0;\n    }\n}\n",
    "sourceMap": "1164:10026:7:-:0;;;2830:400;;;;;;;;;-1:-1:-1;936:32:0;719:10:2;936:18:0;:32::i;:::-;1701:1:1;1806:22;;2872:15:7;2861:8;:26;2912:13;:36;;-1:-1:-1;;2958:33:7;;;;;3023:1;3001:19;:23;;;3056:3;3034:19;:25;3084:2;3069:12;:17;3111:2;-1:-1:-1;3096:17:7;3141:2;-1:-1:-1;3123:20:7;;;3153:13;:17;;;;3198:3;3180:21;;1164:10026;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:127:8:-;1164:10026:7;;;;;;",
    "sourcePath": "contracts/MyLottery.sol",
    "deployment": {
        "address": "0x4F598FbfD964b567E09c23eaF507a4FA4d186458",
        "chainid": "97",
        "blockHeight": 23961200
    }
}